{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyM5ykmjBgY9rmfmY5uMPbY2",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/RadenOcka17/UAS-DS01/blob/main/UAS_DS01.py\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# 1.Pengumpulan Data"
      ],
      "metadata": {
        "id": "-6u0r-zEWKZ2"
      }
    },
    {
      "cell_type": "code",
      "execution_count": 293,
      "metadata": {
        "id": "49EY3tjPUj9k"
      },
      "outputs": [],
      "source": [
        "import pandas as pd\n",
        "import numpy as np"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "file_path = \"/content/water_potability.csv\"\n",
        "water_data = pd.read_csv(file_path)"
      ],
      "metadata": {
        "id": "hnPn0AIIVIAW"
      },
      "execution_count": 294,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "water_data.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 226
        },
        "id": "z9bqoyxjV4fl",
        "outputId": "8290e085-e4b7-479f-f6a3-edaa737ea756"
      },
      "execution_count": 295,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "         ph    Hardness        Solids  Chloramines     Sulfate  Conductivity  \\\n",
              "0       NaN  204.890455  20791.318981     7.300212  368.516441    564.308654   \n",
              "1  3.716080  129.422921  18630.057858     6.635246         NaN    592.885359   \n",
              "2  8.099124  224.236259  19909.541732     9.275884         NaN    418.606213   \n",
              "3  8.316766  214.373394  22018.417441     8.059332  356.886136    363.266516   \n",
              "4  9.092223  181.101509  17978.986339     6.546600  310.135738    398.410813   \n",
              "\n",
              "   Organic_carbon  Trihalomethanes  Turbidity  Potability  \n",
              "0       10.379783        86.990970   2.963135           0  \n",
              "1       15.180013        56.329076   4.500656           0  \n",
              "2       16.868637        66.420093   3.055934           0  \n",
              "3       18.436524       100.341674   4.628771           0  \n",
              "4       11.558279        31.997993   4.075075           0  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-8e7673a1-5662-4ae4-ace1-2fb6b359f688\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>ph</th>\n",
              "      <th>Hardness</th>\n",
              "      <th>Solids</th>\n",
              "      <th>Chloramines</th>\n",
              "      <th>Sulfate</th>\n",
              "      <th>Conductivity</th>\n",
              "      <th>Organic_carbon</th>\n",
              "      <th>Trihalomethanes</th>\n",
              "      <th>Turbidity</th>\n",
              "      <th>Potability</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>NaN</td>\n",
              "      <td>204.890455</td>\n",
              "      <td>20791.318981</td>\n",
              "      <td>7.300212</td>\n",
              "      <td>368.516441</td>\n",
              "      <td>564.308654</td>\n",
              "      <td>10.379783</td>\n",
              "      <td>86.990970</td>\n",
              "      <td>2.963135</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>3.716080</td>\n",
              "      <td>129.422921</td>\n",
              "      <td>18630.057858</td>\n",
              "      <td>6.635246</td>\n",
              "      <td>NaN</td>\n",
              "      <td>592.885359</td>\n",
              "      <td>15.180013</td>\n",
              "      <td>56.329076</td>\n",
              "      <td>4.500656</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>8.099124</td>\n",
              "      <td>224.236259</td>\n",
              "      <td>19909.541732</td>\n",
              "      <td>9.275884</td>\n",
              "      <td>NaN</td>\n",
              "      <td>418.606213</td>\n",
              "      <td>16.868637</td>\n",
              "      <td>66.420093</td>\n",
              "      <td>3.055934</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>8.316766</td>\n",
              "      <td>214.373394</td>\n",
              "      <td>22018.417441</td>\n",
              "      <td>8.059332</td>\n",
              "      <td>356.886136</td>\n",
              "      <td>363.266516</td>\n",
              "      <td>18.436524</td>\n",
              "      <td>100.341674</td>\n",
              "      <td>4.628771</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>9.092223</td>\n",
              "      <td>181.101509</td>\n",
              "      <td>17978.986339</td>\n",
              "      <td>6.546600</td>\n",
              "      <td>310.135738</td>\n",
              "      <td>398.410813</td>\n",
              "      <td>11.558279</td>\n",
              "      <td>31.997993</td>\n",
              "      <td>4.075075</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8e7673a1-5662-4ae4-ace1-2fb6b359f688')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-8e7673a1-5662-4ae4-ace1-2fb6b359f688 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-8e7673a1-5662-4ae4-ace1-2fb6b359f688');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-d3b4fbf7-25a2-4070-8851-e1c3a2a0e8a6\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d3b4fbf7-25a2-4070-8851-e1c3a2a0e8a6')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-d3b4fbf7-25a2-4070-8851-e1c3a2a0e8a6 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "water_data",
              "summary": "{\n  \"name\": \"water_data\",\n  \"rows\": 3276,\n  \"fields\": [\n    {\n      \"column\": \"ph\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.5943195187088117,\n        \"min\": 0.0,\n        \"max\": 13.999999999999998,\n        \"num_unique_values\": 2785,\n        \"samples\": [\n          6.569053876389385,\n          9.271355446767778,\n          8.92790592593881\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Hardness\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 32.879761476294185,\n        \"min\": 47.432,\n        \"max\": 323.124,\n        \"num_unique_values\": 3276,\n        \"samples\": [\n          183.5211070261417,\n          188.9135411469536,\n          224.05887682392927\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Solids\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 8768.570827785932,\n        \"min\": 320.942611274359,\n        \"max\": 61227.19600771213,\n        \"num_unique_values\": 3276,\n        \"samples\": [\n          20461.252710219946,\n          32873.820021715685,\n          23264.10996772913\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Chloramines\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.58308488903971,\n        \"min\": 0.3520000000000003,\n        \"max\": 13.127000000000002,\n        \"num_unique_values\": 3276,\n        \"samples\": [\n          7.333212177578906,\n          6.791509363412849,\n          5.92236704115349\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Sulfate\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 41.416840461672685,\n        \"min\": 129.00000000000003,\n        \"max\": 481.0306423059972,\n        \"num_unique_values\": 2495,\n        \"samples\": [\n          324.64407957923544,\n          370.121384654358,\n          329.12773842254506\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Conductivity\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 80.82406405111182,\n        \"min\": 181.483753985146,\n        \"max\": 753.3426195583046,\n        \"num_unique_values\": 3276,\n        \"samples\": [\n          356.3690224100897,\n          336.56150104700754,\n          387.971335796834\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Organic_carbon\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3.308161999126868,\n        \"min\": 2.1999999999999886,\n        \"max\": 28.30000000000001,\n        \"num_unique_values\": 3276,\n        \"samples\": [\n          20.179028868493845,\n          14.706810313722087,\n          13.40673745495127\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Trihalomethanes\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 16.17500842221865,\n        \"min\": 0.7379999999999995,\n        \"max\": 124.0,\n        \"num_unique_values\": 3114,\n        \"samples\": [\n          66.163439242252,\n          42.844510851301166,\n          47.06639219544294\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Turbidity\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.7803824084854116,\n        \"min\": 1.45,\n        \"max\": 6.739,\n        \"num_unique_values\": 3276,\n        \"samples\": [\n          4.886633785371213,\n          4.562197671215202,\n          2.487968647002356\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Potability\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 295
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "water_data.tail()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 226
        },
        "id": "d2llMzo0WiRV",
        "outputId": "efa58fa8-e23b-48e1-8a68-65a999f998b6"
      },
      "execution_count": 296,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "            ph    Hardness        Solids  Chloramines     Sulfate  \\\n",
              "3271  4.668102  193.681735  47580.991603     7.166639  359.948574   \n",
              "3272  7.808856  193.553212  17329.802160     8.061362         NaN   \n",
              "3273  9.419510  175.762646  33155.578218     7.350233         NaN   \n",
              "3274  5.126763  230.603758  11983.869376     6.303357         NaN   \n",
              "3275  7.874671  195.102299  17404.177061     7.509306         NaN   \n",
              "\n",
              "      Conductivity  Organic_carbon  Trihalomethanes  Turbidity  Potability  \n",
              "3271    526.424171       13.894419        66.687695   4.435821           1  \n",
              "3272    392.449580       19.903225              NaN   2.798243           1  \n",
              "3273    432.044783       11.039070        69.845400   3.298875           1  \n",
              "3274    402.883113       11.168946        77.488213   4.708658           1  \n",
              "3275    327.459760       16.140368        78.698446   2.309149           1  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-58f85bfd-5783-4352-a351-f87e8b1e0973\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>ph</th>\n",
              "      <th>Hardness</th>\n",
              "      <th>Solids</th>\n",
              "      <th>Chloramines</th>\n",
              "      <th>Sulfate</th>\n",
              "      <th>Conductivity</th>\n",
              "      <th>Organic_carbon</th>\n",
              "      <th>Trihalomethanes</th>\n",
              "      <th>Turbidity</th>\n",
              "      <th>Potability</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>3271</th>\n",
              "      <td>4.668102</td>\n",
              "      <td>193.681735</td>\n",
              "      <td>47580.991603</td>\n",
              "      <td>7.166639</td>\n",
              "      <td>359.948574</td>\n",
              "      <td>526.424171</td>\n",
              "      <td>13.894419</td>\n",
              "      <td>66.687695</td>\n",
              "      <td>4.435821</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3272</th>\n",
              "      <td>7.808856</td>\n",
              "      <td>193.553212</td>\n",
              "      <td>17329.802160</td>\n",
              "      <td>8.061362</td>\n",
              "      <td>NaN</td>\n",
              "      <td>392.449580</td>\n",
              "      <td>19.903225</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2.798243</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3273</th>\n",
              "      <td>9.419510</td>\n",
              "      <td>175.762646</td>\n",
              "      <td>33155.578218</td>\n",
              "      <td>7.350233</td>\n",
              "      <td>NaN</td>\n",
              "      <td>432.044783</td>\n",
              "      <td>11.039070</td>\n",
              "      <td>69.845400</td>\n",
              "      <td>3.298875</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3274</th>\n",
              "      <td>5.126763</td>\n",
              "      <td>230.603758</td>\n",
              "      <td>11983.869376</td>\n",
              "      <td>6.303357</td>\n",
              "      <td>NaN</td>\n",
              "      <td>402.883113</td>\n",
              "      <td>11.168946</td>\n",
              "      <td>77.488213</td>\n",
              "      <td>4.708658</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3275</th>\n",
              "      <td>7.874671</td>\n",
              "      <td>195.102299</td>\n",
              "      <td>17404.177061</td>\n",
              "      <td>7.509306</td>\n",
              "      <td>NaN</td>\n",
              "      <td>327.459760</td>\n",
              "      <td>16.140368</td>\n",
              "      <td>78.698446</td>\n",
              "      <td>2.309149</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-58f85bfd-5783-4352-a351-f87e8b1e0973')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-58f85bfd-5783-4352-a351-f87e8b1e0973 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-58f85bfd-5783-4352-a351-f87e8b1e0973');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-70d35ea3-9c27-4361-b6b7-6c57c5195633\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-70d35ea3-9c27-4361-b6b7-6c57c5195633')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-70d35ea3-9c27-4361-b6b7-6c57c5195633 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "summary": "{\n  \"name\": \"water_data\",\n  \"rows\": 5,\n  \"fields\": [\n    {\n      \"column\": \"ph\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2.013579543384908,\n        \"min\": 4.668101687405915,\n        \"max\": 9.41951031641321,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          7.808856017557415,\n          7.874671357791283,\n          9.41951031641321\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Hardness\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 20.02490204179854,\n        \"min\": 175.76264629629543,\n        \"max\": 230.60375750846123,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          193.55321164822675,\n          195.10229858610904,\n          175.76264629629543\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Solids\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 14672.746175690563,\n        \"min\": 11983.869376336364,\n        \"max\": 47580.99160333534,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          17329.802160103376,\n          17404.17706105066,\n          33155.578218312294\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Chloramines\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.6392783147227826,\n        \"min\": 6.303356534249105,\n        \"max\": 8.061361987849569,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          8.061361987849569,\n          7.509305856927908,\n          7.350233233214412\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Sulfate\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": null,\n        \"min\": 359.94857436696,\n        \"max\": 359.94857436696,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          359.94857436696\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Conductivity\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 72.48562512477005,\n        \"min\": 327.4597604610721,\n        \"max\": 526.4241709223593,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          392.4495795653845\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Organic_carbon\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3.718241379386663,\n        \"min\": 11.039069688154314,\n        \"max\": 19.90322518345954,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          19.90322518345954\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Trihalomethanes\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5.839050498807204,\n        \"min\": 66.68769478539706,\n        \"max\": 78.69844632549504,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          69.84540029205144\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Turbidity\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.0352706362765816,\n        \"min\": 2.309149056634923,\n        \"max\": 4.708658467526655,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          2.7982428424180505\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Potability\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 1,\n        \"max\": 1,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 296
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# 2.Menelaah Data"
      ],
      "metadata": {
        "id": "sCgTznJzWS2e"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "water_data.info()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "92Ew7LcpV-2e",
        "outputId": "744f72b3-c4c7-4285-8c0d-93f90d249d11"
      },
      "execution_count": 297,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 3276 entries, 0 to 3275\n",
            "Data columns (total 10 columns):\n",
            " #   Column           Non-Null Count  Dtype  \n",
            "---  ------           --------------  -----  \n",
            " 0   ph               2785 non-null   float64\n",
            " 1   Hardness         3276 non-null   float64\n",
            " 2   Solids           3276 non-null   float64\n",
            " 3   Chloramines      3276 non-null   float64\n",
            " 4   Sulfate          2495 non-null   float64\n",
            " 5   Conductivity     3276 non-null   float64\n",
            " 6   Organic_carbon   3276 non-null   float64\n",
            " 7   Trihalomethanes  3114 non-null   float64\n",
            " 8   Turbidity        3276 non-null   float64\n",
            " 9   Potability       3276 non-null   int64  \n",
            "dtypes: float64(9), int64(1)\n",
            "memory usage: 256.1 KB\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "water_data.describe()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 320
        },
        "id": "og6B0lE-WrYt",
        "outputId": "9f1b1bbf-63a8-4f3f-fe48-68ecf9b6c38d"
      },
      "execution_count": 298,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                ph     Hardness        Solids  Chloramines      Sulfate  \\\n",
              "count  2785.000000  3276.000000   3276.000000  3276.000000  2495.000000   \n",
              "mean      7.080795   196.369496  22014.092526     7.122277   333.775777   \n",
              "std       1.594320    32.879761   8768.570828     1.583085    41.416840   \n",
              "min       0.000000    47.432000    320.942611     0.352000   129.000000   \n",
              "25%       6.093092   176.850538  15666.690297     6.127421   307.699498   \n",
              "50%       7.036752   196.967627  20927.833607     7.130299   333.073546   \n",
              "75%       8.062066   216.667456  27332.762127     8.114887   359.950170   \n",
              "max      14.000000   323.124000  61227.196008    13.127000   481.030642   \n",
              "\n",
              "       Conductivity  Organic_carbon  Trihalomethanes    Turbidity   Potability  \n",
              "count   3276.000000     3276.000000      3114.000000  3276.000000  3276.000000  \n",
              "mean     426.205111       14.284970        66.396293     3.966786     0.390110  \n",
              "std       80.824064        3.308162        16.175008     0.780382     0.487849  \n",
              "min      181.483754        2.200000         0.738000     1.450000     0.000000  \n",
              "25%      365.734414       12.065801        55.844536     3.439711     0.000000  \n",
              "50%      421.884968       14.218338        66.622485     3.955028     0.000000  \n",
              "75%      481.792304       16.557652        77.337473     4.500320     1.000000  \n",
              "max      753.342620       28.300000       124.000000     6.739000     1.000000  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-8cc9bea2-8de4-4590-ba2d-8a7974642165\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>ph</th>\n",
              "      <th>Hardness</th>\n",
              "      <th>Solids</th>\n",
              "      <th>Chloramines</th>\n",
              "      <th>Sulfate</th>\n",
              "      <th>Conductivity</th>\n",
              "      <th>Organic_carbon</th>\n",
              "      <th>Trihalomethanes</th>\n",
              "      <th>Turbidity</th>\n",
              "      <th>Potability</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>count</th>\n",
              "      <td>2785.000000</td>\n",
              "      <td>3276.000000</td>\n",
              "      <td>3276.000000</td>\n",
              "      <td>3276.000000</td>\n",
              "      <td>2495.000000</td>\n",
              "      <td>3276.000000</td>\n",
              "      <td>3276.000000</td>\n",
              "      <td>3114.000000</td>\n",
              "      <td>3276.000000</td>\n",
              "      <td>3276.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>mean</th>\n",
              "      <td>7.080795</td>\n",
              "      <td>196.369496</td>\n",
              "      <td>22014.092526</td>\n",
              "      <td>7.122277</td>\n",
              "      <td>333.775777</td>\n",
              "      <td>426.205111</td>\n",
              "      <td>14.284970</td>\n",
              "      <td>66.396293</td>\n",
              "      <td>3.966786</td>\n",
              "      <td>0.390110</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>std</th>\n",
              "      <td>1.594320</td>\n",
              "      <td>32.879761</td>\n",
              "      <td>8768.570828</td>\n",
              "      <td>1.583085</td>\n",
              "      <td>41.416840</td>\n",
              "      <td>80.824064</td>\n",
              "      <td>3.308162</td>\n",
              "      <td>16.175008</td>\n",
              "      <td>0.780382</td>\n",
              "      <td>0.487849</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>min</th>\n",
              "      <td>0.000000</td>\n",
              "      <td>47.432000</td>\n",
              "      <td>320.942611</td>\n",
              "      <td>0.352000</td>\n",
              "      <td>129.000000</td>\n",
              "      <td>181.483754</td>\n",
              "      <td>2.200000</td>\n",
              "      <td>0.738000</td>\n",
              "      <td>1.450000</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25%</th>\n",
              "      <td>6.093092</td>\n",
              "      <td>176.850538</td>\n",
              "      <td>15666.690297</td>\n",
              "      <td>6.127421</td>\n",
              "      <td>307.699498</td>\n",
              "      <td>365.734414</td>\n",
              "      <td>12.065801</td>\n",
              "      <td>55.844536</td>\n",
              "      <td>3.439711</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50%</th>\n",
              "      <td>7.036752</td>\n",
              "      <td>196.967627</td>\n",
              "      <td>20927.833607</td>\n",
              "      <td>7.130299</td>\n",
              "      <td>333.073546</td>\n",
              "      <td>421.884968</td>\n",
              "      <td>14.218338</td>\n",
              "      <td>66.622485</td>\n",
              "      <td>3.955028</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>75%</th>\n",
              "      <td>8.062066</td>\n",
              "      <td>216.667456</td>\n",
              "      <td>27332.762127</td>\n",
              "      <td>8.114887</td>\n",
              "      <td>359.950170</td>\n",
              "      <td>481.792304</td>\n",
              "      <td>16.557652</td>\n",
              "      <td>77.337473</td>\n",
              "      <td>4.500320</td>\n",
              "      <td>1.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>max</th>\n",
              "      <td>14.000000</td>\n",
              "      <td>323.124000</td>\n",
              "      <td>61227.196008</td>\n",
              "      <td>13.127000</td>\n",
              "      <td>481.030642</td>\n",
              "      <td>753.342620</td>\n",
              "      <td>28.300000</td>\n",
              "      <td>124.000000</td>\n",
              "      <td>6.739000</td>\n",
              "      <td>1.000000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8cc9bea2-8de4-4590-ba2d-8a7974642165')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-8cc9bea2-8de4-4590-ba2d-8a7974642165 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-8cc9bea2-8de4-4590-ba2d-8a7974642165');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-3e8471f6-95e4-4493-98d1-bbb44a936814\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-3e8471f6-95e4-4493-98d1-bbb44a936814')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-3e8471f6-95e4-4493-98d1-bbb44a936814 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "summary": "{\n  \"name\": \"water_data\",\n  \"rows\": 8,\n  \"fields\": [\n    {\n      \"column\": \"ph\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 982.4396919342113,\n        \"min\": 0.0,\n        \"max\": 2785.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          7.080794504276835,\n          7.036752103833548,\n          2785.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Hardness\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1102.077573149784,\n        \"min\": 32.879761476294185,\n        \"max\": 3276.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          196.36949601730151,\n          196.96762686363076,\n          3276.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Solids\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 19161.79774847418,\n        \"min\": 320.942611274359,\n        \"max\": 61227.19600771213,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          22014.092526077104,\n          20927.833606520187,\n          3276.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Chloramines\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1156.0476760135623,\n        \"min\": 0.3520000000000003,\n        \"max\": 3276.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          7.122276793425786,\n          7.130298973883081,\n          3276.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Sulfate\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 793.8602821876343,\n        \"min\": 41.416840461672685,\n        \"max\": 2495.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          333.7757766108135,\n          333.073545745888,\n          2495.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Conductivity\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1040.8631085884185,\n        \"min\": 80.82406405111182,\n        \"max\": 3276.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          426.20511068255325,\n          421.8849682800544,\n          3276.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Organic_carbon\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1153.6765632294614,\n        \"min\": 2.1999999999999886,\n        \"max\": 3276.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          14.284970247677318,\n          14.218337937208588,\n          3276.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Trihalomethanes\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1081.0577228535572,\n        \"min\": 0.7379999999999995,\n        \"max\": 3114.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          66.39629294676803,\n          66.62248509808484,\n          3114.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Turbidity\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1156.9881922638967,\n        \"min\": 0.7803824084854116,\n        \"max\": 3276.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          3.966786169791058,\n          3.955027562993039,\n          3276.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Potability\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1158.0956231418108,\n        \"min\": 0.0,\n        \"max\": 3276.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          0.3901098901098901,\n          1.0,\n          0.4878491696702489\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 298
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "water_data.nunique()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 397
        },
        "id": "q1SuAbGnXbyl",
        "outputId": "2d40140a-8068-4688-ea3b-b987fbac7474"
      },
      "execution_count": 299,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "ph                 2785\n",
              "Hardness           3276\n",
              "Solids             3276\n",
              "Chloramines        3276\n",
              "Sulfate            2495\n",
              "Conductivity       3276\n",
              "Organic_carbon     3276\n",
              "Trihalomethanes    3114\n",
              "Turbidity          3276\n",
              "Potability            2\n",
              "dtype: int64"
            ],
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>0</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>ph</th>\n",
              "      <td>2785</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Hardness</th>\n",
              "      <td>3276</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Solids</th>\n",
              "      <td>3276</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Chloramines</th>\n",
              "      <td>3276</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Sulfate</th>\n",
              "      <td>2495</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Conductivity</th>\n",
              "      <td>3276</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Organic_carbon</th>\n",
              "      <td>3276</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Trihalomethanes</th>\n",
              "      <td>3114</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Turbidity</th>\n",
              "      <td>3276</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Potability</th>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div><br><label><b>dtype:</b> int64</label>"
            ]
          },
          "metadata": {},
          "execution_count": 299
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "water_data.value_counts()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 509
        },
        "id": "oU9prHwrWts1",
        "outputId": "271b21f3-cd0a-4157-8801-611ceaabe573"
      },
      "execution_count": 300,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "ph         Hardness    Solids        Chloramines  Sulfate     Conductivity  Organic_carbon  Trihalomethanes  Turbidity  Potability\n",
              "0.227499   152.530111  39028.599340  3.462492     283.693782  443.029232    13.201943       62.322711        3.545741   1             1\n",
              "7.702183   192.137531  18126.030963  9.154581     364.191227  646.732599    14.376337       90.527536        4.382159   1             1\n",
              "7.726135   233.947864  21667.868741  6.313182     340.273171  472.258994    14.399860       36.578038        3.720637   0             1\n",
              "7.725333   252.265491  36477.738112  8.386761     426.543590  339.411327    17.485844       60.483885        3.724837   0             1\n",
              "7.721078   208.438593  17248.618742  7.685370     286.403522  269.013635    11.757348       56.884528        3.223951   1             1\n",
              "                                                                                                                                     ..\n",
              "6.444555   166.635180  24855.830042  9.492361     287.412380  479.479409    10.697068       65.655326        3.551905   1             1\n",
              "6.443754   196.615992  25740.412591  2.484380     435.672765  352.353623    16.924419       33.051888        4.498685   1             1\n",
              "6.442496   183.071355  11592.445624  8.960736     408.242670  385.014867    16.148258       83.332516        2.891019   1             1\n",
              "6.438422   202.537835  26448.245087  5.775933     322.451774  567.201675    12.641968       55.701067        3.380360   1             1\n",
              "14.000000  235.677458  24008.992040  5.635029     381.097711  460.745267    13.452538       72.859468        3.170994   0             1\n",
              "Name: count, Length: 2011, dtype: int64"
            ],
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th>count</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ph</th>\n",
              "      <th>Hardness</th>\n",
              "      <th>Solids</th>\n",
              "      <th>Chloramines</th>\n",
              "      <th>Sulfate</th>\n",
              "      <th>Conductivity</th>\n",
              "      <th>Organic_carbon</th>\n",
              "      <th>Trihalomethanes</th>\n",
              "      <th>Turbidity</th>\n",
              "      <th>Potability</th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0.227499</th>\n",
              "      <th>152.530111</th>\n",
              "      <th>39028.599340</th>\n",
              "      <th>3.462492</th>\n",
              "      <th>283.693782</th>\n",
              "      <th>443.029232</th>\n",
              "      <th>13.201943</th>\n",
              "      <th>62.322711</th>\n",
              "      <th>3.545741</th>\n",
              "      <th>1</th>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7.702183</th>\n",
              "      <th>192.137531</th>\n",
              "      <th>18126.030963</th>\n",
              "      <th>9.154581</th>\n",
              "      <th>364.191227</th>\n",
              "      <th>646.732599</th>\n",
              "      <th>14.376337</th>\n",
              "      <th>90.527536</th>\n",
              "      <th>4.382159</th>\n",
              "      <th>1</th>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7.726135</th>\n",
              "      <th>233.947864</th>\n",
              "      <th>21667.868741</th>\n",
              "      <th>6.313182</th>\n",
              "      <th>340.273171</th>\n",
              "      <th>472.258994</th>\n",
              "      <th>14.399860</th>\n",
              "      <th>36.578038</th>\n",
              "      <th>3.720637</th>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7.725333</th>\n",
              "      <th>252.265491</th>\n",
              "      <th>36477.738112</th>\n",
              "      <th>8.386761</th>\n",
              "      <th>426.543590</th>\n",
              "      <th>339.411327</th>\n",
              "      <th>17.485844</th>\n",
              "      <th>60.483885</th>\n",
              "      <th>3.724837</th>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7.721078</th>\n",
              "      <th>208.438593</th>\n",
              "      <th>17248.618742</th>\n",
              "      <th>7.685370</th>\n",
              "      <th>286.403522</th>\n",
              "      <th>269.013635</th>\n",
              "      <th>11.757348</th>\n",
              "      <th>56.884528</th>\n",
              "      <th>3.223951</th>\n",
              "      <th>1</th>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <th>...</th>\n",
              "      <th>...</th>\n",
              "      <th>...</th>\n",
              "      <th>...</th>\n",
              "      <th>...</th>\n",
              "      <th>...</th>\n",
              "      <th>...</th>\n",
              "      <th>...</th>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6.444555</th>\n",
              "      <th>166.635180</th>\n",
              "      <th>24855.830042</th>\n",
              "      <th>9.492361</th>\n",
              "      <th>287.412380</th>\n",
              "      <th>479.479409</th>\n",
              "      <th>10.697068</th>\n",
              "      <th>65.655326</th>\n",
              "      <th>3.551905</th>\n",
              "      <th>1</th>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6.443754</th>\n",
              "      <th>196.615992</th>\n",
              "      <th>25740.412591</th>\n",
              "      <th>2.484380</th>\n",
              "      <th>435.672765</th>\n",
              "      <th>352.353623</th>\n",
              "      <th>16.924419</th>\n",
              "      <th>33.051888</th>\n",
              "      <th>4.498685</th>\n",
              "      <th>1</th>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6.442496</th>\n",
              "      <th>183.071355</th>\n",
              "      <th>11592.445624</th>\n",
              "      <th>8.960736</th>\n",
              "      <th>408.242670</th>\n",
              "      <th>385.014867</th>\n",
              "      <th>16.148258</th>\n",
              "      <th>83.332516</th>\n",
              "      <th>2.891019</th>\n",
              "      <th>1</th>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6.438422</th>\n",
              "      <th>202.537835</th>\n",
              "      <th>26448.245087</th>\n",
              "      <th>5.775933</th>\n",
              "      <th>322.451774</th>\n",
              "      <th>567.201675</th>\n",
              "      <th>12.641968</th>\n",
              "      <th>55.701067</th>\n",
              "      <th>3.380360</th>\n",
              "      <th>1</th>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14.000000</th>\n",
              "      <th>235.677458</th>\n",
              "      <th>24008.992040</th>\n",
              "      <th>5.635029</th>\n",
              "      <th>381.097711</th>\n",
              "      <th>460.745267</th>\n",
              "      <th>13.452538</th>\n",
              "      <th>72.859468</th>\n",
              "      <th>3.170994</th>\n",
              "      <th>0</th>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>2011 rows × 1 columns</p>\n",
              "</div><br><label><b>dtype:</b> int64</label>"
            ]
          },
          "metadata": {},
          "execution_count": 300
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# 3.Validasi dan Visualisasi Data"
      ],
      "metadata": {
        "id": "7MN7Tqa2YQ7U"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "## VALIDASI"
      ],
      "metadata": {
        "id": "r0pRzFWjwuJz"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n",
        "import seaborn as sns"
      ],
      "metadata": {
        "id": "GiND1-smbpWD"
      },
      "execution_count": 301,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "water_data.duplicated().sum()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "tjbUIzSpbHtT",
        "outputId": "600b15c3-c8b1-4dff-88d1-4b40f646224f"
      },
      "execution_count": 302,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0"
            ]
          },
          "metadata": {},
          "execution_count": 302
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "water_data.isnull().sum()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 397
        },
        "id": "Whxid5LtYNeN",
        "outputId": "5c537687-6103-4f4b-d202-b654eb74ab8a"
      },
      "execution_count": 303,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "ph                 491\n",
              "Hardness             0\n",
              "Solids               0\n",
              "Chloramines          0\n",
              "Sulfate            781\n",
              "Conductivity         0\n",
              "Organic_carbon       0\n",
              "Trihalomethanes    162\n",
              "Turbidity            0\n",
              "Potability           0\n",
              "dtype: int64"
            ],
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>0</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>ph</th>\n",
              "      <td>491</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Hardness</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Solids</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Chloramines</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Sulfate</th>\n",
              "      <td>781</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Conductivity</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Organic_carbon</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Trihalomethanes</th>\n",
              "      <td>162</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Turbidity</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Potability</th>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div><br><label><b>dtype:</b> int64</label>"
            ]
          },
          "metadata": {},
          "execution_count": 303
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "water_data.loc[:, water_data.isnull().any()].columns"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "6aRZv-2NZ031",
        "outputId": "76364f92-8bfe-41d7-8b57-9a59769e9e45"
      },
      "execution_count": 304,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Index(['ph', 'Sulfate', 'Trihalomethanes'], dtype='object')"
            ]
          },
          "metadata": {},
          "execution_count": 304
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "columns_with_missing = ['ph', 'Sulfate', 'Trihalomethanes']\n",
        "\n",
        "for col in columns_with_missing:\n",
        "    water_data[col] = water_data[col].fillna(water_data[col].mean())"
      ],
      "metadata": {
        "id": "b0XIA3EFZg2s"
      },
      "execution_count": 305,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "print(water_data[columns_with_missing].isnull().sum())"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "OrWyCfc8aQxT",
        "outputId": "ebe8b22c-bd8e-4a86-ee0c-ca91c16269a1"
      },
      "execution_count": 306,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "ph                 0\n",
            "Sulfate            0\n",
            "Trihalomethanes    0\n",
            "dtype: int64\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "numerical_cols = water_data.select_dtypes(include=['float64', 'int64']).columns\n",
        "\n",
        "plt.figure(figsize=(15, 10))\n",
        "sns.boxplot(data=water_data[numerical_cols], orient='h', palette=\"Set2\")\n",
        "plt.title(\"Boxplot untuk Semua Kolom Numerik\")\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 590
        },
        "id": "A3VVMv1VbOXj",
        "outputId": "1d4e3b98-3f71-4696-9794-2df2d406cc99"
      },
      "execution_count": 307,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1500x1000 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "data_iqr = water_data.copy()\n",
        "for col in water_data.select_dtypes(include=['int64', 'float64']).columns:\n",
        "    if col not in ['Potability']:  # Kecualikan kolom bertipe kategorikal\n",
        "        Q1 = water_data[col].quantile(0.25)\n",
        "        Q3 = water_data[col].quantile(0.75)\n",
        "        IQR = Q3 - Q1\n",
        "        lower_bound = Q1 - 1.5 * IQR\n",
        "        upper_bound = Q3 + 1.5 * IQR\n",
        "\n",
        "        # Ganti outliers dengan batas bawah/atas\n",
        "        data_iqr[col] = water_data[col].apply(lambda x: lower_bound if x < lower_bound else (upper_bound if x > upper_bound else x))\n",
        "        print(f\"Outliers pada kolom '{col}' telah ditangani menggunakan metode IQR.\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "bhKtZENZcQBq",
        "outputId": "a854e5bc-0018-482c-ac90-841232bac328"
      },
      "execution_count": 308,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Outliers pada kolom 'ph' telah ditangani menggunakan metode IQR.\n",
            "Outliers pada kolom 'Hardness' telah ditangani menggunakan metode IQR.\n",
            "Outliers pada kolom 'Solids' telah ditangani menggunakan metode IQR.\n",
            "Outliers pada kolom 'Chloramines' telah ditangani menggunakan metode IQR.\n",
            "Outliers pada kolom 'Sulfate' telah ditangani menggunakan metode IQR.\n",
            "Outliers pada kolom 'Conductivity' telah ditangani menggunakan metode IQR.\n",
            "Outliers pada kolom 'Organic_carbon' telah ditangani menggunakan metode IQR.\n",
            "Outliers pada kolom 'Trihalomethanes' telah ditangani menggunakan metode IQR.\n",
            "Outliers pada kolom 'Turbidity' telah ditangani menggunakan metode IQR.\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "numerical_cols = data_iqr.select_dtypes(include=['float64', 'int64']).columns\n",
        "\n",
        "plt.figure(figsize=(15, 10))\n",
        "sns.boxplot(data=data_iqr[numerical_cols], orient='h', palette=\"Set2\")\n",
        "plt.title(\"Boxplot untuk Semua Kolom Numerik Setelah Penanganan Outliers\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 609
        },
        "id": "wR1H8uWMejj6",
        "outputId": "8e660c20-1f96-4e9c-f351-2d6b9a1551a4"
      },
      "execution_count": 309,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Text(0.5, 1.0, 'Boxplot untuk Semua Kolom Numerik Setelah Penanganan Outliers')"
            ]
          },
          "metadata": {},
          "execution_count": 309
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1500x1000 with 1 Axes>"
            ],
            "image/png": "iVBORw0KGgoAAAANSUhEUgAABRsAAANECAYAAAAws/ioAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjguMCwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy81sbWrAAAACXBIWXMAAA9hAAAPYQGoP6dpAACGjElEQVR4nOzdd7gV1d024OfQDuVQVFBAKYJYQGxYXmMQsQS7xhYJFmIP1kSNrzEqYpRYsMdeIEaNGo0ao6ISbBi7qImoiBBUiIpIswDC/v7wZX8eKQKOOSL3fV37OsyaNTO/mb1nw3lYM1NRKpVKAQAAAAD4hmrVdAEAAAAAwPeDsBEAAAAAKISwEQAAAAAohLARAAAAACiEsBEAAAAAKISwEQAAAAAohLARAAAAACiEsBEAAAAAKISwEQAAAAAohLARAGpIRUVF+vfvX9Nl1Ji+ffumqqqqpstY7vXv3z8VFRU1XcZypX379unbt295evDgwamoqMhzzz1Xc0UVbKuttspWW221xMuNGzcuFRUVOf/884svCv7PvHNu3Lhx5bal/cwCMD9hIwDfO/N+ifjya+WVV07Pnj1z//3313R539irr76a/v37V/sl6b/tvvvuq/Gg9IknnsgOO+yQVVddNfXr10/btm2zyy675Oabb67Rur5tCwtpX3755TRv3jzt27ev0c/GN/XII4+Uz9vnn39+vvlC6vmNGzcuP/vZz9KxY8fUr18/LVu2zJZbbpnTTz99qdb3XTi/l9aXPz8VFRWpW7duOnTokAMOOCBvvfVWTZfHQvzrX//Kfvvtl1VXXTWVlZVp3bp1+vTpk3/961/faL1nn3127rrrrmKKBGCxCRsB+N4aMGBAbrzxxvzhD3/Ir371q3zwwQfZcccdc++999Z0ad/Iq6++mjPOOKPGw8YzzjijxrZ/++23Z8stt8x7772XY489Npdeemn222+/fPTRR7nmmmtqrK6a8s9//jPbbLNNGjVqlOHDh6d9+/Y1XVIhltXA6+u8/vrrhX1O33zzzWy44YYZOnRoevfuncsuuyxHHnlkVlpppZxzzjlLtc6aPr+LcMwxx+TGG2/M1VdfnZ122im33nprNtlkk0yYMKGmS+Mr7rzzzmy00UYZNmxYfvazn+Xyyy/PwQcfnOHDh2ejjTbKX/7yl6Ve95KEjQ8++GAefPDBpd4WAP9fnZouAAC+LTvssEM23njj8vTBBx+cVVZZJbfcckt23nnnGqyMb6p///7p3LlznnrqqdSrV6/avPfff7+GqqoZ//rXv7L11lunQYMGGT58eFZfffWaLqkQG2ywQe6999688MIL2WijjWq6nG+sVCrls88+S4MGDVJZWVnYei+88MLMmDEjI0eOTLt27arNW97OhS/r3r179tprryTJz372s6y55po55phjMmTIkJx88sk1XB3zjBkzJvvvv386dOiQxx57LC1atCjPO/bYY9O9e/fsv//+efnll9OhQ4dvtZav/l3yTcydOzezZs1K/fr1C1snwLLEyEYAlhvNmjVLgwYNUqdO9f9r+/jjj3P88cenTZs2qayszFprrZXzzz8/pVIpSfLpp59m7bXXztprr51PP/20vNzkyZPTqlWr/OAHP8icOXOS/P9LPN9666306tUrjRo1SuvWrTNgwIDy+hblxRdfzA477JAmTZqkqqoq22yzTZ566qny/MGDB2fvvfdOkvTs2bN8qeAjjzyy0HUu7D5Uffv2rTYC7sv3Srv66qvTsWPHVFZWZpNNNsmzzz5bbbnf//73SVLtcsXk/1/C+NV65q178ODBi9z/kSNHpkWLFtlqq60yY8aMhfYbM2ZMNtlkkwX+crjyyitXm547d24uuuiidOnSJfXr188qq6ySww8/PB999FG1fu3bt8/OO++cRx55JBtvvHEaNGiQrl27lvflzjvvTNeuXVO/fv1069YtL774YrXlF/c4J8n555+fH/zgB1lppZXSoEGDdOvWLX/+858XcWQWbNSoUdlmm21SWVmZ4cOHz/fL+O23355u3bqlQYMGad68efbbb7+8++67X7vezz//PGeeeWb5M9C+ffv8+te/zsyZM6v1+6bHbFGOPvrorLDCCos1unFh9z9d2L0Rn3jiiRxzzDFp0aJFmjVrlsMPPzyzZs3KlClTcsABB2SFFVbICiuskF/96lfznbdL+nkaOnRo+dhcddVVC6xrQT766KNsuummWW211fL6668vtN+YMWOy2mqrzRc0JvOfC0ly//33p3v37mnUqFEaN26cnXbaqdqlqos6v5dk/79q1qxZOe2009KtW7c0bdo0jRo1Svfu3TN8+PCFLrOo76EltfXWWydJxo4dW277umOR/P/v9HfffTe77757qqqq0qJFi5xwwgnl7/15Fve8rqioyFFHHZW77ror6667biorK9OlS5c88MAD8/Wdd27Vr18/HTt2zFVXXbXA+6zecMMN2XrrrbPyyiunsrIynTt3zhVXXDHf+uZ9Lp944olsuummqV+/fjp06JA//OEP1fpNnjw5J5xwQrp27Zqqqqo0adIkO+ywQ1566aX56quoqMhtt92Ws846K6uttlrq16+fbbbZJm+++eaC3opqzjvvvHzyySe5+uqrqwWNSdK8efNcddVV+fjjj3PuueeW2xf0nZrMf//ZioqKfPzxxxkyZEj5c7yo825B3+EzZ87M6aefnjXWWCOVlZVp06ZNfvWrX833XTjvPb3pppvSpUuXVFZWlt/PP/3pT+nWrVsaN26cJk2apGvXrrn44ou/9tgALMuMbATge2vq1KmZNGlSSqVS3n///Vx66aWZMWNG9ttvv3KfUqmUXXfdNcOHD8/BBx+cDTbYIEOHDs2JJ56Yd999NxdeeGEaNGiQIUOGZIsttsgpp5ySCy64IEly5JFHZurUqRk8eHBq165dXuecOXOy/fbb53/+539y7rnn5oEHHsjpp5+ezz//PAMGDFhovf/617/SvXv3NGnSJL/61a9St27dXHXVVdlqq63y6KOPZrPNNsuWW26ZY445Jpdcckl+/etfZ5111kmS8s8i3HzzzZk+fXoOP/zwVFRU5Nxzz80ee+yRt956K3Xr1s3hhx+eCRMm5KGHHsqNN95Y2HafffbZ9OrVKxtvvHHuvvvuNGjQYKF927Vrl2HDhuWdd97Jaquttsj1Hn744Rk8eHB+9rOf5ZhjjsnYsWNz2WWX5cUXX8yIESNSt27dct8333wzP/3pT3P44Ydnv/32y/nnn59ddtklV155ZX7961+nX79+SZKBAwdmn332yeuvv55atZb8/24vvvji7LrrrunTp09mzZqVP/3pT9l7771z7733Zqeddlqsdbz++uvZeuutU6dOnQwfPjwdO3asNn/ePm+yySYZOHBg3nvvvVx88cUZMWJEXnzxxTRr1myh6z7kkEMyZMiQ7LXXXjn++OPz9NNPZ+DAgRk1atR8lzR+W8esSZMm+cUvfpHTTjut8NGNRx99dFq2bJkzzjgjTz31VK6++uo0a9YsTz75ZNq2bZuzzz479913X84777ysu+66OeCAA8rLLsnn6fXXX0/v3r1z+OGH59BDD81aa621WPVNmjQp2223XSZPnpxHH310vvf2y9q1a5eHH344f//738uB2sLceOONOfDAA9OrV6+cc845+eSTT3LFFVfkhz/8YV588cW0b9/+a8/vJdn/L5s2bVquvfba9O7dO4ceemimT5+e6667Lr169cozzzyTDTbYoFr/r/seWlJjxoxJkqy00kqLfSzmmTNnTnr16pXNNtss559/fh5++OEMGjQoHTt2zM9//vNyvyU5r5944onceeed6devXxo3bpxLLrkke+65Z8aPH1+u8cUXX8z222+fVq1a5YwzzsicOXMyYMCA+UK5JLniiivSpUuX7LrrrqlTp07++te/pl+/fpk7d26OPPLIan3ffPPN7LXXXjn44INz4IEH5vrrr0/fvn3TrVu3dOnSJUny1ltv5a677sree++d1VdfPe+9916uuuqq9OjRI6+++mpat25dbZ2/+93vUqtWrZxwwgmZOnVqzj333PTp0ydPP/30It+Xv/71r2nfvn26d+++wPlbbrll2rdvn7/97W+LXM+C3HjjjTnkkEOy6aab5rDDDkuSRZ5LXzV37tzsuuuueeKJJ3LYYYdlnXXWySuvvJILL7wwb7zxxnyXZ//973/PbbfdlqOOOqp8/9yHHnoovXv3zjbbbFO+rcGoUaMyYsSIHHvssUu8TwDLjBIAfM/ccMMNpSTzvSorK0uDBw+u1veuu+4qJSn99re/rda+1157lSoqKkpvvvlmue3kk08u1apVq/TYY4+Vbr/99lKS0kUXXVRtuQMPPLCUpHT00UeX2+bOnVvaaaedSvXq1St98MEH5fYkpdNPP708vfvuu5fq1atXGjNmTLltwoQJpcaNG5e23HLLctu8bQ8fPnyxjkePHj1KPXr0mK/9wAMPLLVr1648PXbs2FKS0korrVSaPHlyuf3uu+8uJSn99a9/LbcdeeSRpQX9M2L48OELrG3eum+44YZq22/UqFGpVCqVnnjiiVKTJk1KO+20U+mzzz772n267rrrSklK9erVK/Xs2bN06qmnlh5//PHSnDlzqvV7/PHHS0lKN910U7X2Bx54YL72du3alZKUnnzyyXLb0KFDS0lKDRo0KP373/8ut1911VXz7efiHudSqVT65JNPqk3PmjWrtO6665a23nrrr933Aw88sFS3bt1Sq1atSq1bty698cYb8/WZNWtWaeWVVy6tu+66pU8//bTcfu+995aSlE477bRy2+mnn17tvRw5cmQpSemQQw6pts4TTjihlKT097//vdz2TY/Zgsz7DN1+++2lKVOmlFZYYYXSrrvuWm3/531u5vnqufTl+g488MDy9Lzvhl69epXmzp1bbt98881LFRUVpSOOOKLc9vnnn5dWW221au/p0nyeHnjggcWu69lnny1NnDix1KVLl1KHDh1K48aNW+hxmuef//xnqUGDBqUkpQ022KB07LHHlu66667Sxx9/XK3f9OnTS82aNSsdeuih1dr/85//lJo2bVqtfWHn95Ls/1fPh88//7w0c+bMast99NFHpVVWWaV00EEHlduW5HtoQeZ9fq6//vrSBx98UJowYULpb3/7W6l9+/alioqK0rPPPrtEx2Led/qAAQOq9d1www1L3bp1q9a2uOf1vO+uL//98tJLL5WSlC699NJy2y677FJq2LBh6d133y23jR49ulSnTp353p+vbrtUKpV69epV6tChQ7W2eZ/Lxx57rNz2/vvvlyorK0vHH398ue2zzz6b7/t07NixpcrKymrHYt7xXmeddaq9vxdffHEpSemVV16Zr655pkyZUkpS2m233Rbap1QqlXbddddSktK0adNKpdKCv1NLpfm/y0qlUqlRo0bVzrV55p1zY8eOLbd99TN74403lmrVqlV6/PHHqy175ZVXlpKURowYUW5LUqpVq1bpX//6V7W+xx57bKlJkyalzz//fJH7CPB94zJqAL63fv/73+ehhx7KQw89lD/+8Y/p2bNnDjnkkNx5553lPvfdd19q166dY445ptqyxx9/fEqlUrWnV/fv3z9dunTJgQcemH79+qVHjx7zLTfPUUcdVf7zvMurZs2alYcffniB/efMmZMHH3wwu+++e7VLYVu1apWf/vSneeKJJzJt2rSlOg5L6ic/+UlWWGGF8vS8ESff1pNchw8fnl69emWbbbbJnXfeuVj3szvooIPywAMPZKuttsoTTzyRM888M927d0+nTp3y5JNPlvvdfvvtadq0abbbbrtMmjSp/OrWrVuqqqrmu4Szc+fO2XzzzcvTm222WZIvLsFs27btfO1Le0y+PGrzo48+ytSpU9O9e/e88MILi7X8nDlzMmnSpKy44opp3rz5fPOfe+65vP/+++nXr1+1e4bttNNOWXvttRc5Sui+++5Lkvzyl7+s1n788ccnyXzLfpvHrGnTpjnuuONyzz33LNEl2F/n4IMPrna55WabbZZSqZSDDz643Fa7du1svPHG1epd0s/T6quvnl69ei12Xe+880569OiR2bNn57HHHlvgpdFf1aVLl4wcOTL77bdfxo0bl4svvji77757VllllWoPoXnooYcyZcqU9O7du1rttWvXzmabbbbIy5mXdv+/rHbt2uXbHsydOzeTJ0/O559/no033niBn/tv+j100EEHpUWLFmndunV22mmn8uW0G2+88VIdiyOOOKLadPfu3eerZUnO62233bbaKLv11lsvTZo0Ka9zzpw5efjhh7P77rtXG0W4xhprZIcddphvfV/e9rxR/T169Mhbb72VqVOnVuvbuXPnaiMJW7RokbXWWqva/lRWVpZHIM+ZMycffvhhqqqqstZaay1wf372s59Vu63F4rxf06dPT5I0btx4oX2+PP+/9XfgPLfffnvWWWedrL322tU+J/NGEH/1c9KjR4907ty5WluzZs3y8ccf56GHHvqv1Q3wXeAyagC+tzbddNNqD4jp3bt3Ntxwwxx11FHZeeedU69evfz73/9O69at5/tlZ95lyf/+97/LbfXq1cv111+fTTbZJPXr188NN9ww332zkqRWrVrz3TtvzTXXTJKFPkH6gw8+yCeffLLAyyzXWWedzJ07N2+//Xb5Erdv05cDoiTlX/i/7p5sS+Ozzz7LTjvtlG7duuW2226b736ai9KrV6/06tUrn3zySZ5//vnceuutufLKK7Pzzjvntddey8orr5zRo0dn6tSpC7x3XTL/AzS+uu9NmzZNkrRp02aB7Ut7TO6999789re/zciRI6vd+2tBn6cFadCgQa699tr06dMnO+20Ux566KE0atSoPH/e53ZBn6e11147TzzxxELX/e9//zu1atXKGmusUa29ZcuWadasWbVzIvn2j9mxxx6bCy+8MP3798/dd9+9RMsuzJLU/OV6l/TztKQP69l///1Tp06djBo1Ki1btlzs5dZcc83ceOONmTNnTl599dXce++9Offcc3PYYYdl9dVXz7bbbpvRo0cnyUIvtW7SpMnXbmdJ9/+rhgwZkkGDBuW1117L7Nmzy+0LOk7f9HvotNNOS/fu3VO7du00b94866yzTvn7ZUmPRf369ee7dHmFFVaYr5YlOa+/un9fXef777+fTz/9dL7zMMkC20aMGJHTTz89//jHP/LJJ59Umzd16tTyZ3xxtp18EQhffPHFufzyyzN27Nhq96ecd5n3ovZncd6veX/vzgsdF2ZxQ8mijR49OqNGjVrgZevJ4p3v/fr1y2233ZYddtghq666an70ox9ln332yfbbb/+t1AzwXSFsBGC5UatWrfTs2TMXX3xxRo8evVTB3dChQ5N8EZKNHj16mXjyb0VFxQIfTvPVhxvM8+X7T37ZgtaxoG0tyMK2VVlZmR133DF33313HnjggaV6SnjDhg3TvXv3dO/ePc2bN88ZZ5yR+++/PwceeGDmzp2blVdeOTfddNMCl/3qL5EL2/fFOSaLe5wff/zx7Lrrrtlyyy1z+eWXp1WrVqlbt25uuOGG3HzzzYvc1y/bd99989FHH6Vfv37ZY4898te//rXQp6kubvD5TY7Z4pg3urF///5LPLpxST/jC2r/cr1L+nla1H1HF2SPPfbIH/7wh1x88cUZOHDgEi2bfFF/165d07Vr12y++ebp2bNnbrrppmy77baZO3duki/uY7egIHNxgv4l3f8v++Mf/5i+fftm9913z4knnpiVV145tWvXzsCBA8v3U/zqvizI4n5+unbtmm233XaB85b0WCysli9b0vO6qPMj+eJ+lNtss03WXnvtXHDBBWnTpk3q1auX++67LxdeeGF5f5dk22effXZOPfXUHHTQQTnzzDOz4oorplatWjnuuOPmW9/S7k/Tpk3TqlWrvPzyy4vcv5dffjmrrrpqOQRe0r9nltbcuXPTtWvX8n2av+qr/zmxoPN95ZVXzsiRIzN06NDcf//9uf/++3PDDTfkgAMOyJAhQwqtF+C7RNgIwHLl888/T5Lyk47nPVxh+vTp1UZNvPbaa+X587z88ssZMGBAfvazn2XkyJE55JBD8sorr1QbMZJ88QvKW2+9VR7NmCRvvPFGkizwCZrJF7+kN2zYcIFPnX3ttddSq1at8i82ixsCzbPCCiss8FK2r45QWxILq2HeaJYpU6Ys1rYqKipy0003Zbfddsvee++d+++/f4FPdF5c80ayTpw4MckXDwN4+OGHs8UWWyxx8LOkFvc433HHHalfv36GDh1a7ZLxG264YYm3+fOf/zyTJ0/Ob37zm+y3337505/+lFq1apU/t/MeIvNlr7/++iIvz23Xrl3mzp2b0aNHV3vw0HvvvZcpU6Ys1qW9RTvuuONy0UUX5Ywzzljgg21WWGGF+T5zs2bNKn8OivJtf56OPvrorLHGGjnttNPStGnT/O///u9Sr2tB50LyRfixsBBunoWd399k///85z+nQ4cOufPOO6ut//TTT1+i9RRhSY7F4iryvJ5XW/369Rf4ROevtv31r3/NzJkzc88991QbYbg4l8YvzJ///Of07Nkz1113XbX2KVOmLPDWDUtr5513zjXXXJMnnngiP/zhD+eb//jjj2fcuHE5/PDDy20LOt+TBf89s6R/X35Zx44d89JLL2Wbbbb5RuupV69edtlll+yyyy6ZO3du+vXrl6uuuiqnnnrqAkepAnwfuGcjAMuN2bNn58EHH0y9evXKIcqOO+6YOXPm5LLLLqvW98ILL0xFRUX53lizZ89O375907p161x88cUZPHhw3nvvvfziF79Y4La+vL5SqZTLLrssdevWzTbbbLPA/rVr186PfvSj3H333dUutX7vvfdy880354c//GF5VMe8y2UX9MvWgnTs2DGvvfZaPvjgg3LbSy+9lBEjRizW8guysBratWuX2rVr57HHHqvWfvnlly90XfXq1cudd96ZTTbZJLvsskueeeaZr93+sGHDFtg+736D8y4f3meffTJnzpyceeaZ8/X9/PPPF/sYLo7FPc61a9dORUVFtVE448aNm+/JpovrlFNOyS9+8Yvcfvvt5V/IN95446y88sq58sorq13Oef/992fUqFGLfOL1jjvumCS56KKLqrXPG92zuE/LLtK80Y133313Ro4cOd/8jh07zveZu/rqqwsf6fTf+DydeuqpOeGEE3LyySfniiuu+Nr+jz/+eLVLkuf56rnQq1evNGnSJGefffYC+3/5c7uw8/ub7P+8kW9fHun29NNP5x//+MdCl/m2LMmxWFxFn9e1a9fOtttum7vuuisTJkwot7/55pvV7iU8r29S/dhOnTp1qYPOeev86qjE22+/Pe++++5Sr3NBTjzxxDRo0CCHH354Pvzww2rzJk+enCOOOCINGzbMiSeeWG7v2LFjpk6dWm1E5MSJE/OXv/xlvvU3atRoqc/LffbZJ++++261e5/O8+mnn+bjjz/+2nV8dZ9q1aqV9dZbL0mqfTcDfN8Y2QjA99b9999fHqH4/vvv5+abb87o0aPzv//7v+XgbpdddknPnj1zyimnZNy4cVl//fXz4IMP5u67785xxx1XHgEz7z5cw4YNS+PGjbPeeuvltNNOy29+85vstdde5YAm+eL+Xg888EAOPPDAbLbZZrn//vvzt7/9Lb/+9a8XeZnhb3/72zz00EP54Q9/mH79+qVOnTq56qqrMnPmzJx77rnlfhtssEFq166dc845J1OnTk1lZWW23nrrhd5H7aCDDsoFF1yQXr165eCDD87777+fK6+8Ml26dFnqG+5369YtSXLMMcekV69eqV27dvbdd980bdo0e++9dy699NJUVFSkY8eOuffee7/2Xm4NGjTIvffem6233jo77LBDHn300ay77roL7b/bbrtl9dVXzy677JKOHTvm448/zsMPP5y//vWv5dAy+eKG/YcffngGDhyYkSNH5kc/+lHq1q2b0aNH5/bbb8/FF1+cvfbaa6mOwVct7nHeaaedcsEFF2T77bfPT3/607z//vv5/e9/nzXWWONrLydcmEGDBuWjjz7KtddemxVXXDHnnHNOzjnnnPzsZz9Ljx490rt377z33nu5+OKL0759+4WG5Emy/vrr58ADD8zVV1+dKVOmpEePHnnmmWcyZMiQ7L777unZs+dS1fhNzbt340svvVTt/pRJcsghh+SII47Innvume222y4vvfRShg4dWugIrOS/93k677zzMnXq1Bx55JFp3Lhx9ttvv4X2Peecc/L8889njz32KIcYL7zwQv7whz9kxRVXzHHHHZfki/sQXnHFFdl///2z0UYbZd99902LFi0yfvz4/O1vf8sWW2xR/k+ShZ3f32T/d95559x555358Y9/nJ122iljx47NlVdemc6dO5dHmv+3LMmxWFzfxnndv3//PPjgg9liiy3y85//vPwfY+uuu2610P1HP/pRefTc4YcfnhkzZuSaa67JyiuvvNSje3feeefySP4f/OAHeeWVV3LTTTfNdz/ib6pTp04ZMmRI+vTpk65du+bggw/O6quvnnHjxuW6667LpEmTcsstt1R7mM6+++6bk046KT/+8Y9zzDHH5JNPPskVV1yRNddcc76H13Tr1i0PP/xwLrjggrRu3Tqrr756+WFVX2f//ffPbbfdliOOOCLDhw/PFltskTlz5uS1117LbbfdlqFDh1a7L/SCHHLIIZk8eXK23nrrrLbaavn3v/+dSy+9NBtssEG1keMA3zv//QdgA8C364YbbiglqfaqX79+aYMNNihdccUVpblz51brP3369NIvfvGLUuvWrUt169YtderUqXTeeeeV+z3//POlOnXqlI4++uhqy33++eelTTbZpNS6devSRx99VCqVSqUDDzyw1KhRo9KYMWNKP/rRj0oNGzYsrbLKKqXTTz+9NGfOnGrLJymdfvrp1dpeeOGFUq9evUpVVVWlhg0blnr27Fl68skn59vHa665ptShQ4dS7dq1S0lKw4cPX+Qx+eMf/1jq0KFDqV69eqUNNtigNHTo0NKBBx5YateuXbnP2LFjS0lK55133nzLf7XWzz//vHT00UeXWrRoUaqoqCh9+Z8UH3zwQWnPPfcsNWzYsLTCCiuUDj/88NI///nPUpLSDTfcUO4371h92aRJk0qdO3cutWzZsjR69OiF7s8tt9xS2nfffUsdO3YsNWjQoFS/fv1S586dS6ecckpp2rRp8/W/+uqrS926dSs1aNCg1Lhx41LXrl1Lv/rVr0oTJkwo92nXrl1pp512WuC+H3nkkdXaFnasFuc4l0ql0nXXXVfq1KlTqbKysrT22muXbrjhhtLpp59eWpx/mi3ouJVKX7wnu+++eylJaeDAgaVSqVS69dZbSxtuuGGpsrKytOKKK5b69OlTeuedd6ott6Dtzp49u3TGGWeUVl999VLdunVLbdq0KZ188smlzz77rFq/Io7ZVw0fPryUpHT77bfPN29erV/d/zlz5pROOumkUvPmzUsNGzYs9erVq/Tmm2+W2rVrVzrwwAPL/eZ9Nzz77LMLXO8HH3xQrX1hx/qbfJ7mzfu6uubMmVPq3bt3qU6dOqW77rprgesplUqlESNGlI488sjSuuuuW2ratGmpbt26pbZt25b69u1bGjNmzHz9hw8fXurVq1epadOmpfr165c6duxY6tu3b+m5554r91nU+b24+9+jR49Sjx49ytNz584tnX322aV27dqVKisrSxtuuGHp3nvv/UbfQwuyqM/P0hyLhX0GFnTeLO55vaDzo1Sa/3NRKpVKw4YNK2244YalevXqlTp27Fi69tprS8cff3ypfv361frdc889pfXWW69Uv379Uvv27UvnnHNO6frrry8lKY0dO7baNhb0ufzq+/XZZ5+Vjj/++FKrVq1KDRo0KG2xxRalf/zjH/P1W9jxnvc+fvk7f1FefvnlUu/evUutWrUq1a1bt9SyZctS7969S6+88soC+z/44IOlddddt1SvXr3SWmutVfrjH/+4wGP92muvlbbccstSgwYNSknKx3feOfflY/PVfSuVSqVZs2aVzjnnnFKXLl1KlZWVpRVWWKHUrVu30hlnnFGaOnVqud/C3tM///nPpR/96EellVdeuVSvXr1S27ZtS4cffnhp4sSJi3VcAJZVFaXSUtyFGABYoL59++bPf/7zf32kDgDLh9133z3/+te/yk/VBoDvGvdsBAAA+A769NNPq02PHj0699133zd6kBYAfNvcsxEAAOA7qEOHDunbt286dOiQf//737niiitSr169/OpXv6rp0gBgoYSNAAAA30Hbb799brnllvznP/9JZWVlNt9885x99tnp1KlTTZcGAAvlno0AAAAAQCHcsxEAAAAAKISwEQAAAAAohHs2skBz587NhAkT0rhx41RUVNR0OQAAAADUkFKplOnTp6d169apVWvRYxeFjSzQhAkT0qZNm5ouAwAAAIDviLfffjurrbbaIvsIG1mgxo0bJ/niQ9SkSZMargYAAACAmjJt2rS0adOmnBctirCRBZp36XSTJk2EjQAAAAAs1q32PCAGAAAAACiEsBEAAAAAKISwEQAAAAAohLARAAAAACiEsBEAAAAAKISwkeXGuHHjMmDAgIwbN66mSwEAAAD4XhI2stx455138tprr+Wdd96p6VIAAAAAvpeEjQAAAABAIYSNAAAAAEAhhI0AAAAAQCGEjQAAAABAIYSNAAAAAEAhhI0AAAAAQCGEjQAAAABAIYSNAAAAAEAhhI0AAAAAQCGEjQAAAABAIYSNAAAAAEAhhI0AAAAAQCGEjSw3Pvvss2o/AQAAACiWsJHlxvjx46v9BAAAAKBYwkYAAAAAoBDCRgAAAACgEMJGAAAAAKAQwkYAAAAAoBDCRgAAAACgEMJGAAAAAKAQwkYAAAAAoBDCRgAAAACgEMJGAAAAAKAQwsbvofbt2+eiiy6q6TIAAAAAWM4IGwEAAACAQggbAQAAAIBCCBuXQVtttVWOOuqoHHXUUWnatGmaN2+eU089NaVSqdznk08+yUEHHZTGjRunbdu2ufrqq2uwYgAAAACWB8LGZdSQIUNSp06dPPPMM7n44otzwQUX5Nprry3PHzRoUDbeeOO8+OKL6devX37+85/n9ddfr8GKAQAAAPi+EzYuo9q0aZMLL7wwa621Vvr06ZOjjz46F154YXn+jjvumH79+mWNNdbISSedlObNm2f48OELXd/MmTMzbdq0ai8AAAAAWBLCxmXU//zP/6SioqI8vfnmm2f06NGZM2dOkmS99dYrz6uoqEjLli3z/vvvL3R9AwcOTNOmTcuvNm3afHvFAwAAAPC9JGz8nqpbt2616YqKisydO3eh/U8++eRMnTq1/Hr77be/7RIBAAAA+J6pU9MFsHSefvrpatNPPfVUOnXqlNq1ay/V+iorK1NZWVlEaQAAAAAsp4xsXEaNHz8+v/zlL/P666/nlltuyaWXXppjjz22pssCAAAAYDlmZOMy6oADDsinn36aTTfdNLVr186xxx6bww47rKbLAgAAAGA5JmxcRtWtWzcXXXRRrrjiivnmjRs3br62kSNHfvtFAQAAALBccxk1AAAAAFAIYSMAAAAAUAiXUS+DHnnkkZouAQAAAADmY2QjAAAAAFAIYSMAAAAAUAhhIwAAAABQCGEjAAAAAFAIYSMAAAAAUAhhIwAAAABQCGEjAAAAAFAIYSPLjbZt21b7CQAAAECxhI0sN+rXr1/tJwAAAADFEjYCAAAAAIUQNgIAAAAAhRA2AgAAAACFEDYCAAAAAIUQNgIAAAAAhRA2AgAAAACFEDYCAAAAAIUQNgIAAAAAhRA2AgAAAACFEDYCAAAAAIUQNgIAAAAAhRA2AgAAAACFEDYCAAAAAIUQNrLcWG211bL22mtntdVWq+lSAAAAAL6XKkqlUqmmi+C7Z9q0aWnatGmmTp2aJk2a1HQ5AAAAANSQJcmJjGwEAAAAAAohbAQAAAAACiFsBAAAAAAKIWwEAAAAAAohbAQAAAAACiFsBAAAAAAKIWwEAAAAAAohbAQAAAAACiFsBAAAAAAKIWwEAAAAAAohbAQAAAAACiFsBAAAAAAKIWxkuTZp0qRMmjSppssAAAAA+F4QNrLcGjNmTI477rgc/8tfChwBAAAACiBsZLk1ceLEzJ07N7M//zzTp0+v6XIAAAAAlnnCRgAAAACgEMJGAAAAAKAQwkYAAAAAoBDCRgAAAACgEMJGAAAAAKAQwkYAAAAAoBDCRgAAAACgEMJGAAAAAKAQwkYAAAAAoBDCRgAAAACgEMJGAAAAAKAQwkYAAAAAoBDCRpY7M2fOzNixY/P555+X2959993MnDmzBqsCAAAAWPYJG1nuTJgwIaeccko++uijctvll1+eCRMm1GBVAAAAAMs+YSMAAAAAUAhhIwAAAABQCGEjAAAAAFAIYSMAAAAAUAhhIwAAAABQCGEjAAAAAFAIYSMAAAAAUAhhIwAAAABQCGEjAAAAAFAIYeN/ySOPPJKKiopMmTKlpksBAAAAgG/Fchs29u3bN7vvvvt87UJBAAAAAFg6y23Y+G2ZNWtWTZcAAAAAADVC2LgIH374YXr37p1VV101DRs2TNeuXXPLLbdU67PVVlvlqKOOynHHHZfmzZunV69eSZL77rsva665Zho0aJCePXtm3Lhx1ZYbPHhwmjVrlqFDh2adddZJVVVVtt9++0ycOLFav2uvvTbrrLNO6tevn7XXXjuXX355ed6sWbNy1FFHpVWrVqlfv37atWuXgQMHJklKpVL69++ftm3bprKyMq1bt84xxxzzLRwlAAAAAPhCnZou4Lvss88+S7du3XLSSSelSZMm+dvf/pb9998/HTt2zKabblruN2TIkPz85z/PiBEjkiRvv/129thjjxx55JE57LDD8txzz+X444+fb/2ffPJJzj///Nx4442pVatW9ttvv5xwwgm56aabkiQ33XRTTjvttFx22WXZcMMN8+KLL+bQQw9No0aNcuCBB+aSSy7JPffck9tuuy1t27bN22+/nbfffjtJcscdd+TCCy/Mn/70p3Tp0iX/+c9/8tJLL/0XjhoAAAAAy6vlOmy89957U1VVVa1tzpw55T+vuuqqOeGEE8rTRx99dIYOHZrbbrutWtjYqVOnnHvuueXpX//61+nYsWMGDRqUJFlrrbXyyiuv5Jxzzqm2rdmzZ+fKK69Mx44dkyRHHXVUBgwYUJ5/+umnZ9CgQdljjz2SJKuvvnpeffXVXHXVVTnwwAMzfvz4dOrUKT/84Q9TUVGRdu3alZcdP358WrZsmW233TZ169ZN27Ztq9X8VTNnzszMmTPL09OmTVvEkft++Oijj2q6BAAAAIDvleX6MuqePXtm5MiR1V7XXnttef6cOXNy5plnpmvXrllxxRVTVVWVoUOHZvz48dXW061bt2rTo0aNymabbVatbfPNN59v+w0bNiwHjUnSqlWrvP/++0mSjz/+OGPGjMnBBx+cqqqq8uu3v/1txowZk+SLh9yMHDkya621Vo455pg8+OCD5XXtvffe+fTTT9OhQ4cceuih+ctf/pLPP/98ocdi4MCBadq0afnVpk2brzt8y7yHH364pksAAAAA+F5ZrsPGRo0aZY011qj2WnXVVcvzzzvvvFx88cU56aSTMnz48IwcOTK9evWa7yEwjRo1Wqrt161bt9p0RUVFSqVSkmTGjBlJkmuuuaZaGPrPf/4zTz31VJJko402ytixY3PmmWfm008/zT777JO99torSdKmTZu8/vrrufzyy9OgQYP069cvW265ZWbPnr3AWk4++eRMnTq1/Jp3Ofb32bbbblvTJQAAAAB8ryzXl1F/nREjRmS33XbLfvvtlySZO3du3njjjXTu3HmRy62zzjq55557qrXNCwgX1yqrrJLWrVvnrbfeSp8+fRbar0mTJvnJT36Sn/zkJ9lrr72y/fbbZ/LkyVlxxRXToEGD7LLLLtlll11y5JFHZu21184rr7ySjTbaaL71VFZWprKycolqXNatsMIKNV0CAAAAwPeKsHEROnXqlD//+c958skns8IKK+SCCy7Ie++997Vh4xFHHJFBgwblxBNPzCGHHJLnn38+gwcPXuLtn3HGGTnmmGPStGnTbL/99pk5c2aee+65fPTRR/nlL3+ZCy64IK1atcqGG26YWrVq5fbbb0/Lli3TrFmzDB48OHPmzMlmm22Whg0b5o9//GMaNGhQ7b6OAAAAAFCk5foy6q/zm9/8JhtttFF69eqVrbbaKi1btszuu+/+tcu1bds2d9xxR+66666sv/76ufLKK3P22Wcv8fYPOeSQXHvttbnhhhvStWvX9OjRI4MHD87qq6+eJGncuHHOPffcbLzxxtlkk00ybty43HfffalVq1aaNWuWa665JltssUXWW2+9PPzww/nrX/+alVZaaYnrAAAAAIDFUVGad5NA+JJp06aladOmmTp1apo0aVLT5RRq7NixOeWUU7L33nvn9ttvL7efddZZ5SAXAAAAgC8sSU5kZCMAAAAAUAhhIwAAAABQCGEjAAAAAFAIYSMAAAAAUAhhIwAAAABQCGEjAAAAAFAIYSMAAAAAUAhhIwAAAABQCGEjAAAAAFAIYSMAAAAAUAhhI8ud1q1b56yzzsoKK6xQbuvXr19at25dg1UBAAAALPuEjSx3Kisrs/rqq6dOnTrltlVXXTWVlZU1WBUAAADAsk/YCAAAAAAUQtgIAAAAABRC2AgAAAAAFELYCAAAAAAUQtgIAAAAABRC2AgAAAAAFELYCAAAAAAUQtgIAAAAABRC2AgAAAAAFELYCAAAAAAUQtgIAAAAABRC2AgAAAAAFELYCAAAAAAUok5NFwA1pVWrVqlVq1Zq16qVxo0b13Q5AAAAAMu8ilKpVKrpIvjumTZtWpo2bZqpU6emSZMmNV3Ot2bSpElJkubNm9dwJQAAAADfTUuSExnZyHJNyAgAAABQHPdsBAAAAAAKIWwEAAAAAAohbAQAAAAACiFsBAAAAAAKIWwEAAAAAAohbAQAAAAACiFsBAAAAAAKIWwEAAAAAAohbAQAAAAACiFsBAAAAAAKIWwEAAAAAApRp6YLAABYHJMmTcr06dNrugxgGde4ceM0b968pssAgO8tYSMA8J03adKkHH/CCZk9a1ZNlwIs4+rWq5dB558vcASAb4mwEQD4zps+fXpmz5qVNdffNg2rVqjpcviWfTLjo7zx0sPebwo377M1ffp0YSMAfEuEjQDAMqNh1Qqpatqipsvgv8T7DQCw7PGAGAAAAACgEMJGAAAAAKAQwkYAAAAAoBDCRgAAAACgEMJGAAAAAKAQwkYAAAAAoBDCRgAAAACgEMJGAAAAAKAQwkYAAAAAoBDCRgAAAACgEMJGAAAAAKAQwkZIMnPmzIwdOzYzZ86s6VIAAACAZdzynDMIGyHJhAkTcsopp2TChAk1XQoAAACwjFuecwZhIwAAAABQCGEjAAAAAFAIYSMAAAAAUAhhIwAAAABQCGEjAAAAAFAIYSMAAAAAUAhhIwAAAABQCGEjAAAAAFAIYSMAAAAAUAhh43dU//79s8EGG5Sn+/btm913332Ry2y11VY57rjjvtW6AAAAAGBhhI3fkg8++CA///nP07Zt21RWVqZly5bp1atXRowYsVTru/jiizN48OBiiwQAAACAAtWp6QK+r/bcc8/MmjUrQ4YMSYcOHfLee+9l2LBh+fDDD5dqfU2bNi24QgAAAAAolpGN34IpU6bk8ccfzznnnJOePXumXbt22XTTTXPyySdn1113TZKMHz8+u+22W6qqqtKkSZPss88+ee+99xa6zq9eRv3xxx/ngAMOSFVVVVq1apVBgwbNt8zll1+eTp06pX79+llllVWy1157Fb6vAAAAADCPsPFbUFVVlaqqqtx1112ZOXPmfPPnzp2b3XbbLZMnT86jjz6ahx56KG+99VZ+8pOfLPY2TjzxxDz66KO5++678+CDD+aRRx7JCy+8UJ7/3HPP5ZhjjsmAAQPy+uuv54EHHsiWW25ZyP4BAAAAwIK4jPpbUKdOnQwePDiHHnporrzyymy00Ubp0aNH9t1336y33noZNmxYXnnllYwdOzZt2rRJkvzhD39Ily5d8uyzz2aTTTZZ5PpnzJiR6667Ln/84x+zzTbbJEmGDBmS1VZbrdxn/PjxadSoUXbeeec0btw47dq1y4YbbrjQdc6cObNaMDpt2rRvcgiWWe+++25NlwDAAvh+BorkOwWAb9vy/HeNsPFbsueee2annXbK448/nqeeeir3339/zj333Fx77bWZNm1a2rRpUw4ak6Rz585p1qxZRo0a9bVh45gxYzJr1qxsttlm5bYVV1wxa621Vnl6u+22S7t27dKhQ4dsv/322X777fPjH/84DRs2XOA6Bw4cmDPOOOMb7vWy7/LLL6/pEgAA+Jb5Nx8AfHuEjd+i+vXrZ7vttst2222XU089NYccckhOP/30HH/88d/6ths3bpwXXnghjzzySB588MGcdtpp6d+/f5599tk0a9Zsvv4nn3xyfvnLX5an5wWiy5t+/fpl1VVXrekyAPiKd999VzgAFMa/+QD4ti3P/34VNv4Xde7cOXfddVfWWWedvP3223n77bfLgd6rr76aKVOmpHPnzl+7no4dO6Zu3bp5+umn07Zt2yTJRx99lDfeeCM9evQo96tTp0623XbbbLvttjn99NPTrFmz/P3vf88ee+wx3zorKytTWVlZ0J4uu1ZdddWsvvrqNV0GAADfIv/mA4Bvj7DxW/Dhhx9m7733zkEHHZT11lsvjRs3znPPPZdzzz03u+22W7bddtt07do1ffr0yUUXXZTPP/88/fr1S48ePbLxxht/7fqrqqpy8MEH58QTT8xKK62UlVdeOaecckpq1fr/z/u5995789Zbb2XLLbfMCiuskPvuuy9z586tdqk1AAAAABRJ2PgtqKqqymabbZYLL7wwY8aMyezZs9OmTZsceuih+fWvf52KiorcfffdOfroo7PlllumVq1a2X777XPppZcu9jbOO++8zJgxI7vssksaN26c448/PlOnTi3Pb9asWe688870798/n332WTp16pRbbrklXbp0+TZ2GQAAAACEjd+GysrKDBw4MAMHDlxon7Zt2+buu+9e6Pz+/funf//+5enBgwdXm19VVZUbb7wxN954Y7ntxBNPLP/5hz/8YR555JElrh0AAAAAllatr+8CAAAAAPD1hI0AAAAAQCGEjQAAAABAIYSNAAAAAEAhhI0AAAAAQCGEjQAAAABAIYSNAAAAAEAhhI0AAAAAQCGEjQAAAABAIYSNAAAAAEAhhI2QpHXr1jnrrLPSunXrmi4FAAAAWMYtzzlDnZouAL4LKisrs/rqq9d0GQAAAMD3wPKcMxjZCAAAAAAUQtgIAAAAABRC2AgAAAAAFELYCAAAAAAUQtgIAAAAABRC2AgAAAAAFELYCAAAAAAUQtgIAAAAABRC2AgAAAAAFELYCAAAAAAUQtgIAAAAABRC2AgAAAAAFKJOTRcAALC4PpnxUU2XwH/BvPfZ+03RfKYA4NsnbAQAvvMaN26cuvXq5Y2XHq7pUvgv8n7zbahbr14aN25c02UAwPeWsBEA+M5r3rx5Bp1/fqZPn17TpQDLuMaNG6d58+Y1XQYAfG8JGwGAZULz5s0FBAAA8B3nATEAAAAAQCGEjQAAAABAIYSNAAAAAEAhhI0AAAAAQCGEjQAAAABAIYSNAAAAAEAhhI0AAAAAQCGEjQAAAABAIYSNAAAAAEAhhI0AAAAAQCGEjQAAAABAIYSNAAAAAEAhhI0sN8aNG5cBAwZk3LhxNV0KAAAAwPeSsJHlxjvvvJPXXnst77zzTk2XAgAAAPC9JGwEAAAAAAohbAQAAAAACiFsBAAAAAAKIWwEAAAAAAohbAQAAAAACiFsBAAAAAAKIWwEAAAAAAohbAQAAAAACiFsBAAAAAAKIWwEAAAAAAohbAQAAAAACiFsBAAAAAAKIWxkufHZZ59V+wkAAABAsYSNLDfGjx9f7ScAAAAAxRI2AgAAAACFEDYCAAAAAIUQNgIAAAAAhRA2AgAAAACFEDYCAAAAAIUQNgIAAAAAhRA2AgAAAACFEDYCAAAAAIUQNgIAAAAAhfhehI0VFRW56667Fjr/kUceSUVFRaZMmfJfq2lJfd0+AAAAAMB33TIRNv7nP//J0UcfnQ4dOqSysjJt2rTJLrvskmHDhtV0aYWZOHFidthhh5ouAwAAAACWWp2aLuDrjBs3LltssUWaNWuW8847L127ds3s2bMzdOjQHHnkkXnttdf+K3XMmjUr9erV+9bW37Jly29t3QAAAADw3/CdH9nYr1+/VFRU5Jlnnsmee+6ZNddcM126dMkvf/nLPPXUU+V+kyZNyo9//OM0bNgwnTp1yj333LPI9d5xxx3p0qVLKisr0759+wwaNKja/Pbt2+fMM8/MAQcckCZNmuSwww5Lkpx00klZc80107Bhw3To0CGnnnpqZs+eXV6uf//+2WCDDXL99denbdu2qaqqSr9+/TJnzpyce+65admyZVZeeeWcddZZ1bb35cuox40bl4qKitx5553p2bNnGjZsmPXXXz//+Mc/qi3zxBNPpHv37mnQoEHatGmTY445Jh9//HF5/uWXX55OnTqlfv36WWWVVbLXXnst/oEHAAAAgCX0nQ4bJ0+enAceeCBHHnlkGjVqNN/8Zs2alf98xhlnZJ999snLL7+cHXfcMX369MnkyZMXuN7nn38+++yzT/bdd9+88sor6d+/f0499dQMHjy4Wr/zzz8/66+/fl588cWceuqpSZLGjRtn8ODBefXVV3PxxRfnmmuuyYUXXlhtuTFjxuT+++/PAw88kFtuuSXXXXdddtppp7zzzjt59NFHc8455+Q3v/lNnn766UXu/ymnnJITTjghI0eOzJprrpnevXvn888/L29j++23z5577pmXX345t956a5544okcddRRSZLnnnsuxxxzTAYMGJDXX389DzzwQLbccstFbg8AAAAAvonv9GXUb775ZkqlUtZee+2v7du3b9/07t07SXL22WfnkksuyTPPPJPtt99+vr4XXHBBttlmm3KAuOaaa+bVV1/Neeedl759+5b7bb311jn++OOrLfub3/ym/Of27dvnhBNOyJ/+9Kf86le/KrfPnTs3119/fRo3bpzOnTunZ8+eef3113PfffelVq1aWWuttXLOOedk+PDh2WyzzRa6TyeccEJ22mmnJF+EqV26dMmbb76ZtddeOwMHDkyfPn1y3HHHJUk6deqUSy65JD169MgVV1yR8ePHp1GjRtl5553TuHHjtGvXLhtuuOFCtzVz5szMnDmzPD1t2rSF9gUAAACABflOj2wslUqL3Xe99dYr/7lRo0Zp0qRJ3n///QX2HTVqVLbYYotqbVtssUVGjx6dOXPmlNs23njj+Za99dZbs8UWW6Rly5apqqrKb37zm4wfP75an/bt26dx48bl6VVWWSWdO3dOrVq1qrUtrL4F7VOrVq2SpLzMSy+9lMGDB6eqqqr86tWrV+bOnZuxY8dmu+22S7t27dKhQ4fsv//+uemmm/LJJ58sdFsDBw5M06ZNy682bdossjYAAAAA+KrvdNjYqVOnVFRULNZDYOrWrVttuqKiInPnzv1G2//qpdv/+Mc/0qdPn+y4446599578+KLL+aUU07JrFmzvraWpanvy8tUVFQkSXmZGTNm5PDDD8/IkSPLr5deeimjR49Ox44d07hx47zwwgu55ZZb0qpVq5x22mlZf/31M2XKlAVu6+STT87UqVPLr7fffnuRtQEAAADAV32nL6NeccUV06tXr/z+97/PMcccM1/4N2XKlGr3bVxc66yzTkaMGFGtbcSIEVlzzTVTu3bthS735JNPpl27djnllFPKbf/+97+XePtF2GijjfLqq69mjTXWWGifOnXqZNttt822226b008/Pc2aNcvf//737LHHHvP1raysTGVl5bdZMgAAAADfc9/pkY1J8vvf/z5z5szJpptumjvuuCOjR4/OqFGjcskll2TzzTdfqnUef/zxGTZsWM4888y88cYbGTJkSC677LKccMIJi1yuU6dOGT9+fP70pz9lzJgxueSSS/KXv/xlqWr4pk466aQ8+eSTOeqoozJy5MiMHj06d999d/kBMffee28uueSSjBw5Mv/+97/zhz/8IXPnzs1aa61VI/UCAAAA8P33nQ8bO3TokBdeeCE9e/bM8ccfn3XXXTfbbbddhg0bliuuuGKp1rnRRhvltttuy5/+9Kesu+66Oe200zJgwIBqD4dZkF133TW/+MUvctRRR2WDDTbIk08+WX7IzH/beuutl0cffTRvvPFGunfvng033DCnnXZaWrduneSLJ3Xfeeed2XrrrbPOOuvkyiuvzC233JIuXbrUSL0AAAAAfP9VlJbkKSwsN6ZNm5amTZtm6tSpadKkSU2XU4jrr78+Dz/8cLbddtscdNBBNV0OAAAAwDJhSXKi7/zIRgAAAABg2SBsBAAAAAAKIWwEAAAAAAohbAQAAAAACiFsBAAAAAAKIWwEAAAAAAohbAQAAAAACiFsBAAAAAAKIWwEAAAAAAohbAQAAAAACiFsZLnRtm3baj8BAAAAKJawkeVG/fr1q/0EAAAAoFjCRgAAAACgEMJGAAAAAKAQwkYAAAAAoBDCRgAAAACgEMJGAAAAAKAQwkYAAAAAoBDCRgAAAACgEMJGAAAAAKAQwkYAAAAAoBDCRgAAAACgEMJGAAAAAKAQwkYAAAAAoBDCRgAAAACgEMJGlhurrbZa1l577ay22mo1XQoAAADA91JFqVQq1XQRfPdMmzYtTZs2zdSpU9OkSZOaLgcAAACAGrIkOZGRjQAAAABAIYSNAAAAAEAhhI0AAAAAQCGEjQAAAABAIYSNAAAAAEAhhI0AAAAAQCGEjQAAAABAIYSNAAAAAEAhhI0AAAAAQCGEjQAAAABAIYSNAAAAAEAhhI0AAAAAQCGEjfB/Jk2alEmTJtV0GQAAAADLLGEj5Iug8fjjf5njjjsuY8aMqelyAAAAAJZJwkZIMn369Mye/Xnmzp2biRMn1nQ5AAAAAMskYSMAAAAAUAhhIwAAAABQCGEjAAAAAFAIYSMAAAAAUAhhIwAAAABQCGEjAAAAAFAIYSMAAAAAUAhhIwAAAABQCGEjAAAAAFAIYSMAAAAAUAhhIwAAAABQCGEjAAAAAFAIYSPLvZkzZ+bdd98tT3/wwQeZOXNmDVYEAAAAsGwSNrLcmzBhQi6//PLy9O23354JEybUYEUAAAAAyyZhIwAAAABQCGEjAAAAAFAIYSMAAAAAUAhhIwAAAABQCGEjAAAAAFAIYSMAAAAAUAhhIwAAAABQCGEjAAAAAFAIYSMAAAAAUAhhYw155JFHUlFRkSlTppTb7rrrrqyxxhqpXbt2jjvuuBqrDQAAAACWhrBxKX3wwQf5+c9/nrZt26aysjItW7ZMr169MmLEiKVe5+GHH5699torb7/9ds4888zFWmarrbYSTAIAAADwnVCnpgtYVu25556ZNWtWhgwZkg4dOuS9997LsGHD8uGHHy7V+mbMmJH3338/vXr1SuvWrQuuFgAAAAC+fUY2LoUpU6bk8ccfzznnnJOePXumXbt22XTTTXPyySdn1113zbhx41JRUZGRI0dWW6aioiKPPPLIfOt75JFH0rhx4yTJ1ltvXe734Ycfpnfv3ll11VXTsGHDdO3aNbfcckt5ub59++bRRx/NxRdfnIqKilRUVGTcuHFJkn/+85/ZYYcdUlVVlVVWWSX7779/Jk2a9G0eFgAAAACWc8LGpVBVVZWqqqrcddddmTlz5jde3w9+8IO8/vrrSZI77rgjEydOzA9+8IN89tln6datW/72t7/ln//8Zw477LDsv//+eeaZZ5IkF198cTbffPMceuihmThxYiZOnJg2bdpkypQp2XrrrbPhhhvmueeeywMPPJD33nsv++yzzzeuFQAAAAAWxmXUS6FOnToZPHhwDj300Fx55ZXZaKON0qNHj+y7775Zb731lnh99erVy8orr5wkWXHFFdOyZcskyaqrrpoTTjih3O/oo4/O0KFDc9ttt2XTTTdN06ZNU69evTRs2LC8TJJcdtll2XDDDXP22WeX266//vq0adMmb7zxRtZcc835apg5c2a14HTatGlLvB8AAAAALN+MbFxKe+65ZyZMmJB77rkn22+/fR555JFstNFGGTx4cGHbmDNnTs4888x07do1K664YqqqqjJ06NCMHz9+kcu99NJLGT58eHkEZlVVVdZee+0kyZgxYxa4zMCBA9O0adPyq02bNoXtBwAAAADLByMbv4H69etnu+22y3bbbZdTTz01hxxySE4//fQ8/vjjSZJSqVTuO3v27CVe/3nnnZeLL744F110Ubp27ZpGjRrluOOOy6xZsxa53IwZM7LLLrvknHPOmW9eq1atFrjMySefnF/+8pfl6WnTpgkcAQAAAFgiwsYCde7cOXfddVdatGiRJJk4cWI23HDDJKn2sJjFNWLEiOy2227Zb7/9kiRz587NG2+8kc6dO5f71KtXL3PmzKm23EYbbZQ77rgj7du3T506i/cWV1ZWprKycolrBAAAAIB5XEa9FD788MNsvfXW+eMf/5iXX345Y8eOze23355zzz03u+22Wxo0aJD/+Z//ye9+97uMGjUqjz76aH7zm98s8XY6deqUhx56KE8++WRGjRqVww8/PO+99161Pu3bt8/TTz+dcePGZdKkSZk7d26OPPLITJ48Ob17986zzz6bMWPGZOjQofnZz342XzAJAAAAAEURNi6FqqqqbLbZZrnwwguz5ZZbZt11182pp56aQw89NJdddlmSLx7I8vnnn6dbt2457rjj8tvf/naJt/Ob3/wmG220UXr16pWtttoqLVu2zO67716tzwknnJDatWunc+fOadGiRcaPH5/WrVtnxIgRmTNnTn70ox+la9euOe6449KsWbPUquUtBwAAAODbUVH68o0F4f9MmzYtTZs2zdSpU9OkSZOaLudbNXbs2JxyyinV2s4666ysvvrqNVQRAAAAwHfHkuREhrkBAAAAAIUQNgIAAAAAhRA2AgAAAACFEDYCAAAAAIUQNgIAAAAAhRA2AgAAAACFEDYCAAAAAIUQNgIAAAAAhRA2AgAAAACFEDYCAAAAAIUQNrLca926dfr161ee3nvvvdO6desarAgAAABg2SRsZLlXWVmZVVddtTzdokWLVFZW1mBFAAAAAMsmYSMAAAAAUAhhIwAAAABQCGEjAAAAAFAIYSMAAAAAUAhhIwAAAABQCGEjAAAAAFAIYSMAAAAAUAhhIwAAAABQCGEjAAAAAFAIYSMAAAAAUAhhIwAAAABQCGEjAAAAAFAIYSMAAAAAUAhhIyRp3Lhx6tatk1q1aqVVq1Y1XQ4AAADAMqlOTRcA3wXNmzfPoEEXlP8MAAAAwJITNsL/ETICAAAAfDMuowYAAAAACiFsBAAAAAAKIWwEAAAAAAohbAQAAAAACiFsBAAAAAAKIWwEAAAAAAohbAQAAAAACiFsBAAAAAAKIWwEAAAAAAohbAQAAAAACiFsBAAAAAAKUaemC4DvkkmTJmX69OlJksaNG6d58+Y1XBEAAADAskPYCP9n0qRJOeGE4zNr1uwkSd26dTJo0AUCRwAAAIDF5DJq+D/Tp0/PrFmzs/3mnyZJZs/+vDzKEQAAAICvJ2yEr1ix6dyaLgEAAABgmSRsBAAAAAAKIWwEAAAAAAohbAQAAAAACiFsBAAAAAAKIWwEAAAAAAohbAQAAAAACiFsBAAAAAAKIWwEAAAAAAohbAQAAAAACiFsBAAAAAAKIWwEAAAAAAohbGS5NXPmzIwdOzYzZ84stC8AAADA8krYyHJrwoQJOeWUUzJhwoRC+wIAAAAsr4SNAAAAAEAhhI0AAAAAQCGEjQAAAABAIYSNAAAAAEAhhI0AAAAAQCGEjQAAAABAIYSNAAAAAEAhhI0AAAAAQCGEjQAAAABAIYSNC7HVVlvluOOO+9a3U1FRkbvuumux+7dv3z4XXXTRt1YPAAAAACyt73zY+J///CdHH310OnTokMrKyrRp0ya77LJLhg0bVtOlLZH+/ftngw02mK994sSJ2WGHHRZ7Pc8++2wOO+yw8vSShpUAAAAA8G2pU9MFLMq4ceOyxRZbpFmzZjnvvPPStWvXzJ49O0OHDs2RRx6Z1157raZL/MZatmy5RP1btGjxLVUCAAAAAN/Md3pkY79+/VJRUZFnnnkme+65Z9Zcc8106dIlv/zlL/PUU08lScaPH5/ddtstVVVVadKkSfbZZ5+899575XXMG1F44403pn379mnatGn23XffTJ8+vdzn448/zgEHHJCqqqq0atUqgwYNmq+WBY0gbNasWQYPHlyefuedd9K7d++suOKKadSoUTbeeOM8/fTTGTx4cM4444y89NJLqaioSEVFRXm5L6/3Bz/4QU466aRq2/jggw9St27dPPbYY0mqX0bdvn37JMmPf/zjVFRUpH379hk3blxq1aqV5557rtp6LrroorRr1y5z585drGMPAAAAAEvqOxs2Tp48OQ888ECOPPLINGrUaL75zZo1y9y5c7Pbbrtl8uTJefTRR/PQQw/lrbfeyk9+8pNqfceMGZO77ror9957b+699948+uij+d3vfleef+KJJ+bRRx/N3XffnQcffDCPPPJIXnjhhSWqd8aMGenRo0fefffd3HPPPXnppZfyq1/9KnPnzs1PfvKTHH/88enSpUsmTpyYiRMnzldjkvTp0yd/+tOfUiqVym233nprWrdune7du8/X/9lnn02S3HDDDZk4cWKeffbZtG/fPttuu21uuOGGan1vuOGG9O3bN7VqfWffcgAAAACWcd/Zy6jffPPNlEqlrL322gvtM2zYsLzyyisZO3Zs2rRpkyT5wx/+kC5duuTZZ5/NJptskiSZO3duBg8enMaNGydJ9t9//wwbNixnnXVWZsyYkeuuuy5//OMfs8022yRJhgwZktVWW22J6r355pvzwQcf5Nlnn82KK66YJFljjTXK86uqqlKnTp1FXja9zz775LjjjssTTzxRDhdvvvnm9O7dOxUVFfP1n3dJdbNmzaqt95BDDskRRxyRCy64IJWVlXnhhRfyyiuv5O67717otmfOnJmZM2eWp6dNm7aYe77se/fdd6v9XNx5AAAAAFT3nQ0bvzy6b2FGjRqVNm3alIPGJOncuXOaNWuWUaNGlcPG9u3bl4PGJGnVqlXef//9JF+Mepw1a1Y222yz8vwVV1wxa6211hLVO3LkyGy44YbloHFptGjRIj/60Y9y0003pXv37hk7dmz+8Y9/5Kqrrlqi9ey+++458sgj85e//CX77rtvBg8enJ49e5Yvu16QgQMH5owzzljq2pdll19++VLNAwAAAKC67+w1tZ06dUpFRUUhD4GpW7dutemKioolvndhRUXFfAHo7Nmzy39u0KDB0hf4JX369Mmf//znzJ49OzfffHO6du2arl27LtE66tWrlwMOOCA33HBDZs2alZtvvjkHHXTQIpc5+eSTM3Xq1PLr7bff/ia7sUzp169fzjrrrPTr12+J5gEAAABQ3Xc2bFxxxRXTq1ev/P73v8/HH3883/wpU6ZknXXWydtvv10tGHv11VczZcqUdO7cebG207Fjx9StWzdPP/10ue2jjz7KG2+8Ua1fixYtMnHixPL06NGj88knn5Sn11tvvYwcOTKTJ09e4Hbq1auXOXPmfG09u+22Wz777LM88MADufnmm9OnT59F9q9bt+4C13vIIYfk4YcfzuWXX57PP/88e+yxxyLXU1lZmSZNmlR7LS9WXXXVrL766ll11VWXaB4AAAAA1X1nw8Yk+f3vf585c+Zk0003zR133JHRo0dn1KhRueSSS7L55ptn2223TdeuXdOnT5+88MILeeaZZ3LAAQekR48e2XjjjRdrG1VVVTn44INz4okn5u9//3v++c9/LvBBKltvvXUuu+yyvPjii3nuuedyxBFHVBsx2bt377Rs2TK77757RowYkbfeeit33HFH/vGPfyT54lLusWPHZuTIkZk0aVK1+yN+WaNGjbL77rvn1FNPzahRo9K7d+9F1t++ffsMGzYs//nPf/LRRx+V29dZZ538z//8T0466aT07t27sJGXAAAAALAw3+mwsUOHDnnhhRfSs2fPHH/88Vl33XWz3XbbZdiwYbniiitSUVGRu+++OyussEK23HLLbLvttunQoUNuvfXWJdrOeeedl+7du2eXXXbJtttumx/+8Ifp1q1btT6DBg1KmzZt0r179/z0pz/NCSeckIYNG5bn16tXLw8++GBWXnnl7LjjjunatWt+97vfpXbt2kmSPffcM9tvv3169uyZFi1a5JZbblloPX369MlLL72U7t27p23btousfdCgQXnooYfSpk2bbLjhhtXmHXzwwZk1a9bXXkINAAAAAEWoKC3Ok1hYJp155pm5/fbb8/LLLy/xstOmTUvTpk0zderU7+0l1WPHjs0pp5ySs846K6uvvnp5+qfbf5ybH2iUJPPNmzcNAAAAsLxYkpzoOz2ykaUzY8aM/POf/8xll12Wo48+uqbLAQAAAGA5IWz8HjrqqKPSrVu3bLXVVi6hBgAAAOC/pk5NF0DxBg8enMGDB9d0GQAAAAAsZ4xsBAAAAAAKIWwEAAAAAAohbAQAAAAACiFsBAAAAAAKIWwEAAAAAAohbAQAAAAACiFsBAAAAAAKIWxkudW6deucddZZad26daF9AQAAAJZXdWq6AKgplZWVWX311QvvCwAAALC8MrIRAAAAACiEsBEAAAAAKISwEQAAAAAohLARAAAAACiEsBEAAAAAKISwEQAAAAAohLARAAAAACiEsBEAAAAAKISwEQAAAAAohLARAAAAACiEsBEAAAAAKISwEQAAAAAohLARvmLyVKcFAAAAwNKoU9MFwHdF48aNU69e3Tzwjy+m69atk8aNG9dsUQAAAADLEGEj/J/mzZvn/PMHZfr06Um+CB+bN29ew1UBAAAALDuEjfAlzZs3FzACAAAALCU3pwMAAAAACiFsBAAAAAAKIWwEAAAAAAohbAQAAAAACiFsBAAAAAAKIWwEAAAAAAohbAQAAAAACiFsBAAAAAAKIWwEAAAAAAohbAQAAAAACiFsBAAAAAAKIWwEAAAAAAohbGS5MW7cuAwYMCDjxo2r6VIAAAAAvpeEjSw33nnnnbz22mt55513aroUAAAAgO8lYSMAAAAAUAhhIwAAAABQCGEjAAAAAFAIYSMAAAAAUAhhIwAAAABQCGEjAAAAAFAIYSMAAAAAUAhhIwAAAABQCGEjAAAAAFAIYSMAAAAAUAhhIwAAAABQCGEjAAAAAFAIYSPLjc8++6zaTwAAAACKJWxkuTF+/PhqPwEAAAAolrARAAAAACiEsBEAAAAAKISwEQAAAAAohLARAAAAACiEsBEAAAAAKISwEQAAAAAohLARAAAAACiEsBEAAAAAKISwEQAAAAAoxHIVNo4bNy4VFRUZOXJkTZeyUH379s3uu+9e02UAAAAAwBIrNGx8++23c9BBB6V169apV69e2rVrl2OPPTYffvhhkZtZam3atMnEiROz7rrr1nQpAAAAAPC9U1jY+NZbb2XjjTfO6NGjc8stt+TNN9/MlVdemWHDhmXzzTfP5MmTF7jcrFmziirha9WuXTstW7ZMnTp1/mvbXFxz5szJ3Llza7oMAAAAAFhqhYWNRx55ZOrVq5cHH3wwPXr0SNu2bbPDDjvk4YcfzrvvvptTTjklSdK+ffuceeaZOeCAA9KkSZMcdthhSZJrrrkmbdq0ScOGDfPjH/84F1xwQZo1a1Ze/5gxY7LbbrtllVVWSVVVVTbZZJM8/PDD1Wpo3759zj777Bx00EFp3Lhx2rZtm6uvvro8f0GXUf/rX//KzjvvnCZNmqRx48bp3r17xowZs1j7fP3116dLly6prKxMq1atctRRR5XnXXDBBenatWsaNWqUNm3apF+/fpkxY0Z5/uDBg9OsWbPcc8896dy5cyorKzN+/Pjy/DPOOCMtWrRIkyZNcsQRR1QLZWfOnJljjjkmK6+8curXr58f/vCHefbZZ8vzH3nkkVRUVGTYsGHZeOON07Bhw/zgBz/I66+/vlj7BQAAAABLo5CwcfLkyRk6dGj69euXBg0aVJvXsmXL9OnTJ7feemtKpVKS5Pzzz8/666+fF198MaeeempGjBiRI444Iscee2xGjhyZ7bbbLmeddVa19cyYMSM77rhjhg0blhdffDHbb799dtlll2oBXZIMGjQoG2+8cV588cX069cvP//5zxcasr377rvZcsstU1lZmb///e95/vnnc9BBB+Xzzz//2n2+4oorcuSRR+awww7LK6+8knvuuSdrrLFGeX6tWrVyySWX5F//+leGDBmSv//97/nVr35VbR2ffPJJzjnnnFx77bX517/+lZVXXjlJMmzYsIwaNSqPPPJIbrnlltx5550544wzysv96le/yh133JEhQ4bkhRdeyBprrJFevXrNN3r0lFNOyaBBg/Lcc8+lTp06Oeigg752vwAAAABgqZUK8NRTT5WSlP7yl78scP4FF1xQSlJ67733Su3atSvtvvvu1eb/5Cc/Ke20007V2vr06VNq2rTpIrfbpUuX0qWXXlqebteuXWm//fYrT8+dO7e08sorl6644opSqVQqjR07tpSk9OKLL5ZKpVLp5JNPLq2++uqlWbNmLeae/n+tW7cunXLKKYvd//bbby+ttNJK5ekbbrihlKQ0cuTIav0OPPDA0oorrlj6+OOPy21XXHFFqaqqqjRnzpzSjBkzSnXr1i3ddNNN5fmzZs0qtW7dunTuueeWSqVSafjw4aUkpYcffrjc529/+1spSenTTz9dYH2fffZZaerUqeXX22+/XUpSmjp16mLv43fdddddV+rdu3fpuuuuq+lSAAAAAJYZU6dOXeycqNAHxJT+b+Ti19l4442rTb/++uvZdNNNq7V9dXrGjBk54YQTss4666RZs2apqqrKqFGj5hvZuN5665X/XFFRkZYtW+b9999fYB0jR45M9+7dU7du3cWqe573338/EyZMyDbbbLPQPg8//HC22WabrLrqqmncuHH233//fPjhh/nkk0/KferVq1et3nnWX3/9NGzYsDy9+eabZ8aMGXn77bczZsyYzJ49O1tssUV5ft26dbPppptm1KhR1dbz5XW3atWqXPuCDBw4ME2bNi2/2rRp8zVHAQAAAACqKyRsXGONNVJRUTFf2DXPqFGjssIKK6RFixZJkkaNGi3xNk444YT85S9/ydlnn53HH388I0eOTNeuXed7wMxXg8OKioqFPnjlq5d8L66vW27cuHHZeeeds9566+WOO+7I888/n9///vdJqj8Qp0GDBqmoqFiqGhbHl4/FvO0s7FicfPLJmTp1avn19ttvf2t1AQAAAPD9VEjYuNJKK2W77bbL5Zdfnk8//bTavP/85z+56aab8pOf/GShwdpaa61V7QEnSeabHjFiRPr27Zsf//jH6dq1a1q2bJlx48Z9o7rXW2+9PP7445k9e/YSLde4ceO0b98+w4YNW+D8559/PnPnzs2gQYPyP//zP1lzzTUzYcKExV7/Sy+9VO04PvXUU6mqqkqbNm3SsWPH1KtXLyNGjCjPnz17dp599tl07tx5ifbjyyorK9OkSZNqLwAAAABYEoVdRn3ZZZdl5syZ6dWrVx577LG8/fbbeeCBB7Lddttl1VVXne+BL1929NFH57777ssFF1yQ0aNH56qrrsr9999fLZzs1KlT7rzzzowcOTIvvfRSfvrTny50lN7iOuqoozJt2rTsu+++ee655zJ69OjceOONi/XU5v79+2fQoEG55JJLMnr06Lzwwgu59NJLk3wx0nP27Nm59NJL89Zbb+XGG2/MlVdeudh1zZo1KwcffHBeffXV3HfffTn99NNz1FFHpVatWmnUqFF+/vOf58QTT8wDDzyQV199NYceemg++eSTHHzwwUt9LAAAAADgmyosbOzUqVOee+65dOjQIfvss086duyYww47LD179sw//vGPrLjiigtddosttsiVV16ZCy64IOuvv34eeOCB/OIXv0j9+vXLfS644IKssMIK+cEPfpBddtklvXr1ykYbbfSNal5ppZXy97//PTNmzEiPHj3SrVu3XHPNNYt1D8cDDzwwF110US6//PJ06dIlO++8c0aPHp3ki3suXnDBBTnnnHOy7rrr5qabbsrAgQMXu65tttkmnTp1ypZbbpmf/OQn2XXXXdO/f//y/N/97nfZc889s//++2ejjTbKm2++maFDh2aFFVZY4mMAAAAAAEWpKC3uU13+yw499NC89tprefzxx2u6lOXStGnT0rRp00ydOvV7c0n19ddfn4cffjjbbrttDjrooJouBwAAAGCZsCQ5UZ3/Uk1f6/zzz892222XRo0a5f7778+QIUNy+eWX13RZAAAAAMBi+s6Ejc8880zOPffcTJ8+PR06dMgll1ySQw45pMbqqaqqWui8+++/P927d/8vVgMAAAAA333fmbDxtttuq+kSqhk5cuRC56266qr/vUIAAAAAYBnxnQkbv2vWWGONmi4BAAAAAJYphT2NGgAAAABYvgkbAQAAAIBCCBsBAAAAgEIIGwEAAACAQggbAQAAAIBCCBsBAAAAgEIIG1lutG3bttpPAAAAAIolbGS5Ub9+/Wo/AQAAACiWsBEAAAAAKISwEQAAAAAohLARAAAAACiEsBEAAAAAKISwEQAAAAAohLARAAAAACiEsBEAAAAAKISwEQAAAAAohLARAAAAACiEsBEAAAAAKISwEQAAAAAohLARAAAAACiEsBEAAAAAKISwkeXGaqutlrXXXjurrbZaTZcCAAAA8L1UUSqVSjVdBN8906ZNS9OmTTN16tQ0adKkpssBAAAAoIYsSU5kZCMAAAAAUAhhIwAAAABQCGEjAAAAAFAIYSMAAAAAUAhhIwAAAABQCGEjAAAAAFAIYSMAAAAAUAhhIwAAAABQCGEjAAAAAFAIYSMAAAAAUAhhIwAAAABQCGEjAAAAAFAIYSMAAAAAUAhhI8uVcePGZcCAARk3blxNlwIAAADwvSNsZLnyzjvv5LXXXss777xT06UAAAAAfO8IGwEAAACAQggbAQAAAIBCCBsBAAAAgEIIGwEAAACAQggbAQAAAIBCCBsBAAAAgEIIGwEAAACAQggbAQAAAIBCCBsBAAAAgEIIGwEAAACAQggbAQAAAIBCCBsBAAAAgEIIG1luzJw5Mx988EGS5IMPPsjMmTNruCIAAACA7xdhI8uNCRMm5Pbbb0+S3H777ZkwYUINVwQAAADw/SJsBAAAAAAKIWwEAAAAAAohbAQAAAAACiFsBAAAAAAKIWwEAAAAAAohbAQAAAAACiFsBAAAAAAKIWwEAAAAAAohbAQAAAAACvGtho39+/fPBhtsUJ7u27dvdt9992+0zkceeSQVFRWZMmXKN1rPt2Xw4MFp1qxZTZcBAAAAAP91ix02VlRULPLVv3//+ZY54YQTMmzYsCLr/U5p3759LrroopouAwAAAAC+E+osbseJEyeW/3zrrbfmtNNOy+uvv15uq6qqKv+5VCplzpw5qaqqqtYOAAAAAHx/LfbIxpYtW5ZfTZs2TUVFRXn6tddeS+PGjXP//fenW7duqayszBNPPDHfZdTznH/++WnVqlVWWmmlHHnkkZk9e3Z53o033piNN944jRs3TsuWLfPTn/4077///iJru+OOO9KlS5dUVlamffv2GTRoULX57du3z29/+9sccMABqaqqSrt27XLPPffkgw8+yG677Zaqqqqst956ee6556ot98QTT6R79+5p0KBB2rRpk2OOOSYff/xxkmSrrbbKv//97/ziF78oj+78sqFDh2adddZJVVVVtt9++2ph7bPPPpvtttsuzZs3T9OmTdOjR4+88MIL1ZavqKjItddemx//+Mdp2LBhOnXqlHvuuadan3/+85/ZYYcdUlVVlVVWWSX7779/Jk2aVJ7/5z//OV27dk2DBg2y0korZdttty3XDwAAAABFK/Sejf/7v/+b3/3udxk1alTWW2+9BfYZPnx4xowZk+HDh2fIkCEZPHhwBg8eXJ4/e/bsnHnmmXnppZdy1113Zdy4cenbt+9Ct/n8889nn332yb777ptXXnkl/fv3z6mnnlptnUly4YUXZosttsiLL76YnXbaKfvvv38OOOCA7LfffnnhhRfSsWPHHHDAASmVSkmSMWPGZPvtt8+ee+6Zl19+ObfeemueeOKJHHXUUUmSO++8M6uttloGDBiQiRMnVgsTP/nkk5x//vm58cYb89hjj2X8+PE54YQTyvOnT5+eAw88ME888USeeuqpdOrUKTvuuGOmT59ereYzzjgj++yzT15++eXsuOOO6dOnTyZPnpwkmTJlSrbeeutsuOGGee655/LAAw/kvffeyz777JPki5GovXv3zkEHHZRRo0blkUceyR577FHePwAAAAAo2mJfRr04BgwYkO22226RfVZYYYVcdtllqV27dtZee+3stNNOGTZsWA499NAkyUEHHVTu26FDh1xyySXZZJNNMmPGjAVekn3BBRdkm222yamnnpokWXPNNfPqq6/mvPPOqxZS7rjjjjn88MOTJKeddlquuOKKbLLJJtl7772TJCeddFI233zzvPfee2nZsmUGDhyYPn365LjjjkuSdOrUKZdcckl69OiRK664IiuuuGJq165dHoH5ZbNnz86VV16Zjh07JkmOOuqoDBgwoDx/6623rtb/6quvTrNmzfLoo49m5513Lrf37ds3vXv3TpKcffbZueSSS/LMM89k++23z2WXXZYNN9wwZ599drn/9ddfnzZt2uSNN97IjBkz8vnnn2ePPfZIu3btkiRdu3Zd6Psyc+bMzJw5szw9bdq0hfYFAAAAgAUpdGTjxhtv/LV9unTpktq1a5enW7VqVe0y6eeffz677LJL2rZtm8aNG6dHjx5JkvHjxy9wfaNGjcoWW2xRrW2LLbbI6NGjM2fOnHLbl0darrLKKkmqh2/z2ubV8tJLL2Xw4MHl+05WVVWlV69emTt3bsaOHbvIfWzYsGE5aFzQPr733ns59NBD06lTpzRt2jRNmjTJjBkz5tvHL9fcqFGjNGnSpFp9w4cPr1bf2muvneSLUZnrr79+ttlmm3Tt2jV77713rrnmmnz00UcLrXngwIFp2rRp+dWmTZtF7iMAAAAAfFWhIxsbNWr0tX3q1q1bbbqioiJz585Nknz88cfp1atXevXqlZtuuiktWrTI+PHj06tXr8yaNesb1fbl7c67v+KC2ubVMmPGjBx++OE55phj5ltX27ZtF3tb89b95cuXDzzwwHz44Ye5+OKL065du1RWVmbzzTefbx8XdaxmzJiRXXbZJeecc85822/VqlVq166dhx56KE8++WQefPDBXHrppTnllFPy9NNPZ/XVV59vmZNPPjm//OUvy9PTpk0TOAIAAACwRAoNG7+p1157LR9++GF+97vflYOurz605avWWWedjBgxolrbiBEjsuaaa1YbQbmkNtpoo7z66qtZY401FtqnXr161UZPLq4RI0bk8ssvz4477pgkefvtt6s92GVx67vjjjvSvn371Kmz4LexoqIiW2yxRbbYYoucdtppadeuXf7yl79UCxXnqaysTGVl5RLvCwAAAADMU+hl1N9U27ZtU69evVx66aV56623cs899+TMM89c5DLHH398hg0bljPPPDNvvPFGhgwZkssuu6zaA1mWxkknnZQnn3wyRx11VEaOHJnRo0fn7rvvLj8gJvniKdePPfZY3n333SUKCzt16pQbb7wxo0aNytNPP50+ffqkQYMGS1TfkUcemcmTJ6d379559tlnM2bMmAwdOjQ/+9nPMmfOnDz99NM5++yz89xzz2X8+PG5884788EHH2SdddZZou0AAAAAwOL6ToWNLVq0yODBg3P77benc+fO+d3vfpfzzz9/kctstNFGue222/KnP/0p6667bk477bQMGDBgkU+wXhzrrbdeHn300bzxxhvp3r17Ntxww5x22mlp3bp1uc+AAQMybty4dOzYMS1atFjsdV933XX56KOPstFGG2X//ffPMccck5VXXnmJ6mvdunVGjBiROXPm5Ec/+lG6du2a4447Ls2aNUutWrXSpEmTPPbYY9lxxx2z5ppr5je/+U0GDRqUHXbYYYm2AwAAAACLq6L05ZsJwv+ZNm1amjZtmqlTp6ZJkyY1XU4hxo4dm1NOOaU8fdZZZy3w/pUAAAAA/H9LkhN9p0Y2AgAAAADLLmEjAAAAAFAIYSMAAAAAUAhhIwAAAABQCGEjAAAAAFAIYSMAAAAAUAhhIwAAAABQCGEjAAAAAFAIYSMAAAAAUAhhIwAAAABQCGEjy43WrVtn7733TpLsvffead26dQ1XBAAAAPD9ImxkuVFZWZkWLVokSVq0aJHKysoarggAAADg+0XYCAAAAAAUQtgIAAAAABRC2AgAAAAAFELYCAAAAAAUQtgIAAAAABRC2AgAAAAAFELYCAAAAAAUQtgIAAAAABRC2AgAAAAAFELYCAAAAAAUQtgIAAAAABRC2AgAAAAAFELYCAAAAAAUQtjIcmW11VbL2muvndVWW62mSwEAAAD43qkolUqlmi6C755p06aladOmmTp1apo0aVLT5QAAAABQQ5YkJzKyEQAAAAAohLARAAAAACiEsBEAAAAAKISwEQAAAAAohLARAAAAACiEsBEAAAAAKISwEQAAAAAohLARAAAAACiEsBEAAAAAKISwEQAAAAAohLARAAAAACiEsBEAAAAAKISwEQAAAAAohLCR5ca4ceMyYMCAjBs3rqZLAQAAAPheEjay3HjnnXfy2muv5Z133qnpUgAAAAC+l4SNAAAAAEAhhI0AAAAAQCGEjQAAAABAIYSNAAD/r727D7Kqrv8A/rmw3F0e3AUD2RBWdCAefEBFw8XKGjFEM216ILVywSgVZ3BKS7KSsRqIzHwYtBpzaZqUsglCRQpRUBnlKVYhcLWUwFp8SnYhed7v7w/H+/PKg2AHF9jXa+bO3XPP55zzuXfmw515c849AABAJoSNAAAAAEAmhI0AAAAAQCaEjQAAAABAJoSNAAAAAEAmhI0AAAAAQCaEjQAAAABAJoSNAAAAAEAmhI0AAAAAQCaEjbQamzdvLnoGAAAAIFvCRlqNNWvWFD0DAAAAkC1hIwAAAACQCWEjAAAAAJAJYSMAAAAAkAlhIwAAAACQCWEjAAAAAJAJYSMAAAAAkAlhIwAAAACQCWEjAAAAAJAJYSMAAAAAkAlh437Uu3fvuPnmm/dYk8vlYsaMGbtdv3r16sjlclFXVxcREfPmzYtcLhfr16/PrE8AAAAAyIKwMd4M/Pb0mDBhwn47dkNDQ4wYMWKv64cOHRoNDQ1RUVERERFTp06Nzp0776fuAAAAAGDvlbR0AweChoaGwt+/+93v4vvf/37U19cXXuvUqdM+7W/r1q2Rz+f3qraysnKf9p3P5/d5GwAAAAB4PzizMd4M/N56VFRURC6XKyz//Oc/j4985CNF9TfffHP07t27sFxTUxMXXHBB/OhHP4oePXpEv379Cus2bNgQF154YXTs2DGOPPLImDJlStG+3nkZ9aJFi+Kkk06KsrKyOOWUU2LZsmVF9W+/jHrevHkxatSoaGxsLDoL84Ybbojjjjtup/d54oknxve+973/4ZMCAAAAgN0TNmZk7ty5UV9fH3PmzIn777+/8PpPfvKTGDRoUCxbtiyuvfbaGDduXMyZM2eX+9i4cWN86lOfioEDB8bSpUtjwoQJcfXVV+/2mEOHDo2bb745ysvLo6GhIRoaGuLqq6+O0aNHx6pVq2Lx4sWF2mXLlsXTTz8do0aNyu5NAwAAAMDbuIw6Ix07dow777xzp8unTz/99Lj22msjIuJDH/pQLFiwIH72s5/FWWedtdM+7r777mhubo5f/epXUVZWFscee2y8+OKLcfnll+/ymPl8vuhMzLd06tQphg8fHrW1tXHqqadGRERtbW2cccYZccwxx+xyX1u2bIktW7YUlpuamvbtAwAAAACg1XNmY0aOP/74Xf5OY3V19U7Lq1at2uU+Vq1aFSeccEKUlZXtdvu9NWbMmLjnnnti8+bNsXXr1rj77rtj9OjRu62fOHFiVFRUFB69evV6T8cFAAAAoPUSNr6LNm3aREqp6LVt27btVNexY8f3q6W9ct5550VpaWlMnz497rvvvti2bVt87nOf2239+PHjo7GxsfBYu3bt+9gtAAAAAIcCl1G/i27dusW6desipRS5XC4iIurq6vZ6+yeffHKn5QEDBuyydsCAAfGb3/wmNm/eXDi78Z3bv1M+n48dO3bs9HpJSUlccsklUVtbG/l8Pr74xS9G+/btd7uf0tLSKC0tfbe3AwAAAAC75czGd/Hxj388XnnllZg8eXL84x//iClTpsSDDz6419svWLAgJk+eHM8++2xMmTIl7r333hg3btwuay+66KLI5XIxZsyYWLlyZcyaNStuvPHGPe6/d+/esXHjxpg7d268+uqr8cYbbxTWffWrX42HH344Zs+evcdLqAEAAAAgC8LGdzFgwIC4/fbbY8qUKTFo0KBYtGjRHu8Q/U7f/OY3Y8mSJXHSSSfFD3/4w7jpppti+PDhu6zt1KlT3HfffbF8+fI46aST4rrrrosf//jHe9z/0KFD47LLLouRI0dGt27dYvLkyYV1ffv2jaFDh0b//v1jyJAhe90zAAAAALwXufTOHyTkkJFSir59+8YVV1wR3/jGN/Zp26ampqioqIjGxsYoLy/fTx2+v+6666546KGHYtiwYc70BAAAANhL+5IT+c3GQ9Qrr7wS06ZNi3Xr1sWoUaNauh0AAAAAWgFh4yHqiCOOiK5du8Yvf/nL6NKlS0u3AwAAAEArIGw8RLk6HgAAAID3mxvEAAAAAACZEDYCAAAAAJkQNgIAAAAAmRA2AgAAAACZEDYCAAAAAJkQNgIAAAAAmRA2AgAAAACZEDbSalRVVRU9AwAAAJAtYSOtRllZWdEzAAAAANkSNgIAAAAAmRA2AgAAAACZEDYCAAAAAJkQNgIAAAAAmRA2AgAAAACZEDYCAAAAAJkQNgIAAAAAmRA2AgAAAACZEDYCAAAAAJkQNgIAAAAAmRA2AgAAAACZEDYCAAAAAJkQNgIAAAAAmRA20mr07Nkz+vfvHz179mzpVgAAAAAOSbmUUmrpJjjwNDU1RUVFRTQ2NkZ5eXlLtwMAAABAC9mXnMiZjQAAAABAJoSNAAAAAEAmhI0AAAAAQCaEjQAAAABAJoSNAAAAAEAmhI0AAAAAQCaEjQAAAABAJoSNAAAAAEAmhI0AAAAAQCaEjQAAAABAJoSNAAAAAEAmhI0AAAAAQCaEjQAAAABAJoSNtBqrV6+OG264IVavXt3SrQAAAAAckoSNtBovvvhiPPPMM/Hiiy+2dCsAAAAAhyRhIwAAAACQCWEjAAAAAJAJYSMAAAAAkAlhIwAAAACQCWEjAAAAAJAJYSMAAAAAkAlhIwAAAACQCWEjAAAAAJAJYSMAAAAAkAlhIwAAAACQCWEjAAAAAJAJYSMAAAAAkAlhI63G5s2bi54BAAAAyJawkVZjzZo1Rc8AAAAAZEvYCAAAAABkQtgIAAAAAGRC2AgAAAAAZELYCAAAAABkQtgIAAAAAGRC2AgAAAAAZELYCAAAAABkQtgIAAAAAGRC2AgAAAAAZELY+D6aN29e5HK5WL9+/W5rpk6dGp07dy4sT5gwIU488cTCck1NTVxwwQX7rUcAAAAAeK9abdhYU1MTuVwucrlc5PP56NOnT9xwww2xffv2d932nYFglkaOHBnPPvvsbtffcsstMXXq1MLyxz/+8bjqqqv2Sy8AAAAAsC9KWrqBlnT22WdHbW1tbNmyJWbNmhVjx46Ndu3axfjx41usp/bt20f79u13u76iouJ97AYAAAAA9l6rPbMxIqK0tDQqKyvjqKOOissvvzyGDRsWM2fOjNdffz2+8pWvRJcuXaJDhw4xYsSIeO655yLizUuhR40aFY2NjYUzIydMmBAREb/5zW/ilFNOicMOOywqKyvjoosuipdffnmn4y5YsCBOOOGEKCsri9NOOy1WrFhRWPduZ02+/TLqmpqamD9/ftxyyy2FXl544YXo06dP3HjjjUXb1dXVRS6Xi7///e//24cGAAAAALvRqsPGd2rfvn1s3bo1ampqYsmSJTFz5sx44oknIqUU55xzTmzbti2GDh0aN998c5SXl0dDQ0M0NDTE1VdfHRER27Ztix/84Afx1FNPxYwZM2L16tVRU1Oz03Guueaa+OlPfxqLFy+Obt26xXnnnRfbtm3b535vueWWqK6ujjFjxhR6qaqqitGjR0dtbW1RbW1tbXzsYx+LPn36vKfPBgAAAADejbAxIlJK8dBDD8Wf//znqKqqipkzZ8add94ZH/3oR2PQoEHx29/+Nv71r3/FjBkzIp/PR0VFReRyuaisrIzKysro1KlTRESMHj06RowYEcccc0ycdtppceutt8aDDz4YGzduLDre9ddfH2eddVYcf/zx8etf/zpeeumlmD59+j73XVFREfl8Pjp06FDopW3btlFTUxP19fWxaNGiiHgzBL377rtj9OjRu93Xli1boqmpqegBAAAAAPuiVYeN999/f3Tq1CnKyspixIgRMXLkyKipqYmSkpIYMmRIoe4DH/hA9OvXL1atWrXH/S1dujTOO++8qKqqisMOOyzOOOOMiIhYs2ZNUV11dXXh78MPP3yv9r0vevToEeeee27cddddERFx3333xZYtW+Lzn//8breZOHFiVFRUFB69evXKrB8AAAAAWodWHTZ+4hOfiLq6unjuuedi06ZN8etf/zpyudx72td///vfGD58eJSXl8dvf/vbWLx4ceFsxa1bt2bZ9l756le/GtOmTYtNmzZFbW1tjBw5Mjp06LDb+vHjx0djY2PhsXbt2vexWwAAAAAOBa36btQdO3bc6TcMBwwYENu3b4+FCxfG0KFDIyLitddei/r6+hg4cGBEROTz+dixY0fRds8880y89tprMWnSpMJZgUuWLNnlcZ988smoqqqKiIjXX389nn322RgwYMB7eg+76iUi4pxzzomOHTvGHXfcEbNnz45HH310j/spLS2N0tLS99QDAAAAAES08jMbd6Vv375x/vnnx5gxY+Lxxx+Pp556Kr70pS/FkUceGeeff35ERPTu3Ts2btwYc+fOjVdffTXeeOONqKqqinw+H7fddls8//zzMXPmzPjBD36wy2PccMMNMXfu3FixYkXU1NRE165dC3eY3le9e/eOhQsXxurVq+PVV1+N5ubmiIjCbzeOHz8++vbtW3TpNgAAAADsD8LGXaitrY3BgwfHpz71qaiuro6UUsyaNSvatWsXERFDhw6Nyy67LEaOHBndunWLyZMnR7du3WLq1Klx7733xsCBA2PSpElx44037nL/kyZNinHjxsXgwYNj3bp1cd9990U+n39PvV599dXRtm3bGDhwYHTr1q3o9yEvvfTS2Lp1a4waNeo97RsAAAAA9kUupZRaugn2j8ceeyzOPPPMWLt2bXTv3n2ftm1qaoqKiopobGyM8vLy/dTh++uuu+6Khx56KIYNG7bHO3MDAAAA8P/2JSdq1b/ZeKjasmVLvPLKKzFhwoT4/Oc/v89BIwAAAAC8Fy6jPgTdc889cdRRR8X69etj8uTJLd0OAAAAAK2EsPEQVFNTEzt27IilS5fGkUce2dLtAAAAANBKCBsBAAAAgEwIGwEAAACATAgbAQAAAIBMCBsBAAAAgEwIGwEAAACATAgbAQAAAIBMCBsBAAAAgEwIG2k1qqqqip4BAAAAyJawkVajrKys6BkAAACAbAkbAQAAAIBMCBsBAAAAgEwIGwEAAACATAgbAQAAAIBMCBsBAAAAgEwIGwEAAACATAgbAQAAAIBMCBsBAAAAgEwIGwEAAACATAgbAQAAAIBMCBsBAAAAgEwIGwEAAACATAgbAQAAAIBMCBtpNXr27Bn9+/ePnj17tnQrAAAAAIekXEoptXQTHHiampqioqIiGhsbo7y8vKXbAQAAAKCF7EtO5MxGAAAAACATwkYAAAAAIBPCRgAAAAAgE8JGAAAAACATJS3dAAemt+4b1NTU1MKdAAAAANCS3sqH9uY+08JGdmnDhg0REdGrV68W7gQAAACAA8GGDRuioqJijzW5tDeRJK1Oc3Nz/Pvf/47DDjsscrlcS7eTiaampujVq1esXbv2XW/TDrQcswoHD/MKBw/zCgcP88qBKKUUGzZsiB49ekSbNnv+VUZnNrJLbdq0iZ49e7Z0G/tFeXm5f7DhIGBW4eBhXuHgYV7h4GFeOdC82xmNb3GDGAAAAAAgE8JGAAAAACATwkZajdLS0rj++uujtLS0pVsB9sCswsHDvMLBw7zCwcO8crBzgxgAAAAAIBPObAQAAAAAMiFsBAAAAAAyIWwEAAAAADIhbAQAAAAAMiFspFWYMmVK9O7dO8rKymLIkCGxaNGilm4JDimPPvponHfeedGjR4/I5XIxY8aMovUppfj+978fH/zgB6N9+/YxbNiweO6554pq/vOf/8TFF18c5eXl0blz57j00ktj48aNRTVPP/10fPSjH42ysrLo1atXTJ48eade7r333ujfv3+UlZXF8ccfH7Nmzcr8/cLBauLEiXHqqafGYYcdFkcccURccMEFUV9fX1SzefPmGDt2bHzgAx+ITp06xWc/+9l46aWXimrWrFkT5557bnTo0CGOOOKIuOaaa2L79u1FNfPmzYuTTz45SktLo0+fPjF16tSd+vH9DLt3xx13xAknnBDl5eVRXl4e1dXV8eCDDxbWm1U4ME2aNClyuVxcddVVhdfMK61OgkPctGnTUj6fT3fddVf629/+lsaMGZM6d+6cXnrppZZuDQ4Zs2bNStddd1364x//mCIiTZ8+vWj9pEmTUkVFRZoxY0Z66qmn0qc//el09NFHp02bNhVqzj777DRo0KD05JNPpsceeyz16dMnXXjhhYX1jY2NqXv37uniiy9OK1asSPfcc09q3759+sUvflGoWbBgQWrbtm2aPHlyWrlyZfrud7+b2rVrl5YvX77fPwM4GAwfPjzV1tamFStWpLq6unTOOeekqqqqtHHjxkLNZZddlnr16pXmzp2blixZkk477bQ0dOjQwvrt27en4447Lg0bNiwtW7YszZo1K3Xt2jWNHz++UPP888+nDh06pG984xtp5cqV6bbbbktt27ZNs2fPLtT4foY9mzlzZnrggQfSs88+m+rr69N3vvOd1K5du7RixYqUklmFA9GiRYtS79690wknnJDGjRtXeN280toIGznkffjDH05jx44tLO/YsSP16NEjTZw4sQW7gkPXO8PG5ubmVFlZmX7yk58UXlu/fn0qLS1N99xzT0oppZUrV6aISIsXLy7UPPjggymXy6V//etfKaWUbr/99tSlS5e0ZcuWQs23v/3t1K9fv8LyF77whXTuuecW9TNkyJD09a9/PdP3CIeKl19+OUVEmj9/fkrpzdls165duvfeews1q1atShGRnnjiiZTSm/+50KZNm7Ru3bpCzR133JHKy8sL8/mtb30rHXvssUXHGjlyZBo+fHhh2fcz7LsuXbqkO++806zCAWjDhg2pb9++ac6cOemMM84ohI3mldbIZdQc0rZu3RpLly6NYcOGFV5r06ZNDBs2LJ544okW7AxajxdeeCHWrVtXNIcVFRUxZMiQwhw+8cQT0blz5zjllFMKNcOGDYs2bdrEwoULCzUf+9jHIp/PF2qGDx8e9fX18frrrxdq3n6ct2rMO+xaY2NjREQcfvjhERGxdOnS2LZtW9Ec9e/fP6qqqorm9fjjj4/u3bsXaoYPHx5NTU3xt7/9rVCzp1n0/Qz7ZseOHTFt2rT473//G9XV1WYVDkBjx46Nc889d6eZMq+0RiUt3QDsT6+++mrs2LGj6B/tiIju3bvHM88800JdQeuybt26iIhdzuFb69atWxdHHHFE0fqSkpI4/PDDi2qOPvronfbx1rouXbrEunXr9ngc4P81NzfHVVddFaeffnocd9xxEfHmLOXz+ejcuXNR7TvndVdz9ta6PdU0NTXFpk2b4vXXX/f9DHth+fLlUV1dHZs3b45OnTrF9OnTY+DAgVFXV2dW4QAybdq0+Otf/xqLFy/eaZ3vVlojYSMAQCs0duzYWLFiRTz++OMt3QqwG/369Yu6urpobGyMP/zhD3HJJZfE/PnzW7ot4G3Wrl0b48aNizlz5kRZWVlLtwMHBJdRc0jr2rVrtG3bdqc7fb300ktRWVnZQl1B6/LWrO1pDisrK+Pll18uWr99+/b4z3/+U1Szq328/Ri7qzHvUOzKK6+M+++/Px555JHo2bNn4fXKysrYunVrrF+/vqj+nfP6XmexvLw82rdv7/sZ9lI+n48+ffrE4MGDY+LEiTFo0KC45ZZbzCocQJYuXRovv/xynHzyyVFSUhIlJSUxf/78uPXWW6OkpCS6d+9uXml1hI0c0vL5fAwePDjmzp1beK25uTnmzp0b1dXVLdgZtB5HH310VFZWFs1hU1NTLFy4sDCH1dXVsX79+li6dGmh5uGHH47m5uYYMmRIoebRRx+Nbdu2FWrmzJkT/fr1iy5duhRq3n6ct2rMO7wppRRXXnllTJ8+PR5++OGdfppg8ODB0a5du6I5qq+vjzVr1hTN6/Lly4v+g2DOnDlRXl4eAwcOLNTsaRZ9P8N709zcHFu2bDGrcAA588wzY/ny5VFXV1d4nHLKKXHxxRcX/javtDotfYca2N+mTZuWSktL09SpU9PKlSvT1772tdS5c+eiO30B/5sNGzakZcuWpWXLlqWISDfddFNatmxZ+uc//5lSSmnSpEmpc+fO6U9/+lN6+umn0/nnn5+OPvrotGnTpsI+zj777HTSSSelhQsXpscffzz17ds3XXjhhYX169evT927d09f/vKX04oVK9K0adNShw4d0i9+8YtCzYIFC1JJSUm68cYb06pVq9L111+f2rVrl5YvX/7+fRhwALv88stTRUVFmjdvXmpoaCg83njjjULNZZddlqqqqtLDDz+clixZkqqrq1N1dXVh/fbt29Nxxx2XPvnJT6a6uro0e/bs1K1btzR+/PhCzfPPP586dOiQrrnmmrRq1ao0ZcqU1LZt2zR79uxCje9n2LNrr702zZ8/P73wwgvp6aefTtdee23K5XLpL3/5S0rJrMKB7O13o07JvNL6CBtpFW677bZUVVWV8vl8+vCHP5yefPLJlm4JDimPPPJIioidHpdccklKKaXm5ub0ve99L3Xv3j2VlpamM888M9XX1xft47XXXksXXnhh6tSpUyovL0+jRo1KGzZsKKp56qmn0kc+8pFUWlqajjzyyDRp0qSdevn973+fPvShD6V8Pp+OPfbY9MADD+y39w0Hm13NaUSk2traQs2mTZvSFVdckbp06ZI6dOiQPvOZz6SGhoai/axevTqNGDEitW/fPnXt2jV985vfTNu2bSuqeeSRR9KJJ56Y8vl8OuaYY4qO8Rbfz7B7o0ePTkcddVTK5/OpW7du6cwzzywEjSmZVTiQvTNsNK+0NrmUUmqZcyoBAAAAgEOJ32wEAAAAADIhbAQAAAAAMiFsBAAAAAAyIWwEAAAAADIhbAQAAAAAMiFsBAAAAAAyIWwEAAAAADIhbAQAAAAAMiFsBAAAAAAyIWwEAAAAADIhbAQAAAAAMiFsBAAAAAAy8X+du50BC0/t7gAAAABJRU5ErkJggg==\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "## VISUALISASI"
      ],
      "metadata": {
        "id": "AYYNHodaw9Na"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Hitung jumlah data untuk setiap kelas 'Potability'\n",
        "potability_counts_before = water_data['Potability'].value_counts()\n",
        "\n",
        "# Buat bar plot\n",
        "plt.figure(figsize=(8, 6))\n",
        "sns.barplot(x=potability_counts_before.index, y=potability_counts_before.values)\n",
        "plt.title('Distribusi Data Kualitas Air Sebelum Resampling')\n",
        "plt.xlabel('Potability')\n",
        "plt.ylabel('Jumlah Data')\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 564
        },
        "id": "chRRrgokxA94",
        "outputId": "b3d3aef2-9467-45f9-e9cb-1dc7c087b220"
      },
      "execution_count": 310,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 800x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from imblearn.over_sampling import SMOTE\n",
        "\n",
        "# Pisahkan fitur dan target\n",
        "X = water_data.drop('Potability', axis=1)\n",
        "y = water_data['Potability']\n",
        "\n",
        "# Lakukan oversampling menggunakan SMOTE\n",
        "smote = SMOTE(random_state=42)\n",
        "X_resampled, y_resampled = smote.fit_resample(X, y)\n",
        "\n",
        "# Gabungkan kembali fitur dan target yang telah di-resampling\n",
        "water_data_resampled = pd.DataFrame(X_resampled, columns=X.columns)\n",
        "water_data_resampled['Potability'] = y_resampled"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "oHozAfXnxA8q",
        "outputId": "a0e378c7-9474-40cf-d297-407711401faf"
      },
      "execution_count": 311,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.10/dist-packages/sklearn/base.py:474: FutureWarning: `BaseEstimator._validate_data` is deprecated in 1.6 and will be removed in 1.7. Use `sklearn.utils.validation.validate_data` instead. This function becomes public and is part of the scikit-learn developer API.\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/utils/_tags.py:354: FutureWarning: The SMOTE or classes from which it inherits use `_get_tags` and `_more_tags`. Please define the `__sklearn_tags__` method, or inherit from `sklearn.base.BaseEstimator` and/or other appropriate mixins such as `sklearn.base.TransformerMixin`, `sklearn.base.ClassifierMixin`, `sklearn.base.RegressorMixin`, and `sklearn.base.OutlierMixin`. From scikit-learn 1.7, not defining `__sklearn_tags__` will raise an error.\n",
            "  warnings.warn(\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Data sebelum resampling (ganti dengan data Anda)\n",
        "potability_counts_before = water_data['Potability'].value_counts()\n",
        "\n",
        "# Data setelah resampling (ganti dengan data Anda)\n",
        "potability_counts_after = water_data_resampled['Potability'].value_counts()\n",
        "\n",
        "fig, axes = plt.subplots(1, 2, figsize=(12, 6))  # 1 baris, 2 kolom\n",
        "\n",
        "# Bar plot sebelum resampling\n",
        "axes[0].bar(potability_counts_before.index, potability_counts_before.values, color=['green', 'blue'])\n",
        "axes[0].set_title('Distribusi Data Kualitas Air Sebelum Resampling')\n",
        "axes[0].set_xlabel('Potability')\n",
        "axes[0].set_ylabel('Jumlah Data')\n",
        "axes[0].set_xticks([0, 1])  # Menetapkan label sumbu-x (kategori 0 dan 1)\n",
        "\n",
        "# Bar plot setelah resampling\n",
        "axes[1].bar(potability_counts_after.index, potability_counts_after.values, color=['green', 'blue'])\n",
        "axes[1].set_title('Distribusi Data Kualitas Air Setelah Resampling')\n",
        "axes[1].set_xlabel('Potability')\n",
        "axes[1].set_ylabel('Jumlah Data')\n",
        "axes[1].set_xticks([0, 1])  # Menetapkan label sumbu-x (kategori 0 dan 1)\n",
        "\n",
        "plt.tight_layout()  # Mengatur layout agar subplot tidak saling tumpang tindih\n",
        "plt.show()  # Menampilkan plot"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 462
        },
        "id": "sbodNf13xSoL",
        "outputId": "87ba1ce7-2d4a-43c7-9dbb-415f1bf3a50f"
      },
      "execution_count": 312,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1200x600 with 2 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# 4.Menentukan Object"
      ],
      "metadata": {
        "id": "PV7YgA8Ik5fI"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "water_data.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 226
        },
        "id": "_bTS3lShk-gP",
        "outputId": "a9859673-f647-4913-f035-73b077110a9d"
      },
      "execution_count": 313,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "         ph    Hardness        Solids  Chloramines     Sulfate  Conductivity  \\\n",
              "0  7.080795  204.890455  20791.318981     7.300212  368.516441    564.308654   \n",
              "1  3.716080  129.422921  18630.057858     6.635246  333.775777    592.885359   \n",
              "2  8.099124  224.236259  19909.541732     9.275884  333.775777    418.606213   \n",
              "3  8.316766  214.373394  22018.417441     8.059332  356.886136    363.266516   \n",
              "4  9.092223  181.101509  17978.986339     6.546600  310.135738    398.410813   \n",
              "\n",
              "   Organic_carbon  Trihalomethanes  Turbidity  Potability  \n",
              "0       10.379783        86.990970   2.963135           0  \n",
              "1       15.180013        56.329076   4.500656           0  \n",
              "2       16.868637        66.420093   3.055934           0  \n",
              "3       18.436524       100.341674   4.628771           0  \n",
              "4       11.558279        31.997993   4.075075           0  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-2ff0a880-f55e-4c40-8d45-99334e9de3c9\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>ph</th>\n",
              "      <th>Hardness</th>\n",
              "      <th>Solids</th>\n",
              "      <th>Chloramines</th>\n",
              "      <th>Sulfate</th>\n",
              "      <th>Conductivity</th>\n",
              "      <th>Organic_carbon</th>\n",
              "      <th>Trihalomethanes</th>\n",
              "      <th>Turbidity</th>\n",
              "      <th>Potability</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>7.080795</td>\n",
              "      <td>204.890455</td>\n",
              "      <td>20791.318981</td>\n",
              "      <td>7.300212</td>\n",
              "      <td>368.516441</td>\n",
              "      <td>564.308654</td>\n",
              "      <td>10.379783</td>\n",
              "      <td>86.990970</td>\n",
              "      <td>2.963135</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>3.716080</td>\n",
              "      <td>129.422921</td>\n",
              "      <td>18630.057858</td>\n",
              "      <td>6.635246</td>\n",
              "      <td>333.775777</td>\n",
              "      <td>592.885359</td>\n",
              "      <td>15.180013</td>\n",
              "      <td>56.329076</td>\n",
              "      <td>4.500656</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>8.099124</td>\n",
              "      <td>224.236259</td>\n",
              "      <td>19909.541732</td>\n",
              "      <td>9.275884</td>\n",
              "      <td>333.775777</td>\n",
              "      <td>418.606213</td>\n",
              "      <td>16.868637</td>\n",
              "      <td>66.420093</td>\n",
              "      <td>3.055934</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>8.316766</td>\n",
              "      <td>214.373394</td>\n",
              "      <td>22018.417441</td>\n",
              "      <td>8.059332</td>\n",
              "      <td>356.886136</td>\n",
              "      <td>363.266516</td>\n",
              "      <td>18.436524</td>\n",
              "      <td>100.341674</td>\n",
              "      <td>4.628771</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>9.092223</td>\n",
              "      <td>181.101509</td>\n",
              "      <td>17978.986339</td>\n",
              "      <td>6.546600</td>\n",
              "      <td>310.135738</td>\n",
              "      <td>398.410813</td>\n",
              "      <td>11.558279</td>\n",
              "      <td>31.997993</td>\n",
              "      <td>4.075075</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-2ff0a880-f55e-4c40-8d45-99334e9de3c9')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-2ff0a880-f55e-4c40-8d45-99334e9de3c9 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-2ff0a880-f55e-4c40-8d45-99334e9de3c9');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-b24455a8-0c81-4a73-a956-91c58a747f8f\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-b24455a8-0c81-4a73-a956-91c58a747f8f')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-b24455a8-0c81-4a73-a956-91c58a747f8f button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "water_data",
              "summary": "{\n  \"name\": \"water_data\",\n  \"rows\": 3276,\n  \"fields\": [\n    {\n      \"column\": \"ph\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.469955969846562,\n        \"min\": 0.0,\n        \"max\": 13.999999999999998,\n        \"num_unique_values\": 2786,\n        \"samples\": [\n          7.205218263646112,\n          9.271355446767778,\n          7.367371852627868\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Hardness\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 32.879761476294185,\n        \"min\": 47.432,\n        \"max\": 323.124,\n        \"num_unique_values\": 3276,\n        \"samples\": [\n          183.5211070261417,\n          188.9135411469536,\n          224.05887682392927\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Solids\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 8768.570827785932,\n        \"min\": 320.942611274359,\n        \"max\": 61227.19600771213,\n        \"num_unique_values\": 3276,\n        \"samples\": [\n          20461.252710219946,\n          32873.820021715685,\n          23264.10996772913\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Chloramines\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.58308488903971,\n        \"min\": 0.3520000000000003,\n        \"max\": 13.127000000000002,\n        \"num_unique_values\": 3276,\n        \"samples\": [\n          7.333212177578906,\n          6.791509363412849,\n          5.92236704115349\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Sulfate\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 36.14261216633986,\n        \"min\": 129.00000000000003,\n        \"max\": 481.0306423059972,\n        \"num_unique_values\": 2496,\n        \"samples\": [\n          324.64407957923544,\n          241.12629768934127,\n          295.83415090035123\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Conductivity\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 80.82406405111182,\n        \"min\": 181.483753985146,\n        \"max\": 753.3426195583046,\n        \"num_unique_values\": 3276,\n        \"samples\": [\n          356.3690224100897,\n          336.56150104700754,\n          387.971335796834\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Organic_carbon\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3.308161999126868,\n        \"min\": 2.1999999999999886,\n        \"max\": 28.30000000000001,\n        \"num_unique_values\": 3276,\n        \"samples\": [\n          20.179028868493845,\n          14.706810313722087,\n          13.40673745495127\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Trihalomethanes\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 15.769881272715299,\n        \"min\": 0.7379999999999995,\n        \"max\": 124.0,\n        \"num_unique_values\": 3115,\n        \"samples\": [\n          75.33302516708788,\n          73.16477754804393,\n          64.84690478735237\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Turbidity\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.7803824084854116,\n        \"min\": 1.45,\n        \"max\": 6.739,\n        \"num_unique_values\": 3276,\n        \"samples\": [\n          4.886633785371213,\n          4.562197671215202,\n          2.487968647002356\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Potability\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 313
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "water_data_target = water_data.drop('Potability', axis=1)"
      ],
      "metadata": {
        "id": "8PtimepRmn-_"
      },
      "execution_count": 314,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "water_data_target.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 226
        },
        "id": "MomGaeyLnEW2",
        "outputId": "b7e9feb1-a0e5-43a9-9513-19c8ddca5bf5"
      },
      "execution_count": 315,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "         ph    Hardness        Solids  Chloramines     Sulfate  Conductivity  \\\n",
              "0  7.080795  204.890455  20791.318981     7.300212  368.516441    564.308654   \n",
              "1  3.716080  129.422921  18630.057858     6.635246  333.775777    592.885359   \n",
              "2  8.099124  224.236259  19909.541732     9.275884  333.775777    418.606213   \n",
              "3  8.316766  214.373394  22018.417441     8.059332  356.886136    363.266516   \n",
              "4  9.092223  181.101509  17978.986339     6.546600  310.135738    398.410813   \n",
              "\n",
              "   Organic_carbon  Trihalomethanes  Turbidity  \n",
              "0       10.379783        86.990970   2.963135  \n",
              "1       15.180013        56.329076   4.500656  \n",
              "2       16.868637        66.420093   3.055934  \n",
              "3       18.436524       100.341674   4.628771  \n",
              "4       11.558279        31.997993   4.075075  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-8c3e7133-7d83-4ed3-b9cc-87e0abfcc013\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>ph</th>\n",
              "      <th>Hardness</th>\n",
              "      <th>Solids</th>\n",
              "      <th>Chloramines</th>\n",
              "      <th>Sulfate</th>\n",
              "      <th>Conductivity</th>\n",
              "      <th>Organic_carbon</th>\n",
              "      <th>Trihalomethanes</th>\n",
              "      <th>Turbidity</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>7.080795</td>\n",
              "      <td>204.890455</td>\n",
              "      <td>20791.318981</td>\n",
              "      <td>7.300212</td>\n",
              "      <td>368.516441</td>\n",
              "      <td>564.308654</td>\n",
              "      <td>10.379783</td>\n",
              "      <td>86.990970</td>\n",
              "      <td>2.963135</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>3.716080</td>\n",
              "      <td>129.422921</td>\n",
              "      <td>18630.057858</td>\n",
              "      <td>6.635246</td>\n",
              "      <td>333.775777</td>\n",
              "      <td>592.885359</td>\n",
              "      <td>15.180013</td>\n",
              "      <td>56.329076</td>\n",
              "      <td>4.500656</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>8.099124</td>\n",
              "      <td>224.236259</td>\n",
              "      <td>19909.541732</td>\n",
              "      <td>9.275884</td>\n",
              "      <td>333.775777</td>\n",
              "      <td>418.606213</td>\n",
              "      <td>16.868637</td>\n",
              "      <td>66.420093</td>\n",
              "      <td>3.055934</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>8.316766</td>\n",
              "      <td>214.373394</td>\n",
              "      <td>22018.417441</td>\n",
              "      <td>8.059332</td>\n",
              "      <td>356.886136</td>\n",
              "      <td>363.266516</td>\n",
              "      <td>18.436524</td>\n",
              "      <td>100.341674</td>\n",
              "      <td>4.628771</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>9.092223</td>\n",
              "      <td>181.101509</td>\n",
              "      <td>17978.986339</td>\n",
              "      <td>6.546600</td>\n",
              "      <td>310.135738</td>\n",
              "      <td>398.410813</td>\n",
              "      <td>11.558279</td>\n",
              "      <td>31.997993</td>\n",
              "      <td>4.075075</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8c3e7133-7d83-4ed3-b9cc-87e0abfcc013')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-8c3e7133-7d83-4ed3-b9cc-87e0abfcc013 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-8c3e7133-7d83-4ed3-b9cc-87e0abfcc013');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-4ff750e2-edc9-45c4-8e98-e5af682526af\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-4ff750e2-edc9-45c4-8e98-e5af682526af')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-4ff750e2-edc9-45c4-8e98-e5af682526af button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "water_data_target",
              "summary": "{\n  \"name\": \"water_data_target\",\n  \"rows\": 3276,\n  \"fields\": [\n    {\n      \"column\": \"ph\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.469955969846562,\n        \"min\": 0.0,\n        \"max\": 13.999999999999998,\n        \"num_unique_values\": 2786,\n        \"samples\": [\n          7.205218263646112,\n          9.271355446767778,\n          7.367371852627868\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Hardness\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 32.879761476294185,\n        \"min\": 47.432,\n        \"max\": 323.124,\n        \"num_unique_values\": 3276,\n        \"samples\": [\n          183.5211070261417,\n          188.9135411469536,\n          224.05887682392927\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Solids\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 8768.570827785932,\n        \"min\": 320.942611274359,\n        \"max\": 61227.19600771213,\n        \"num_unique_values\": 3276,\n        \"samples\": [\n          20461.252710219946,\n          32873.820021715685,\n          23264.10996772913\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Chloramines\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.58308488903971,\n        \"min\": 0.3520000000000003,\n        \"max\": 13.127000000000002,\n        \"num_unique_values\": 3276,\n        \"samples\": [\n          7.333212177578906,\n          6.791509363412849,\n          5.92236704115349\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Sulfate\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 36.14261216633986,\n        \"min\": 129.00000000000003,\n        \"max\": 481.0306423059972,\n        \"num_unique_values\": 2496,\n        \"samples\": [\n          324.64407957923544,\n          241.12629768934127,\n          295.83415090035123\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Conductivity\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 80.82406405111182,\n        \"min\": 181.483753985146,\n        \"max\": 753.3426195583046,\n        \"num_unique_values\": 3276,\n        \"samples\": [\n          356.3690224100897,\n          336.56150104700754,\n          387.971335796834\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Organic_carbon\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3.308161999126868,\n        \"min\": 2.1999999999999886,\n        \"max\": 28.30000000000001,\n        \"num_unique_values\": 3276,\n        \"samples\": [\n          20.179028868493845,\n          14.706810313722087,\n          13.40673745495127\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Trihalomethanes\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 15.769881272715299,\n        \"min\": 0.7379999999999995,\n        \"max\": 124.0,\n        \"num_unique_values\": 3115,\n        \"samples\": [\n          75.33302516708788,\n          73.16477754804393,\n          64.84690478735237\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Turbidity\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.7803824084854116,\n        \"min\": 1.45,\n        \"max\": 6.739,\n        \"num_unique_values\": 3276,\n        \"samples\": [\n          4.886633785371213,\n          4.562197671215202,\n          2.487968647002356\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 315
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "water_data_target.info()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "QVYgJdyBnJZ-",
        "outputId": "22d43594-1522-46e0-f310-cc4463be1ae6"
      },
      "execution_count": 316,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 3276 entries, 0 to 3275\n",
            "Data columns (total 9 columns):\n",
            " #   Column           Non-Null Count  Dtype  \n",
            "---  ------           --------------  -----  \n",
            " 0   ph               3276 non-null   float64\n",
            " 1   Hardness         3276 non-null   float64\n",
            " 2   Solids           3276 non-null   float64\n",
            " 3   Chloramines      3276 non-null   float64\n",
            " 4   Sulfate          3276 non-null   float64\n",
            " 5   Conductivity     3276 non-null   float64\n",
            " 6   Organic_carbon   3276 non-null   float64\n",
            " 7   Trihalomethanes  3276 non-null   float64\n",
            " 8   Turbidity        3276 non-null   float64\n",
            "dtypes: float64(9)\n",
            "memory usage: 230.5 KB\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "water_data.shape"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "MS46Y9mEnQKm",
        "outputId": "4f50f15f-402b-448a-b4e8-ef5fd1652120"
      },
      "execution_count": 317,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "(3276, 10)"
            ]
          },
          "metadata": {},
          "execution_count": 317
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# 5.Membersihkan Data"
      ],
      "metadata": {
        "id": "XPm1jX99n-6m"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "corr_matrix = water_data.corr()\n",
        "\n",
        "plt.figure(figsize=(10, 8))\n",
        "sns.heatmap(corr_matrix, annot=True, cmap='coolwarm', fmt=\".2f\")\n",
        "plt.title(\"Korelasi Heatmap untuk Data Water Potability\")\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 800
        },
        "id": "-CbqDqNPoCS2",
        "outputId": "0d7c2094-73b7-4490-98c3-a9e8f745b8a2"
      },
      "execution_count": 318,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x800 with 2 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Tentukan kolom numerik\n",
        "numerical_cols = water_data.select_dtypes(include=['float64', 'int64']).columns\n",
        "numerical_cols = numerical_cols[numerical_cols != 'Potability']\n",
        "\n",
        "fig, axes = plt.subplots(len(numerical_cols) // 3, 3, figsize=(15, 15)) # 3 kolom, atur figsize sesuai kebutuhan\n",
        "axes = axes.flatten()\n",
        "\n",
        "for i, col in enumerate(numerical_cols):\n",
        "       sns.histplot(data=water_data, x=col, bins=30, kde=True, ax=axes[i]) # y=col untuk histogram horizontal\n",
        "       axes[i].set_title(f'Distribusi {col}')\n",
        "       axes[i].set_xlabel(col)\n",
        "       axes[i].set_ylabel('Frekuensi')\n",
        "\n",
        "plt.tight_layout()\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 913
        },
        "id": "_ua25Ns-tPfU",
        "outputId": "2bc01ba3-118d-4179-ae7f-5f85e61c0a99"
      },
      "execution_count": 319,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1500x1500 with 9 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "#6.Konstruksi Data"
      ],
      "metadata": {
        "id": "-E3RF81RwUFC"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "water_data.info()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "dSjxDGEYwTlz",
        "outputId": "9b8039d5-aeb3-4991-e744-3d1459a65025"
      },
      "execution_count": 320,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 3276 entries, 0 to 3275\n",
            "Data columns (total 10 columns):\n",
            " #   Column           Non-Null Count  Dtype  \n",
            "---  ------           --------------  -----  \n",
            " 0   ph               3276 non-null   float64\n",
            " 1   Hardness         3276 non-null   float64\n",
            " 2   Solids           3276 non-null   float64\n",
            " 3   Chloramines      3276 non-null   float64\n",
            " 4   Sulfate          3276 non-null   float64\n",
            " 5   Conductivity     3276 non-null   float64\n",
            " 6   Organic_carbon   3276 non-null   float64\n",
            " 7   Trihalomethanes  3276 non-null   float64\n",
            " 8   Turbidity        3276 non-null   float64\n",
            " 9   Potability       3276 non-null   int64  \n",
            "dtypes: float64(9), int64(1)\n",
            "memory usage: 256.1 KB\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "water_data_target.info()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "0KYPRJWM1lXY",
        "outputId": "95723b37-7add-4fb3-943a-ccb12d41c832"
      },
      "execution_count": 321,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 3276 entries, 0 to 3275\n",
            "Data columns (total 9 columns):\n",
            " #   Column           Non-Null Count  Dtype  \n",
            "---  ------           --------------  -----  \n",
            " 0   ph               3276 non-null   float64\n",
            " 1   Hardness         3276 non-null   float64\n",
            " 2   Solids           3276 non-null   float64\n",
            " 3   Chloramines      3276 non-null   float64\n",
            " 4   Sulfate          3276 non-null   float64\n",
            " 5   Conductivity     3276 non-null   float64\n",
            " 6   Organic_carbon   3276 non-null   float64\n",
            " 7   Trihalomethanes  3276 non-null   float64\n",
            " 8   Turbidity        3276 non-null   float64\n",
            "dtypes: float64(9)\n",
            "memory usage: 230.5 KB\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "water_data_resampled.info()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "KV19d-uh1qOA",
        "outputId": "5bd1ee31-a63b-4faa-cf1a-cdfda963aa6d"
      },
      "execution_count": 322,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 3996 entries, 0 to 3995\n",
            "Data columns (total 10 columns):\n",
            " #   Column           Non-Null Count  Dtype  \n",
            "---  ------           --------------  -----  \n",
            " 0   ph               3996 non-null   float64\n",
            " 1   Hardness         3996 non-null   float64\n",
            " 2   Solids           3996 non-null   float64\n",
            " 3   Chloramines      3996 non-null   float64\n",
            " 4   Sulfate          3996 non-null   float64\n",
            " 5   Conductivity     3996 non-null   float64\n",
            " 6   Organic_carbon   3996 non-null   float64\n",
            " 7   Trihalomethanes  3996 non-null   float64\n",
            " 8   Turbidity        3996 non-null   float64\n",
            " 9   Potability       3996 non-null   int64  \n",
            "dtypes: float64(9), int64(1)\n",
            "memory usage: 312.3 KB\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# 7.Pemodelan"
      ],
      "metadata": {
        "id": "0me3gI2F11V4"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.model_selection import train_test_split\n",
        "from sklearn.metrics import accuracy_score, confusion_matrix, classification_report\n",
        "from sklearn.naive_bayes import GaussianNB\n",
        "from sklearn.tree import DecisionTreeClassifier\n",
        "from sklearn.ensemble import RandomForestClassifier\n",
        "from sklearn.metrics import accuracy_score,recall_score,f1_score,precision_score,roc_auc_score,confusion_matrix,precision_score"
      ],
      "metadata": {
        "id": "xmOEQBR41wDh"
      },
      "execution_count": 323,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "X = water_data_resampled.drop('Potability', axis=1)\n",
        "y = water_data_resampled['Potability']\n",
        "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)"
      ],
      "metadata": {
        "id": "GDdgbQob3S94"
      },
      "execution_count": 324,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Naive Bayes\n",
        "nb_model = GaussianNB()\n",
        "nb_model.fit(X_train, y_train)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 80
        },
        "id": "VR0PPOm-3VkQ",
        "outputId": "2475d271-95bf-4c4f-d311-75b0077f4bcf"
      },
      "execution_count": 325,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "GaussianNB()"
            ],
            "text/html": [
              "<style>#sk-container-id-19 {\n",
              "  /* Definition of color scheme common for light and dark mode */\n",
              "  --sklearn-color-text: #000;\n",
              "  --sklearn-color-text-muted: #666;\n",
              "  --sklearn-color-line: gray;\n",
              "  /* Definition of color scheme for unfitted estimators */\n",
              "  --sklearn-color-unfitted-level-0: #fff5e6;\n",
              "  --sklearn-color-unfitted-level-1: #f6e4d2;\n",
              "  --sklearn-color-unfitted-level-2: #ffe0b3;\n",
              "  --sklearn-color-unfitted-level-3: chocolate;\n",
              "  /* Definition of color scheme for fitted estimators */\n",
              "  --sklearn-color-fitted-level-0: #f0f8ff;\n",
              "  --sklearn-color-fitted-level-1: #d4ebff;\n",
              "  --sklearn-color-fitted-level-2: #b3dbfd;\n",
              "  --sklearn-color-fitted-level-3: cornflowerblue;\n",
              "\n",
              "  /* Specific color for light theme */\n",
              "  --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
              "  --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, white)));\n",
              "  --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
              "  --sklearn-color-icon: #696969;\n",
              "\n",
              "  @media (prefers-color-scheme: dark) {\n",
              "    /* Redefinition of color scheme for dark theme */\n",
              "    --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
              "    --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, #111)));\n",
              "    --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
              "    --sklearn-color-icon: #878787;\n",
              "  }\n",
              "}\n",
              "\n",
              "#sk-container-id-19 {\n",
              "  color: var(--sklearn-color-text);\n",
              "}\n",
              "\n",
              "#sk-container-id-19 pre {\n",
              "  padding: 0;\n",
              "}\n",
              "\n",
              "#sk-container-id-19 input.sk-hidden--visually {\n",
              "  border: 0;\n",
              "  clip: rect(1px 1px 1px 1px);\n",
              "  clip: rect(1px, 1px, 1px, 1px);\n",
              "  height: 1px;\n",
              "  margin: -1px;\n",
              "  overflow: hidden;\n",
              "  padding: 0;\n",
              "  position: absolute;\n",
              "  width: 1px;\n",
              "}\n",
              "\n",
              "#sk-container-id-19 div.sk-dashed-wrapped {\n",
              "  border: 1px dashed var(--sklearn-color-line);\n",
              "  margin: 0 0.4em 0.5em 0.4em;\n",
              "  box-sizing: border-box;\n",
              "  padding-bottom: 0.4em;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "}\n",
              "\n",
              "#sk-container-id-19 div.sk-container {\n",
              "  /* jupyter's `normalize.less` sets `[hidden] { display: none; }`\n",
              "     but bootstrap.min.css set `[hidden] { display: none !important; }`\n",
              "     so we also need the `!important` here to be able to override the\n",
              "     default hidden behavior on the sphinx rendered scikit-learn.org.\n",
              "     See: https://github.com/scikit-learn/scikit-learn/issues/21755 */\n",
              "  display: inline-block !important;\n",
              "  position: relative;\n",
              "}\n",
              "\n",
              "#sk-container-id-19 div.sk-text-repr-fallback {\n",
              "  display: none;\n",
              "}\n",
              "\n",
              "div.sk-parallel-item,\n",
              "div.sk-serial,\n",
              "div.sk-item {\n",
              "  /* draw centered vertical line to link estimators */\n",
              "  background-image: linear-gradient(var(--sklearn-color-text-on-default-background), var(--sklearn-color-text-on-default-background));\n",
              "  background-size: 2px 100%;\n",
              "  background-repeat: no-repeat;\n",
              "  background-position: center center;\n",
              "}\n",
              "\n",
              "/* Parallel-specific style estimator block */\n",
              "\n",
              "#sk-container-id-19 div.sk-parallel-item::after {\n",
              "  content: \"\";\n",
              "  width: 100%;\n",
              "  border-bottom: 2px solid var(--sklearn-color-text-on-default-background);\n",
              "  flex-grow: 1;\n",
              "}\n",
              "\n",
              "#sk-container-id-19 div.sk-parallel {\n",
              "  display: flex;\n",
              "  align-items: stretch;\n",
              "  justify-content: center;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "  position: relative;\n",
              "}\n",
              "\n",
              "#sk-container-id-19 div.sk-parallel-item {\n",
              "  display: flex;\n",
              "  flex-direction: column;\n",
              "}\n",
              "\n",
              "#sk-container-id-19 div.sk-parallel-item:first-child::after {\n",
              "  align-self: flex-end;\n",
              "  width: 50%;\n",
              "}\n",
              "\n",
              "#sk-container-id-19 div.sk-parallel-item:last-child::after {\n",
              "  align-self: flex-start;\n",
              "  width: 50%;\n",
              "}\n",
              "\n",
              "#sk-container-id-19 div.sk-parallel-item:only-child::after {\n",
              "  width: 0;\n",
              "}\n",
              "\n",
              "/* Serial-specific style estimator block */\n",
              "\n",
              "#sk-container-id-19 div.sk-serial {\n",
              "  display: flex;\n",
              "  flex-direction: column;\n",
              "  align-items: center;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "  padding-right: 1em;\n",
              "  padding-left: 1em;\n",
              "}\n",
              "\n",
              "\n",
              "/* Toggleable style: style used for estimator/Pipeline/ColumnTransformer box that is\n",
              "clickable and can be expanded/collapsed.\n",
              "- Pipeline and ColumnTransformer use this feature and define the default style\n",
              "- Estimators will overwrite some part of the style using the `sk-estimator` class\n",
              "*/\n",
              "\n",
              "/* Pipeline and ColumnTransformer style (default) */\n",
              "\n",
              "#sk-container-id-19 div.sk-toggleable {\n",
              "  /* Default theme specific background. It is overwritten whether we have a\n",
              "  specific estimator or a Pipeline/ColumnTransformer */\n",
              "  background-color: var(--sklearn-color-background);\n",
              "}\n",
              "\n",
              "/* Toggleable label */\n",
              "#sk-container-id-19 label.sk-toggleable__label {\n",
              "  cursor: pointer;\n",
              "  display: flex;\n",
              "  width: 100%;\n",
              "  margin-bottom: 0;\n",
              "  padding: 0.5em;\n",
              "  box-sizing: border-box;\n",
              "  text-align: center;\n",
              "  align-items: start;\n",
              "  justify-content: space-between;\n",
              "  gap: 0.5em;\n",
              "}\n",
              "\n",
              "#sk-container-id-19 label.sk-toggleable__label .caption {\n",
              "  font-size: 0.6rem;\n",
              "  font-weight: lighter;\n",
              "  color: var(--sklearn-color-text-muted);\n",
              "}\n",
              "\n",
              "#sk-container-id-19 label.sk-toggleable__label-arrow:before {\n",
              "  /* Arrow on the left of the label */\n",
              "  content: \"▸\";\n",
              "  float: left;\n",
              "  margin-right: 0.25em;\n",
              "  color: var(--sklearn-color-icon);\n",
              "}\n",
              "\n",
              "#sk-container-id-19 label.sk-toggleable__label-arrow:hover:before {\n",
              "  color: var(--sklearn-color-text);\n",
              "}\n",
              "\n",
              "/* Toggleable content - dropdown */\n",
              "\n",
              "#sk-container-id-19 div.sk-toggleable__content {\n",
              "  max-height: 0;\n",
              "  max-width: 0;\n",
              "  overflow: hidden;\n",
              "  text-align: left;\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-19 div.sk-toggleable__content.fitted {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-19 div.sk-toggleable__content pre {\n",
              "  margin: 0.2em;\n",
              "  border-radius: 0.25em;\n",
              "  color: var(--sklearn-color-text);\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-19 div.sk-toggleable__content.fitted pre {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-19 input.sk-toggleable__control:checked~div.sk-toggleable__content {\n",
              "  /* Expand drop-down */\n",
              "  max-height: 200px;\n",
              "  max-width: 100%;\n",
              "  overflow: auto;\n",
              "}\n",
              "\n",
              "#sk-container-id-19 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {\n",
              "  content: \"▾\";\n",
              "}\n",
              "\n",
              "/* Pipeline/ColumnTransformer-specific style */\n",
              "\n",
              "#sk-container-id-19 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
              "  color: var(--sklearn-color-text);\n",
              "  background-color: var(--sklearn-color-unfitted-level-2);\n",
              "}\n",
              "\n",
              "#sk-container-id-19 div.sk-label.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
              "  background-color: var(--sklearn-color-fitted-level-2);\n",
              "}\n",
              "\n",
              "/* Estimator-specific style */\n",
              "\n",
              "/* Colorize estimator box */\n",
              "#sk-container-id-19 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-2);\n",
              "}\n",
              "\n",
              "#sk-container-id-19 div.sk-estimator.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-2);\n",
              "}\n",
              "\n",
              "#sk-container-id-19 div.sk-label label.sk-toggleable__label,\n",
              "#sk-container-id-19 div.sk-label label {\n",
              "  /* The background is the default theme color */\n",
              "  color: var(--sklearn-color-text-on-default-background);\n",
              "}\n",
              "\n",
              "/* On hover, darken the color of the background */\n",
              "#sk-container-id-19 div.sk-label:hover label.sk-toggleable__label {\n",
              "  color: var(--sklearn-color-text);\n",
              "  background-color: var(--sklearn-color-unfitted-level-2);\n",
              "}\n",
              "\n",
              "/* Label box, darken color on hover, fitted */\n",
              "#sk-container-id-19 div.sk-label.fitted:hover label.sk-toggleable__label.fitted {\n",
              "  color: var(--sklearn-color-text);\n",
              "  background-color: var(--sklearn-color-fitted-level-2);\n",
              "}\n",
              "\n",
              "/* Estimator label */\n",
              "\n",
              "#sk-container-id-19 div.sk-label label {\n",
              "  font-family: monospace;\n",
              "  font-weight: bold;\n",
              "  display: inline-block;\n",
              "  line-height: 1.2em;\n",
              "}\n",
              "\n",
              "#sk-container-id-19 div.sk-label-container {\n",
              "  text-align: center;\n",
              "}\n",
              "\n",
              "/* Estimator-specific */\n",
              "#sk-container-id-19 div.sk-estimator {\n",
              "  font-family: monospace;\n",
              "  border: 1px dotted var(--sklearn-color-border-box);\n",
              "  border-radius: 0.25em;\n",
              "  box-sizing: border-box;\n",
              "  margin-bottom: 0.5em;\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-19 div.sk-estimator.fitted {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-0);\n",
              "}\n",
              "\n",
              "/* on hover */\n",
              "#sk-container-id-19 div.sk-estimator:hover {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-2);\n",
              "}\n",
              "\n",
              "#sk-container-id-19 div.sk-estimator.fitted:hover {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-2);\n",
              "}\n",
              "\n",
              "/* Specification for estimator info (e.g. \"i\" and \"?\") */\n",
              "\n",
              "/* Common style for \"i\" and \"?\" */\n",
              "\n",
              ".sk-estimator-doc-link,\n",
              "a:link.sk-estimator-doc-link,\n",
              "a:visited.sk-estimator-doc-link {\n",
              "  float: right;\n",
              "  font-size: smaller;\n",
              "  line-height: 1em;\n",
              "  font-family: monospace;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "  border-radius: 1em;\n",
              "  height: 1em;\n",
              "  width: 1em;\n",
              "  text-decoration: none !important;\n",
              "  margin-left: 0.5em;\n",
              "  text-align: center;\n",
              "  /* unfitted */\n",
              "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
              "  color: var(--sklearn-color-unfitted-level-1);\n",
              "}\n",
              "\n",
              ".sk-estimator-doc-link.fitted,\n",
              "a:link.sk-estimator-doc-link.fitted,\n",
              "a:visited.sk-estimator-doc-link.fitted {\n",
              "  /* fitted */\n",
              "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
              "  color: var(--sklearn-color-fitted-level-1);\n",
              "}\n",
              "\n",
              "/* On hover */\n",
              "div.sk-estimator:hover .sk-estimator-doc-link:hover,\n",
              ".sk-estimator-doc-link:hover,\n",
              "div.sk-label-container:hover .sk-estimator-doc-link:hover,\n",
              ".sk-estimator-doc-link:hover {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-3);\n",
              "  color: var(--sklearn-color-background);\n",
              "  text-decoration: none;\n",
              "}\n",
              "\n",
              "div.sk-estimator.fitted:hover .sk-estimator-doc-link.fitted:hover,\n",
              ".sk-estimator-doc-link.fitted:hover,\n",
              "div.sk-label-container:hover .sk-estimator-doc-link.fitted:hover,\n",
              ".sk-estimator-doc-link.fitted:hover {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-3);\n",
              "  color: var(--sklearn-color-background);\n",
              "  text-decoration: none;\n",
              "}\n",
              "\n",
              "/* Span, style for the box shown on hovering the info icon */\n",
              ".sk-estimator-doc-link span {\n",
              "  display: none;\n",
              "  z-index: 9999;\n",
              "  position: relative;\n",
              "  font-weight: normal;\n",
              "  right: .2ex;\n",
              "  padding: .5ex;\n",
              "  margin: .5ex;\n",
              "  width: min-content;\n",
              "  min-width: 20ex;\n",
              "  max-width: 50ex;\n",
              "  color: var(--sklearn-color-text);\n",
              "  box-shadow: 2pt 2pt 4pt #999;\n",
              "  /* unfitted */\n",
              "  background: var(--sklearn-color-unfitted-level-0);\n",
              "  border: .5pt solid var(--sklearn-color-unfitted-level-3);\n",
              "}\n",
              "\n",
              ".sk-estimator-doc-link.fitted span {\n",
              "  /* fitted */\n",
              "  background: var(--sklearn-color-fitted-level-0);\n",
              "  border: var(--sklearn-color-fitted-level-3);\n",
              "}\n",
              "\n",
              ".sk-estimator-doc-link:hover span {\n",
              "  display: block;\n",
              "}\n",
              "\n",
              "/* \"?\"-specific style due to the `<a>` HTML tag */\n",
              "\n",
              "#sk-container-id-19 a.estimator_doc_link {\n",
              "  float: right;\n",
              "  font-size: 1rem;\n",
              "  line-height: 1em;\n",
              "  font-family: monospace;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "  border-radius: 1rem;\n",
              "  height: 1rem;\n",
              "  width: 1rem;\n",
              "  text-decoration: none;\n",
              "  /* unfitted */\n",
              "  color: var(--sklearn-color-unfitted-level-1);\n",
              "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
              "}\n",
              "\n",
              "#sk-container-id-19 a.estimator_doc_link.fitted {\n",
              "  /* fitted */\n",
              "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
              "  color: var(--sklearn-color-fitted-level-1);\n",
              "}\n",
              "\n",
              "/* On hover */\n",
              "#sk-container-id-19 a.estimator_doc_link:hover {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-3);\n",
              "  color: var(--sklearn-color-background);\n",
              "  text-decoration: none;\n",
              "}\n",
              "\n",
              "#sk-container-id-19 a.estimator_doc_link.fitted:hover {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-3);\n",
              "}\n",
              "</style><div id=\"sk-container-id-19\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>GaussianNB()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-19\" type=\"checkbox\" checked><label for=\"sk-estimator-id-19\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow\"><div><div>GaussianNB</div></div><div><a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.6/modules/generated/sklearn.naive_bayes.GaussianNB.html\">?<span>Documentation for GaussianNB</span></a><span class=\"sk-estimator-doc-link fitted\">i<span>Fitted</span></span></div></label><div class=\"sk-toggleable__content fitted\"><pre>GaussianNB()</pre></div> </div></div></div></div>"
            ]
          },
          "metadata": {},
          "execution_count": 325
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Decision Tree\n",
        "dt_model = DecisionTreeClassifier(random_state=42)\n",
        "dt_model.fit(X_train, y_train)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 80
        },
        "id": "p3qB1hyR5FWH",
        "outputId": "9b5f512b-972b-4685-dc49-1df0b9276e23"
      },
      "execution_count": 326,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "DecisionTreeClassifier(random_state=42)"
            ],
            "text/html": [
              "<style>#sk-container-id-20 {\n",
              "  /* Definition of color scheme common for light and dark mode */\n",
              "  --sklearn-color-text: #000;\n",
              "  --sklearn-color-text-muted: #666;\n",
              "  --sklearn-color-line: gray;\n",
              "  /* Definition of color scheme for unfitted estimators */\n",
              "  --sklearn-color-unfitted-level-0: #fff5e6;\n",
              "  --sklearn-color-unfitted-level-1: #f6e4d2;\n",
              "  --sklearn-color-unfitted-level-2: #ffe0b3;\n",
              "  --sklearn-color-unfitted-level-3: chocolate;\n",
              "  /* Definition of color scheme for fitted estimators */\n",
              "  --sklearn-color-fitted-level-0: #f0f8ff;\n",
              "  --sklearn-color-fitted-level-1: #d4ebff;\n",
              "  --sklearn-color-fitted-level-2: #b3dbfd;\n",
              "  --sklearn-color-fitted-level-3: cornflowerblue;\n",
              "\n",
              "  /* Specific color for light theme */\n",
              "  --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
              "  --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, white)));\n",
              "  --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
              "  --sklearn-color-icon: #696969;\n",
              "\n",
              "  @media (prefers-color-scheme: dark) {\n",
              "    /* Redefinition of color scheme for dark theme */\n",
              "    --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
              "    --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, #111)));\n",
              "    --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
              "    --sklearn-color-icon: #878787;\n",
              "  }\n",
              "}\n",
              "\n",
              "#sk-container-id-20 {\n",
              "  color: var(--sklearn-color-text);\n",
              "}\n",
              "\n",
              "#sk-container-id-20 pre {\n",
              "  padding: 0;\n",
              "}\n",
              "\n",
              "#sk-container-id-20 input.sk-hidden--visually {\n",
              "  border: 0;\n",
              "  clip: rect(1px 1px 1px 1px);\n",
              "  clip: rect(1px, 1px, 1px, 1px);\n",
              "  height: 1px;\n",
              "  margin: -1px;\n",
              "  overflow: hidden;\n",
              "  padding: 0;\n",
              "  position: absolute;\n",
              "  width: 1px;\n",
              "}\n",
              "\n",
              "#sk-container-id-20 div.sk-dashed-wrapped {\n",
              "  border: 1px dashed var(--sklearn-color-line);\n",
              "  margin: 0 0.4em 0.5em 0.4em;\n",
              "  box-sizing: border-box;\n",
              "  padding-bottom: 0.4em;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "}\n",
              "\n",
              "#sk-container-id-20 div.sk-container {\n",
              "  /* jupyter's `normalize.less` sets `[hidden] { display: none; }`\n",
              "     but bootstrap.min.css set `[hidden] { display: none !important; }`\n",
              "     so we also need the `!important` here to be able to override the\n",
              "     default hidden behavior on the sphinx rendered scikit-learn.org.\n",
              "     See: https://github.com/scikit-learn/scikit-learn/issues/21755 */\n",
              "  display: inline-block !important;\n",
              "  position: relative;\n",
              "}\n",
              "\n",
              "#sk-container-id-20 div.sk-text-repr-fallback {\n",
              "  display: none;\n",
              "}\n",
              "\n",
              "div.sk-parallel-item,\n",
              "div.sk-serial,\n",
              "div.sk-item {\n",
              "  /* draw centered vertical line to link estimators */\n",
              "  background-image: linear-gradient(var(--sklearn-color-text-on-default-background), var(--sklearn-color-text-on-default-background));\n",
              "  background-size: 2px 100%;\n",
              "  background-repeat: no-repeat;\n",
              "  background-position: center center;\n",
              "}\n",
              "\n",
              "/* Parallel-specific style estimator block */\n",
              "\n",
              "#sk-container-id-20 div.sk-parallel-item::after {\n",
              "  content: \"\";\n",
              "  width: 100%;\n",
              "  border-bottom: 2px solid var(--sklearn-color-text-on-default-background);\n",
              "  flex-grow: 1;\n",
              "}\n",
              "\n",
              "#sk-container-id-20 div.sk-parallel {\n",
              "  display: flex;\n",
              "  align-items: stretch;\n",
              "  justify-content: center;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "  position: relative;\n",
              "}\n",
              "\n",
              "#sk-container-id-20 div.sk-parallel-item {\n",
              "  display: flex;\n",
              "  flex-direction: column;\n",
              "}\n",
              "\n",
              "#sk-container-id-20 div.sk-parallel-item:first-child::after {\n",
              "  align-self: flex-end;\n",
              "  width: 50%;\n",
              "}\n",
              "\n",
              "#sk-container-id-20 div.sk-parallel-item:last-child::after {\n",
              "  align-self: flex-start;\n",
              "  width: 50%;\n",
              "}\n",
              "\n",
              "#sk-container-id-20 div.sk-parallel-item:only-child::after {\n",
              "  width: 0;\n",
              "}\n",
              "\n",
              "/* Serial-specific style estimator block */\n",
              "\n",
              "#sk-container-id-20 div.sk-serial {\n",
              "  display: flex;\n",
              "  flex-direction: column;\n",
              "  align-items: center;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "  padding-right: 1em;\n",
              "  padding-left: 1em;\n",
              "}\n",
              "\n",
              "\n",
              "/* Toggleable style: style used for estimator/Pipeline/ColumnTransformer box that is\n",
              "clickable and can be expanded/collapsed.\n",
              "- Pipeline and ColumnTransformer use this feature and define the default style\n",
              "- Estimators will overwrite some part of the style using the `sk-estimator` class\n",
              "*/\n",
              "\n",
              "/* Pipeline and ColumnTransformer style (default) */\n",
              "\n",
              "#sk-container-id-20 div.sk-toggleable {\n",
              "  /* Default theme specific background. It is overwritten whether we have a\n",
              "  specific estimator or a Pipeline/ColumnTransformer */\n",
              "  background-color: var(--sklearn-color-background);\n",
              "}\n",
              "\n",
              "/* Toggleable label */\n",
              "#sk-container-id-20 label.sk-toggleable__label {\n",
              "  cursor: pointer;\n",
              "  display: flex;\n",
              "  width: 100%;\n",
              "  margin-bottom: 0;\n",
              "  padding: 0.5em;\n",
              "  box-sizing: border-box;\n",
              "  text-align: center;\n",
              "  align-items: start;\n",
              "  justify-content: space-between;\n",
              "  gap: 0.5em;\n",
              "}\n",
              "\n",
              "#sk-container-id-20 label.sk-toggleable__label .caption {\n",
              "  font-size: 0.6rem;\n",
              "  font-weight: lighter;\n",
              "  color: var(--sklearn-color-text-muted);\n",
              "}\n",
              "\n",
              "#sk-container-id-20 label.sk-toggleable__label-arrow:before {\n",
              "  /* Arrow on the left of the label */\n",
              "  content: \"▸\";\n",
              "  float: left;\n",
              "  margin-right: 0.25em;\n",
              "  color: var(--sklearn-color-icon);\n",
              "}\n",
              "\n",
              "#sk-container-id-20 label.sk-toggleable__label-arrow:hover:before {\n",
              "  color: var(--sklearn-color-text);\n",
              "}\n",
              "\n",
              "/* Toggleable content - dropdown */\n",
              "\n",
              "#sk-container-id-20 div.sk-toggleable__content {\n",
              "  max-height: 0;\n",
              "  max-width: 0;\n",
              "  overflow: hidden;\n",
              "  text-align: left;\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-20 div.sk-toggleable__content.fitted {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-20 div.sk-toggleable__content pre {\n",
              "  margin: 0.2em;\n",
              "  border-radius: 0.25em;\n",
              "  color: var(--sklearn-color-text);\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-20 div.sk-toggleable__content.fitted pre {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-20 input.sk-toggleable__control:checked~div.sk-toggleable__content {\n",
              "  /* Expand drop-down */\n",
              "  max-height: 200px;\n",
              "  max-width: 100%;\n",
              "  overflow: auto;\n",
              "}\n",
              "\n",
              "#sk-container-id-20 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {\n",
              "  content: \"▾\";\n",
              "}\n",
              "\n",
              "/* Pipeline/ColumnTransformer-specific style */\n",
              "\n",
              "#sk-container-id-20 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
              "  color: var(--sklearn-color-text);\n",
              "  background-color: var(--sklearn-color-unfitted-level-2);\n",
              "}\n",
              "\n",
              "#sk-container-id-20 div.sk-label.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
              "  background-color: var(--sklearn-color-fitted-level-2);\n",
              "}\n",
              "\n",
              "/* Estimator-specific style */\n",
              "\n",
              "/* Colorize estimator box */\n",
              "#sk-container-id-20 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-2);\n",
              "}\n",
              "\n",
              "#sk-container-id-20 div.sk-estimator.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-2);\n",
              "}\n",
              "\n",
              "#sk-container-id-20 div.sk-label label.sk-toggleable__label,\n",
              "#sk-container-id-20 div.sk-label label {\n",
              "  /* The background is the default theme color */\n",
              "  color: var(--sklearn-color-text-on-default-background);\n",
              "}\n",
              "\n",
              "/* On hover, darken the color of the background */\n",
              "#sk-container-id-20 div.sk-label:hover label.sk-toggleable__label {\n",
              "  color: var(--sklearn-color-text);\n",
              "  background-color: var(--sklearn-color-unfitted-level-2);\n",
              "}\n",
              "\n",
              "/* Label box, darken color on hover, fitted */\n",
              "#sk-container-id-20 div.sk-label.fitted:hover label.sk-toggleable__label.fitted {\n",
              "  color: var(--sklearn-color-text);\n",
              "  background-color: var(--sklearn-color-fitted-level-2);\n",
              "}\n",
              "\n",
              "/* Estimator label */\n",
              "\n",
              "#sk-container-id-20 div.sk-label label {\n",
              "  font-family: monospace;\n",
              "  font-weight: bold;\n",
              "  display: inline-block;\n",
              "  line-height: 1.2em;\n",
              "}\n",
              "\n",
              "#sk-container-id-20 div.sk-label-container {\n",
              "  text-align: center;\n",
              "}\n",
              "\n",
              "/* Estimator-specific */\n",
              "#sk-container-id-20 div.sk-estimator {\n",
              "  font-family: monospace;\n",
              "  border: 1px dotted var(--sklearn-color-border-box);\n",
              "  border-radius: 0.25em;\n",
              "  box-sizing: border-box;\n",
              "  margin-bottom: 0.5em;\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-20 div.sk-estimator.fitted {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-0);\n",
              "}\n",
              "\n",
              "/* on hover */\n",
              "#sk-container-id-20 div.sk-estimator:hover {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-2);\n",
              "}\n",
              "\n",
              "#sk-container-id-20 div.sk-estimator.fitted:hover {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-2);\n",
              "}\n",
              "\n",
              "/* Specification for estimator info (e.g. \"i\" and \"?\") */\n",
              "\n",
              "/* Common style for \"i\" and \"?\" */\n",
              "\n",
              ".sk-estimator-doc-link,\n",
              "a:link.sk-estimator-doc-link,\n",
              "a:visited.sk-estimator-doc-link {\n",
              "  float: right;\n",
              "  font-size: smaller;\n",
              "  line-height: 1em;\n",
              "  font-family: monospace;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "  border-radius: 1em;\n",
              "  height: 1em;\n",
              "  width: 1em;\n",
              "  text-decoration: none !important;\n",
              "  margin-left: 0.5em;\n",
              "  text-align: center;\n",
              "  /* unfitted */\n",
              "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
              "  color: var(--sklearn-color-unfitted-level-1);\n",
              "}\n",
              "\n",
              ".sk-estimator-doc-link.fitted,\n",
              "a:link.sk-estimator-doc-link.fitted,\n",
              "a:visited.sk-estimator-doc-link.fitted {\n",
              "  /* fitted */\n",
              "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
              "  color: var(--sklearn-color-fitted-level-1);\n",
              "}\n",
              "\n",
              "/* On hover */\n",
              "div.sk-estimator:hover .sk-estimator-doc-link:hover,\n",
              ".sk-estimator-doc-link:hover,\n",
              "div.sk-label-container:hover .sk-estimator-doc-link:hover,\n",
              ".sk-estimator-doc-link:hover {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-3);\n",
              "  color: var(--sklearn-color-background);\n",
              "  text-decoration: none;\n",
              "}\n",
              "\n",
              "div.sk-estimator.fitted:hover .sk-estimator-doc-link.fitted:hover,\n",
              ".sk-estimator-doc-link.fitted:hover,\n",
              "div.sk-label-container:hover .sk-estimator-doc-link.fitted:hover,\n",
              ".sk-estimator-doc-link.fitted:hover {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-3);\n",
              "  color: var(--sklearn-color-background);\n",
              "  text-decoration: none;\n",
              "}\n",
              "\n",
              "/* Span, style for the box shown on hovering the info icon */\n",
              ".sk-estimator-doc-link span {\n",
              "  display: none;\n",
              "  z-index: 9999;\n",
              "  position: relative;\n",
              "  font-weight: normal;\n",
              "  right: .2ex;\n",
              "  padding: .5ex;\n",
              "  margin: .5ex;\n",
              "  width: min-content;\n",
              "  min-width: 20ex;\n",
              "  max-width: 50ex;\n",
              "  color: var(--sklearn-color-text);\n",
              "  box-shadow: 2pt 2pt 4pt #999;\n",
              "  /* unfitted */\n",
              "  background: var(--sklearn-color-unfitted-level-0);\n",
              "  border: .5pt solid var(--sklearn-color-unfitted-level-3);\n",
              "}\n",
              "\n",
              ".sk-estimator-doc-link.fitted span {\n",
              "  /* fitted */\n",
              "  background: var(--sklearn-color-fitted-level-0);\n",
              "  border: var(--sklearn-color-fitted-level-3);\n",
              "}\n",
              "\n",
              ".sk-estimator-doc-link:hover span {\n",
              "  display: block;\n",
              "}\n",
              "\n",
              "/* \"?\"-specific style due to the `<a>` HTML tag */\n",
              "\n",
              "#sk-container-id-20 a.estimator_doc_link {\n",
              "  float: right;\n",
              "  font-size: 1rem;\n",
              "  line-height: 1em;\n",
              "  font-family: monospace;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "  border-radius: 1rem;\n",
              "  height: 1rem;\n",
              "  width: 1rem;\n",
              "  text-decoration: none;\n",
              "  /* unfitted */\n",
              "  color: var(--sklearn-color-unfitted-level-1);\n",
              "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
              "}\n",
              "\n",
              "#sk-container-id-20 a.estimator_doc_link.fitted {\n",
              "  /* fitted */\n",
              "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
              "  color: var(--sklearn-color-fitted-level-1);\n",
              "}\n",
              "\n",
              "/* On hover */\n",
              "#sk-container-id-20 a.estimator_doc_link:hover {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-3);\n",
              "  color: var(--sklearn-color-background);\n",
              "  text-decoration: none;\n",
              "}\n",
              "\n",
              "#sk-container-id-20 a.estimator_doc_link.fitted:hover {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-3);\n",
              "}\n",
              "</style><div id=\"sk-container-id-20\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>DecisionTreeClassifier(random_state=42)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-20\" type=\"checkbox\" checked><label for=\"sk-estimator-id-20\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow\"><div><div>DecisionTreeClassifier</div></div><div><a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.6/modules/generated/sklearn.tree.DecisionTreeClassifier.html\">?<span>Documentation for DecisionTreeClassifier</span></a><span class=\"sk-estimator-doc-link fitted\">i<span>Fitted</span></span></div></label><div class=\"sk-toggleable__content fitted\"><pre>DecisionTreeClassifier(random_state=42)</pre></div> </div></div></div></div>"
            ]
          },
          "metadata": {},
          "execution_count": 326
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Random Forest\n",
        "rf_model = RandomForestClassifier(random_state=42)\n",
        "rf_model.fit(X_train, y_train)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 80
        },
        "id": "gGGV8VND5H0P",
        "outputId": "8f1190c4-5474-4be3-ed3b-cdae54dc5c60"
      },
      "execution_count": 327,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "RandomForestClassifier(random_state=42)"
            ],
            "text/html": [
              "<style>#sk-container-id-21 {\n",
              "  /* Definition of color scheme common for light and dark mode */\n",
              "  --sklearn-color-text: #000;\n",
              "  --sklearn-color-text-muted: #666;\n",
              "  --sklearn-color-line: gray;\n",
              "  /* Definition of color scheme for unfitted estimators */\n",
              "  --sklearn-color-unfitted-level-0: #fff5e6;\n",
              "  --sklearn-color-unfitted-level-1: #f6e4d2;\n",
              "  --sklearn-color-unfitted-level-2: #ffe0b3;\n",
              "  --sklearn-color-unfitted-level-3: chocolate;\n",
              "  /* Definition of color scheme for fitted estimators */\n",
              "  --sklearn-color-fitted-level-0: #f0f8ff;\n",
              "  --sklearn-color-fitted-level-1: #d4ebff;\n",
              "  --sklearn-color-fitted-level-2: #b3dbfd;\n",
              "  --sklearn-color-fitted-level-3: cornflowerblue;\n",
              "\n",
              "  /* Specific color for light theme */\n",
              "  --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
              "  --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, white)));\n",
              "  --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n",
              "  --sklearn-color-icon: #696969;\n",
              "\n",
              "  @media (prefers-color-scheme: dark) {\n",
              "    /* Redefinition of color scheme for dark theme */\n",
              "    --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
              "    --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, #111)));\n",
              "    --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n",
              "    --sklearn-color-icon: #878787;\n",
              "  }\n",
              "}\n",
              "\n",
              "#sk-container-id-21 {\n",
              "  color: var(--sklearn-color-text);\n",
              "}\n",
              "\n",
              "#sk-container-id-21 pre {\n",
              "  padding: 0;\n",
              "}\n",
              "\n",
              "#sk-container-id-21 input.sk-hidden--visually {\n",
              "  border: 0;\n",
              "  clip: rect(1px 1px 1px 1px);\n",
              "  clip: rect(1px, 1px, 1px, 1px);\n",
              "  height: 1px;\n",
              "  margin: -1px;\n",
              "  overflow: hidden;\n",
              "  padding: 0;\n",
              "  position: absolute;\n",
              "  width: 1px;\n",
              "}\n",
              "\n",
              "#sk-container-id-21 div.sk-dashed-wrapped {\n",
              "  border: 1px dashed var(--sklearn-color-line);\n",
              "  margin: 0 0.4em 0.5em 0.4em;\n",
              "  box-sizing: border-box;\n",
              "  padding-bottom: 0.4em;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "}\n",
              "\n",
              "#sk-container-id-21 div.sk-container {\n",
              "  /* jupyter's `normalize.less` sets `[hidden] { display: none; }`\n",
              "     but bootstrap.min.css set `[hidden] { display: none !important; }`\n",
              "     so we also need the `!important` here to be able to override the\n",
              "     default hidden behavior on the sphinx rendered scikit-learn.org.\n",
              "     See: https://github.com/scikit-learn/scikit-learn/issues/21755 */\n",
              "  display: inline-block !important;\n",
              "  position: relative;\n",
              "}\n",
              "\n",
              "#sk-container-id-21 div.sk-text-repr-fallback {\n",
              "  display: none;\n",
              "}\n",
              "\n",
              "div.sk-parallel-item,\n",
              "div.sk-serial,\n",
              "div.sk-item {\n",
              "  /* draw centered vertical line to link estimators */\n",
              "  background-image: linear-gradient(var(--sklearn-color-text-on-default-background), var(--sklearn-color-text-on-default-background));\n",
              "  background-size: 2px 100%;\n",
              "  background-repeat: no-repeat;\n",
              "  background-position: center center;\n",
              "}\n",
              "\n",
              "/* Parallel-specific style estimator block */\n",
              "\n",
              "#sk-container-id-21 div.sk-parallel-item::after {\n",
              "  content: \"\";\n",
              "  width: 100%;\n",
              "  border-bottom: 2px solid var(--sklearn-color-text-on-default-background);\n",
              "  flex-grow: 1;\n",
              "}\n",
              "\n",
              "#sk-container-id-21 div.sk-parallel {\n",
              "  display: flex;\n",
              "  align-items: stretch;\n",
              "  justify-content: center;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "  position: relative;\n",
              "}\n",
              "\n",
              "#sk-container-id-21 div.sk-parallel-item {\n",
              "  display: flex;\n",
              "  flex-direction: column;\n",
              "}\n",
              "\n",
              "#sk-container-id-21 div.sk-parallel-item:first-child::after {\n",
              "  align-self: flex-end;\n",
              "  width: 50%;\n",
              "}\n",
              "\n",
              "#sk-container-id-21 div.sk-parallel-item:last-child::after {\n",
              "  align-self: flex-start;\n",
              "  width: 50%;\n",
              "}\n",
              "\n",
              "#sk-container-id-21 div.sk-parallel-item:only-child::after {\n",
              "  width: 0;\n",
              "}\n",
              "\n",
              "/* Serial-specific style estimator block */\n",
              "\n",
              "#sk-container-id-21 div.sk-serial {\n",
              "  display: flex;\n",
              "  flex-direction: column;\n",
              "  align-items: center;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "  padding-right: 1em;\n",
              "  padding-left: 1em;\n",
              "}\n",
              "\n",
              "\n",
              "/* Toggleable style: style used for estimator/Pipeline/ColumnTransformer box that is\n",
              "clickable and can be expanded/collapsed.\n",
              "- Pipeline and ColumnTransformer use this feature and define the default style\n",
              "- Estimators will overwrite some part of the style using the `sk-estimator` class\n",
              "*/\n",
              "\n",
              "/* Pipeline and ColumnTransformer style (default) */\n",
              "\n",
              "#sk-container-id-21 div.sk-toggleable {\n",
              "  /* Default theme specific background. It is overwritten whether we have a\n",
              "  specific estimator or a Pipeline/ColumnTransformer */\n",
              "  background-color: var(--sklearn-color-background);\n",
              "}\n",
              "\n",
              "/* Toggleable label */\n",
              "#sk-container-id-21 label.sk-toggleable__label {\n",
              "  cursor: pointer;\n",
              "  display: flex;\n",
              "  width: 100%;\n",
              "  margin-bottom: 0;\n",
              "  padding: 0.5em;\n",
              "  box-sizing: border-box;\n",
              "  text-align: center;\n",
              "  align-items: start;\n",
              "  justify-content: space-between;\n",
              "  gap: 0.5em;\n",
              "}\n",
              "\n",
              "#sk-container-id-21 label.sk-toggleable__label .caption {\n",
              "  font-size: 0.6rem;\n",
              "  font-weight: lighter;\n",
              "  color: var(--sklearn-color-text-muted);\n",
              "}\n",
              "\n",
              "#sk-container-id-21 label.sk-toggleable__label-arrow:before {\n",
              "  /* Arrow on the left of the label */\n",
              "  content: \"▸\";\n",
              "  float: left;\n",
              "  margin-right: 0.25em;\n",
              "  color: var(--sklearn-color-icon);\n",
              "}\n",
              "\n",
              "#sk-container-id-21 label.sk-toggleable__label-arrow:hover:before {\n",
              "  color: var(--sklearn-color-text);\n",
              "}\n",
              "\n",
              "/* Toggleable content - dropdown */\n",
              "\n",
              "#sk-container-id-21 div.sk-toggleable__content {\n",
              "  max-height: 0;\n",
              "  max-width: 0;\n",
              "  overflow: hidden;\n",
              "  text-align: left;\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-21 div.sk-toggleable__content.fitted {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-21 div.sk-toggleable__content pre {\n",
              "  margin: 0.2em;\n",
              "  border-radius: 0.25em;\n",
              "  color: var(--sklearn-color-text);\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-21 div.sk-toggleable__content.fitted pre {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-21 input.sk-toggleable__control:checked~div.sk-toggleable__content {\n",
              "  /* Expand drop-down */\n",
              "  max-height: 200px;\n",
              "  max-width: 100%;\n",
              "  overflow: auto;\n",
              "}\n",
              "\n",
              "#sk-container-id-21 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {\n",
              "  content: \"▾\";\n",
              "}\n",
              "\n",
              "/* Pipeline/ColumnTransformer-specific style */\n",
              "\n",
              "#sk-container-id-21 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
              "  color: var(--sklearn-color-text);\n",
              "  background-color: var(--sklearn-color-unfitted-level-2);\n",
              "}\n",
              "\n",
              "#sk-container-id-21 div.sk-label.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
              "  background-color: var(--sklearn-color-fitted-level-2);\n",
              "}\n",
              "\n",
              "/* Estimator-specific style */\n",
              "\n",
              "/* Colorize estimator box */\n",
              "#sk-container-id-21 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-2);\n",
              "}\n",
              "\n",
              "#sk-container-id-21 div.sk-estimator.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-2);\n",
              "}\n",
              "\n",
              "#sk-container-id-21 div.sk-label label.sk-toggleable__label,\n",
              "#sk-container-id-21 div.sk-label label {\n",
              "  /* The background is the default theme color */\n",
              "  color: var(--sklearn-color-text-on-default-background);\n",
              "}\n",
              "\n",
              "/* On hover, darken the color of the background */\n",
              "#sk-container-id-21 div.sk-label:hover label.sk-toggleable__label {\n",
              "  color: var(--sklearn-color-text);\n",
              "  background-color: var(--sklearn-color-unfitted-level-2);\n",
              "}\n",
              "\n",
              "/* Label box, darken color on hover, fitted */\n",
              "#sk-container-id-21 div.sk-label.fitted:hover label.sk-toggleable__label.fitted {\n",
              "  color: var(--sklearn-color-text);\n",
              "  background-color: var(--sklearn-color-fitted-level-2);\n",
              "}\n",
              "\n",
              "/* Estimator label */\n",
              "\n",
              "#sk-container-id-21 div.sk-label label {\n",
              "  font-family: monospace;\n",
              "  font-weight: bold;\n",
              "  display: inline-block;\n",
              "  line-height: 1.2em;\n",
              "}\n",
              "\n",
              "#sk-container-id-21 div.sk-label-container {\n",
              "  text-align: center;\n",
              "}\n",
              "\n",
              "/* Estimator-specific */\n",
              "#sk-container-id-21 div.sk-estimator {\n",
              "  font-family: monospace;\n",
              "  border: 1px dotted var(--sklearn-color-border-box);\n",
              "  border-radius: 0.25em;\n",
              "  box-sizing: border-box;\n",
              "  margin-bottom: 0.5em;\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-0);\n",
              "}\n",
              "\n",
              "#sk-container-id-21 div.sk-estimator.fitted {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-0);\n",
              "}\n",
              "\n",
              "/* on hover */\n",
              "#sk-container-id-21 div.sk-estimator:hover {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-2);\n",
              "}\n",
              "\n",
              "#sk-container-id-21 div.sk-estimator.fitted:hover {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-2);\n",
              "}\n",
              "\n",
              "/* Specification for estimator info (e.g. \"i\" and \"?\") */\n",
              "\n",
              "/* Common style for \"i\" and \"?\" */\n",
              "\n",
              ".sk-estimator-doc-link,\n",
              "a:link.sk-estimator-doc-link,\n",
              "a:visited.sk-estimator-doc-link {\n",
              "  float: right;\n",
              "  font-size: smaller;\n",
              "  line-height: 1em;\n",
              "  font-family: monospace;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "  border-radius: 1em;\n",
              "  height: 1em;\n",
              "  width: 1em;\n",
              "  text-decoration: none !important;\n",
              "  margin-left: 0.5em;\n",
              "  text-align: center;\n",
              "  /* unfitted */\n",
              "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
              "  color: var(--sklearn-color-unfitted-level-1);\n",
              "}\n",
              "\n",
              ".sk-estimator-doc-link.fitted,\n",
              "a:link.sk-estimator-doc-link.fitted,\n",
              "a:visited.sk-estimator-doc-link.fitted {\n",
              "  /* fitted */\n",
              "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
              "  color: var(--sklearn-color-fitted-level-1);\n",
              "}\n",
              "\n",
              "/* On hover */\n",
              "div.sk-estimator:hover .sk-estimator-doc-link:hover,\n",
              ".sk-estimator-doc-link:hover,\n",
              "div.sk-label-container:hover .sk-estimator-doc-link:hover,\n",
              ".sk-estimator-doc-link:hover {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-3);\n",
              "  color: var(--sklearn-color-background);\n",
              "  text-decoration: none;\n",
              "}\n",
              "\n",
              "div.sk-estimator.fitted:hover .sk-estimator-doc-link.fitted:hover,\n",
              ".sk-estimator-doc-link.fitted:hover,\n",
              "div.sk-label-container:hover .sk-estimator-doc-link.fitted:hover,\n",
              ".sk-estimator-doc-link.fitted:hover {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-3);\n",
              "  color: var(--sklearn-color-background);\n",
              "  text-decoration: none;\n",
              "}\n",
              "\n",
              "/* Span, style for the box shown on hovering the info icon */\n",
              ".sk-estimator-doc-link span {\n",
              "  display: none;\n",
              "  z-index: 9999;\n",
              "  position: relative;\n",
              "  font-weight: normal;\n",
              "  right: .2ex;\n",
              "  padding: .5ex;\n",
              "  margin: .5ex;\n",
              "  width: min-content;\n",
              "  min-width: 20ex;\n",
              "  max-width: 50ex;\n",
              "  color: var(--sklearn-color-text);\n",
              "  box-shadow: 2pt 2pt 4pt #999;\n",
              "  /* unfitted */\n",
              "  background: var(--sklearn-color-unfitted-level-0);\n",
              "  border: .5pt solid var(--sklearn-color-unfitted-level-3);\n",
              "}\n",
              "\n",
              ".sk-estimator-doc-link.fitted span {\n",
              "  /* fitted */\n",
              "  background: var(--sklearn-color-fitted-level-0);\n",
              "  border: var(--sklearn-color-fitted-level-3);\n",
              "}\n",
              "\n",
              ".sk-estimator-doc-link:hover span {\n",
              "  display: block;\n",
              "}\n",
              "\n",
              "/* \"?\"-specific style due to the `<a>` HTML tag */\n",
              "\n",
              "#sk-container-id-21 a.estimator_doc_link {\n",
              "  float: right;\n",
              "  font-size: 1rem;\n",
              "  line-height: 1em;\n",
              "  font-family: monospace;\n",
              "  background-color: var(--sklearn-color-background);\n",
              "  border-radius: 1rem;\n",
              "  height: 1rem;\n",
              "  width: 1rem;\n",
              "  text-decoration: none;\n",
              "  /* unfitted */\n",
              "  color: var(--sklearn-color-unfitted-level-1);\n",
              "  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n",
              "}\n",
              "\n",
              "#sk-container-id-21 a.estimator_doc_link.fitted {\n",
              "  /* fitted */\n",
              "  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n",
              "  color: var(--sklearn-color-fitted-level-1);\n",
              "}\n",
              "\n",
              "/* On hover */\n",
              "#sk-container-id-21 a.estimator_doc_link:hover {\n",
              "  /* unfitted */\n",
              "  background-color: var(--sklearn-color-unfitted-level-3);\n",
              "  color: var(--sklearn-color-background);\n",
              "  text-decoration: none;\n",
              "}\n",
              "\n",
              "#sk-container-id-21 a.estimator_doc_link.fitted:hover {\n",
              "  /* fitted */\n",
              "  background-color: var(--sklearn-color-fitted-level-3);\n",
              "}\n",
              "</style><div id=\"sk-container-id-21\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>RandomForestClassifier(random_state=42)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-21\" type=\"checkbox\" checked><label for=\"sk-estimator-id-21\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow\"><div><div>RandomForestClassifier</div></div><div><a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.6/modules/generated/sklearn.ensemble.RandomForestClassifier.html\">?<span>Documentation for RandomForestClassifier</span></a><span class=\"sk-estimator-doc-link fitted\">i<span>Fitted</span></span></div></label><div class=\"sk-toggleable__content fitted\"><pre>RandomForestClassifier(random_state=42)</pre></div> </div></div></div></div>"
            ]
          },
          "metadata": {},
          "execution_count": 327
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Naive Bayes\n",
        "nb_pred = nb_model.predict(X_test)\n",
        "nb_accuracy = accuracy_score(y_test, nb_pred)\n",
        "nb_cm = confusion_matrix(y_test, nb_pred)\n",
        "\n",
        "# Decision Tree\n",
        "dt_pred = dt_model.predict(X_test)\n",
        "dt_accuracy = accuracy_score(y_test, dt_pred)\n",
        "dt_cm = confusion_matrix(y_test, dt_pred)\n",
        "\n",
        "# Random Forest\n",
        "rf_pred = rf_model.predict(X_test)\n",
        "rf_accuracy = accuracy_score(y_test, rf_pred)\n",
        "rf_cm = confusion_matrix(y_test, rf_pred)"
      ],
      "metadata": {
        "id": "EypQWu8W3YLQ"
      },
      "execution_count": 328,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "print(confusion_matrix(y_test, nb_pred))\n",
        "print('-'*60)\n",
        "print(classification_report(y_test, nb_pred))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "ZeQObUlb6bZ-",
        "outputId": "abac0678-f1f0-463d-aec5-290b273759d1"
      },
      "execution_count": 329,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "[[241 153]\n",
            " [219 187]]\n",
            "------------------------------------------------------------\n",
            "              precision    recall  f1-score   support\n",
            "\n",
            "           0       0.52      0.61      0.56       394\n",
            "           1       0.55      0.46      0.50       406\n",
            "\n",
            "    accuracy                           0.54       800\n",
            "   macro avg       0.54      0.54      0.53       800\n",
            "weighted avg       0.54      0.54      0.53       800\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "print(confusion_matrix(y_test, dt_pred))\n",
        "print('-'*60)\n",
        "print(classification_report(y_test, dt_pred))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "wTUYfBl_7UgH",
        "outputId": "865a69a8-390b-4a8a-c2fa-9c2d654199ca"
      },
      "execution_count": 330,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "[[246 148]\n",
            " [166 240]]\n",
            "------------------------------------------------------------\n",
            "              precision    recall  f1-score   support\n",
            "\n",
            "           0       0.60      0.62      0.61       394\n",
            "           1       0.62      0.59      0.60       406\n",
            "\n",
            "    accuracy                           0.61       800\n",
            "   macro avg       0.61      0.61      0.61       800\n",
            "weighted avg       0.61      0.61      0.61       800\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "print(confusion_matrix(y_test, rf_pred))\n",
        "print('-'*60)\n",
        "print(classification_report(y_test, rf_pred))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "nig7-Mun8ZPp",
        "outputId": "a06d6801-c325-4c00-96fb-a00ac7e20ad1"
      },
      "execution_count": 331,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "[[281 113]\n",
            " [121 285]]\n",
            "------------------------------------------------------------\n",
            "              precision    recall  f1-score   support\n",
            "\n",
            "           0       0.70      0.71      0.71       394\n",
            "           1       0.72      0.70      0.71       406\n",
            "\n",
            "    accuracy                           0.71       800\n",
            "   macro avg       0.71      0.71      0.71       800\n",
            "weighted avg       0.71      0.71      0.71       800\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "def print_confusion_matrix(cm, model_name):\n",
        "    cm_df = pd.DataFrame(cm, index=['Not Potable', 'Potable'], columns=['Not Potable', 'Potable'])\n",
        "    plt.figure(figsize=(6, 4))\n",
        "    sns.heatmap(cm_df, annot=True, fmt=\"d\", cmap=\"Blues\")\n",
        "    plt.title(f\"Confusion Matrix - {model_name}\")\n",
        "    plt.ylabel(\"Actual\")\n",
        "    plt.xlabel(\"Predicted\")\n",
        "    plt.show()\n",
        "\n",
        "# Cetak confusion matrix dengan label\n",
        "print_confusion_matrix(nb_cm, \"Logistic Regression\")\n",
        "print_confusion_matrix(dt_cm, \"Decision Tree\")\n",
        "print_confusion_matrix(rf_cm, \"Random Forest\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "collapsed": true,
        "id": "uxKvVMJ83alQ",
        "outputId": "0f9b4b9f-d7e4-4aca-c74e-272301d6cd08"
      },
      "execution_count": 332,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 600x400 with 2 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 600x400 with 2 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 600x400 with 2 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# 8.Evaluasi"
      ],
      "metadata": {
        "id": "4Y9DC3TN98Tm"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Normalisasi data\n",
        "from sklearn.preprocessing import MinMaxScaler\n",
        "scaler = MinMaxScaler()\n",
        "X_train_scaled = scaler.fit_transform(X_train)\n",
        "X_test_scaled = scaler.transform(X_test)\n",
        "\n",
        "# Latih ulang model dengan data normalisasi\n",
        "nb_model.fit(X_train_scaled, y_train)\n",
        "dt_model.fit(X_train_scaled, y_train)\n",
        "rf_model.fit(X_train_scaled, y_train)\n",
        "\n",
        "# Prediksi dan hitung akurasi setelah normalisasi\n",
        "nb_pred_scaled = nb_model.predict(X_test_scaled)\n",
        "dt_pred_scaled = dt_model.predict(X_test_scaled)\n",
        "rf_pred_scaled = rf_model.predict(X_test_scaled)\n",
        "\n",
        "nb_accuracy_scaled = accuracy_score(y_test, nb_pred_scaled)\n",
        "dt_accuracy_scaled = accuracy_score(y_test, dt_pred_scaled)\n",
        "rf_accuracy_scaled = accuracy_score(y_test, rf_pred_scaled)\n",
        "\n",
        "# Tampilkan hasil\n",
        "print(\"Akurasi Sebelum Normalisasi:\")\n",
        "print(\"Naive Bayes:\", nb_accuracy)\n",
        "print(\"Decision Tree:\", dt_accuracy)\n",
        "print(\"Random Forest:\", rf_accuracy)\n",
        "\n",
        "print(\"\\nAkurasi Setelah Normalisasi:\")\n",
        "print(\"Naive Bayes:\", nb_accuracy_scaled)\n",
        "print(\"Decision Tree:\", dt_accuracy_scaled)\n",
        "print(\"Random Forest:\", rf_accuracy_scaled)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "857VQfy29_N1",
        "outputId": "c67f9004-3cbd-467e-9b74-e6f92f050514"
      },
      "execution_count": 333,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Akurasi Sebelum Normalisasi:\n",
            "Naive Bayes: 0.535\n",
            "Decision Tree: 0.6075\n",
            "Random Forest: 0.7075\n",
            "\n",
            "Akurasi Setelah Normalisasi:\n",
            "Naive Bayes: 0.54375\n",
            "Decision Tree: 0.6075\n",
            "Random Forest: 0.7075\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Data sebelum normalisasi\n",
        "model_comp1 = pd.DataFrame({'Model': ['Naive Bayes','Decision Tree','Random Forest'], 'Accuracy': [nb_accuracy*100, dt_accuracy*100, rf_accuracy*100]})\n",
        "\n",
        "# Data setelah normalisasi\n",
        "model_comp2 = pd.DataFrame({'Model': ['Naive Bayes','Decision Tree','Random Forest'], 'Accuracy': [nb_accuracy_scaled*100, dt_accuracy_scaled*100, rf_accuracy_scaled*100]})\n",
        "\n",
        "fig, axes = plt.subplots(1, 2, figsize=(12, 6))  # 1 baris, 2 kolom\n",
        "\n",
        "# Bar plot sebelum normalisasi\n",
        "bars1 = axes[0].bar(model_comp1['Model'], model_comp1['Accuracy'], color=['red', 'green', 'blue'])\n",
        "axes[0].set_title('Akurasi kualitas air sebelum Normalisasi')\n",
        "axes[0].set_xlabel('Model')\n",
        "axes[0].set_ylabel('Accuracy (%)')\n",
        "axes[0].set_xticks([0, 1, 2])  # Menetapkan label sumbu-x (kategori 0 dan 1)\n",
        "\n",
        "# Bar plot setelah normalisasi\n",
        "bars2 = axes[1].bar(model_comp2['Model'], model_comp2['Accuracy'], color=['red', 'green', 'blue'])\n",
        "axes[1].set_title('Akurasi kualitas air sesudah Normalisasi')\n",
        "axes[1].set_xlabel('Model')\n",
        "axes[1].set_ylabel('Accuracy (%)')\n",
        "axes[1].set_xticks([0, 1, 2])  # Menetapkan label sumbu-x (kategori 0 dan 1)\n",
        "\n",
        "plt.tight_layout()  # Mengatur layout agar subplot tidak saling tumpang tindih\n",
        "\n",
        "for bar in bars1.patches:\n",
        "    yval = bar.get_height()\n",
        "    axes[0].text(bar.get_x() + bar.get_width()/2, yval, round(yval, 2), ha='center', va='bottom')\n",
        "\n",
        "for bar in bars2.patches:\n",
        "    yval = bar.get_height()\n",
        "    axes[1].text(bar.get_x() + bar.get_width()/2, yval, round(yval, 2), ha='center', va='bottom')\n",
        "\n",
        "plt.show()  # Menampilkan plot"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 462
        },
        "id": "XLC_uq1zpLef",
        "outputId": "c5d080f0-7e69-4693-f693-3079c1fd7b59"
      },
      "execution_count": 334,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1200x600 with 2 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "# 9.Kesimpulan"
      ],
      "metadata": {
        "id": "JLo-B-9ntaLD"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "1. Tingkat Akurasi Setiap Algoritma\n",
        "\n",
        "Algoritma\tAkurasi\n",
        "\n",
        "Naive Bayes = 53,5%\n",
        "\n",
        "Decision Tree = 60,75%\n",
        "\n",
        "Random Forest = 70,75%\n",
        "\n",
        "2. Keunggulan dan Keterbatasan\n",
        "\n",
        "A. Naive Bayes:\n",
        "\n",
        "Keunggulan: model yang sederhana, namun dapat bersaing dengan model algoritma lainnya.\n",
        "\n",
        "Keterbatasan:\n",
        "\n",
        "memiliki masalah probabilitas nol, terutama saat Anda menemukan kata-kata dalam data pengujian untuk kelas tertentu yang tidak ada dalam data pelatihan.\n",
        "\n",
        "B. Decision Tree:\n",
        "\n",
        "Keunggulan: Mudah diinterpretasi, dapat menangani data non-linear dan kategorikal.\n",
        "\n",
        "Keterbatasan: Rentan terhadap overfitting, sensitif terhadap perubahan kecil dalam data.\n",
        "\n",
        "C. Random Forest:\n",
        "\n",
        "Keunggulan: Akurasi tinggi, robust terhadap overfitting, dapat menangani data non-linear.\n",
        "\n",
        "Keterbatasan: Lebih kompleks, interpretasi model lebih sulit, komputasi lebih mahal.\n",
        "\n",
        "3. Rekomendasi Algoritma\n",
        "\n",
        "Berdasarkan hasil analisis, Random Forest direkomendasikan sebagai algoritma yang paling efektif untuk memprediksi kualitas air dalam kasus ini.\n",
        "\n",
        "Alasan:\n",
        "\n",
        "Akurasi Tinggi: Random Forest mencapai akurasi tertinggi (70,75%) di antara algoritma yang diuji.\n",
        "\n",
        "Robust: Algoritma ini relatif robust terhadap overfitting karena menggunakan ensemble learning dengan menggabungkan beberapa decision tree.\n",
        "\n",
        "Penanganan Data Non-linear: Random Forest dapat memodelkan hubungan non-linear antara fitur dan target, yang penting dalam kasus kualitas air.\n",
        "\n",
        "Meskipun Random Forest memiliki komputasi yang lebih mahal dibandingkan beberapa algoritma lain, akurasi dan robustness-nya menjadikannya pilihan optimal untuk prediksi kualitas air."
      ],
      "metadata": {
        "id": "m7ReJS48tdOK"
      }
    }
  ]
}